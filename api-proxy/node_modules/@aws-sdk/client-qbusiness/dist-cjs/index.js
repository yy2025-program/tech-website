"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  APISchema: () => APISchema,
  APISchemaFilterSensitiveLog: () => APISchemaFilterSensitiveLog,
  APISchemaType: () => APISchemaType,
  AccessDeniedException: () => AccessDeniedException,
  ActionPayloadFieldType: () => ActionPayloadFieldType,
  ApplicationStatus: () => ApplicationStatus,
  AssociatePermissionCommand: () => AssociatePermissionCommand,
  AttachmentStatus: () => AttachmentStatus,
  AttachmentsControlMode: () => AttachmentsControlMode,
  AttributeType: () => AttributeType,
  AttributeValueOperator: () => AttributeValueOperator,
  AudioExtractionStatus: () => AudioExtractionStatus,
  AudioExtractionType: () => AudioExtractionType,
  AutoSubscriptionStatus: () => AutoSubscriptionStatus,
  BatchDeleteDocumentCommand: () => BatchDeleteDocumentCommand,
  BatchPutDocumentCommand: () => BatchPutDocumentCommand,
  BrowserExtension: () => BrowserExtension,
  CancelSubscriptionCommand: () => CancelSubscriptionCommand,
  ChatCommand: () => ChatCommand,
  ChatInputFilterSensitiveLog: () => ChatInputFilterSensitiveLog,
  ChatInputStream: () => ChatInputStream,
  ChatInputStreamFilterSensitiveLog: () => ChatInputStreamFilterSensitiveLog,
  ChatMode: () => ChatMode,
  ChatModeConfiguration: () => ChatModeConfiguration,
  ChatOutputFilterSensitiveLog: () => ChatOutputFilterSensitiveLog,
  ChatOutputStream: () => ChatOutputStream,
  ChatOutputStreamFilterSensitiveLog: () => ChatOutputStreamFilterSensitiveLog,
  ChatResponseConfigurationStatus: () => ChatResponseConfigurationStatus,
  ChatSyncCommand: () => ChatSyncCommand,
  CheckDocumentAccessCommand: () => CheckDocumentAccessCommand,
  ConflictException: () => ConflictException,
  ContentSource: () => ContentSource,
  ContentType: () => ContentType,
  CopyFromSource: () => CopyFromSource,
  CreateAnonymousWebExperienceUrlCommand: () => CreateAnonymousWebExperienceUrlCommand,
  CreateApplicationCommand: () => CreateApplicationCommand,
  CreateApplicationRequestFilterSensitiveLog: () => CreateApplicationRequestFilterSensitiveLog,
  CreateChatResponseConfigurationCommand: () => CreateChatResponseConfigurationCommand,
  CreateDataAccessorCommand: () => CreateDataAccessorCommand,
  CreateDataAccessorRequestFilterSensitiveLog: () => CreateDataAccessorRequestFilterSensitiveLog,
  CreateDataSourceCommand: () => CreateDataSourceCommand,
  CreateIndexCommand: () => CreateIndexCommand,
  CreatePluginCommand: () => CreatePluginCommand,
  CreatePluginRequestFilterSensitiveLog: () => CreatePluginRequestFilterSensitiveLog,
  CreateRetrieverCommand: () => CreateRetrieverCommand,
  CreateSubscriptionCommand: () => CreateSubscriptionCommand,
  CreateUserCommand: () => CreateUserCommand,
  CreateWebExperienceCommand: () => CreateWebExperienceCommand,
  CreatorModeControl: () => CreatorModeControl,
  CustomPluginConfigurationFilterSensitiveLog: () => CustomPluginConfigurationFilterSensitiveLog,
  DataAccessorAuthenticationConfiguration: () => DataAccessorAuthenticationConfiguration,
  DataAccessorAuthenticationType: () => DataAccessorAuthenticationType,
  DataAccessorFilterSensitiveLog: () => DataAccessorFilterSensitiveLog,
  DataSourceStatus: () => DataSourceStatus,
  DataSourceSyncJobStatus: () => DataSourceSyncJobStatus,
  DeleteApplicationCommand: () => DeleteApplicationCommand,
  DeleteAttachmentCommand: () => DeleteAttachmentCommand,
  DeleteChatControlsConfigurationCommand: () => DeleteChatControlsConfigurationCommand,
  DeleteChatResponseConfigurationCommand: () => DeleteChatResponseConfigurationCommand,
  DeleteConversationCommand: () => DeleteConversationCommand,
  DeleteDataAccessorCommand: () => DeleteDataAccessorCommand,
  DeleteDataSourceCommand: () => DeleteDataSourceCommand,
  DeleteGroupCommand: () => DeleteGroupCommand,
  DeleteIndexCommand: () => DeleteIndexCommand,
  DeletePluginCommand: () => DeletePluginCommand,
  DeleteRetrieverCommand: () => DeleteRetrieverCommand,
  DeleteUserCommand: () => DeleteUserCommand,
  DeleteWebExperienceCommand: () => DeleteWebExperienceCommand,
  DisassociatePermissionCommand: () => DisassociatePermissionCommand,
  DocumentAttributeBoostingConfiguration: () => DocumentAttributeBoostingConfiguration,
  DocumentAttributeBoostingLevel: () => DocumentAttributeBoostingLevel,
  DocumentAttributeValue: () => DocumentAttributeValue,
  DocumentContent: () => DocumentContent,
  DocumentContentOperator: () => DocumentContentOperator,
  DocumentEnrichmentConditionOperator: () => DocumentEnrichmentConditionOperator,
  DocumentStatus: () => DocumentStatus,
  EncryptionConfigurationFilterSensitiveLog: () => EncryptionConfigurationFilterSensitiveLog,
  ErrorCode: () => ErrorCode,
  ExternalResourceException: () => ExternalResourceException,
  GetApplicationCommand: () => GetApplicationCommand,
  GetApplicationResponseFilterSensitiveLog: () => GetApplicationResponseFilterSensitiveLog,
  GetChatControlsConfigurationCommand: () => GetChatControlsConfigurationCommand,
  GetChatResponseConfigurationCommand: () => GetChatResponseConfigurationCommand,
  GetDataAccessorCommand: () => GetDataAccessorCommand,
  GetDataAccessorResponseFilterSensitiveLog: () => GetDataAccessorResponseFilterSensitiveLog,
  GetDataSourceCommand: () => GetDataSourceCommand,
  GetGroupCommand: () => GetGroupCommand,
  GetIndexCommand: () => GetIndexCommand,
  GetMediaCommand: () => GetMediaCommand,
  GetPluginCommand: () => GetPluginCommand,
  GetPluginResponseFilterSensitiveLog: () => GetPluginResponseFilterSensitiveLog,
  GetPolicyCommand: () => GetPolicyCommand,
  GetRetrieverCommand: () => GetRetrieverCommand,
  GetUserCommand: () => GetUserCommand,
  GetWebExperienceCommand: () => GetWebExperienceCommand,
  GroupStatus: () => GroupStatus,
  HallucinationReductionControl: () => HallucinationReductionControl,
  IdentityProviderConfiguration: () => IdentityProviderConfiguration,
  IdentityType: () => IdentityType,
  ImageExtractionStatus: () => ImageExtractionStatus,
  IndexStatus: () => IndexStatus,
  IndexType: () => IndexType,
  InternalServerException: () => InternalServerException,
  LicenseNotFoundException: () => LicenseNotFoundException,
  ListApplicationsCommand: () => ListApplicationsCommand,
  ListAttachmentsCommand: () => ListAttachmentsCommand,
  ListChatResponseConfigurationsCommand: () => ListChatResponseConfigurationsCommand,
  ListConversationsCommand: () => ListConversationsCommand,
  ListDataAccessorsCommand: () => ListDataAccessorsCommand,
  ListDataAccessorsResponseFilterSensitiveLog: () => ListDataAccessorsResponseFilterSensitiveLog,
  ListDataSourceSyncJobsCommand: () => ListDataSourceSyncJobsCommand,
  ListDataSourcesCommand: () => ListDataSourcesCommand,
  ListDocumentsCommand: () => ListDocumentsCommand,
  ListGroupsCommand: () => ListGroupsCommand,
  ListIndicesCommand: () => ListIndicesCommand,
  ListMessagesCommand: () => ListMessagesCommand,
  ListPluginActionsCommand: () => ListPluginActionsCommand,
  ListPluginTypeActionsCommand: () => ListPluginTypeActionsCommand,
  ListPluginTypeMetadataCommand: () => ListPluginTypeMetadataCommand,
  ListPluginsCommand: () => ListPluginsCommand,
  ListRetrieversCommand: () => ListRetrieversCommand,
  ListSubscriptionsCommand: () => ListSubscriptionsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListWebExperiencesCommand: () => ListWebExperiencesCommand,
  MediaTooLargeException: () => MediaTooLargeException,
  MemberRelation: () => MemberRelation,
  MembershipType: () => MembershipType,
  MessageType: () => MessageType,
  MessageUsefulness: () => MessageUsefulness,
  MessageUsefulnessReason: () => MessageUsefulnessReason,
  NumberAttributeBoostingType: () => NumberAttributeBoostingType,
  OrchestrationControl: () => OrchestrationControl,
  PermissionConditionOperator: () => PermissionConditionOperator,
  PersonalizationControlMode: () => PersonalizationControlMode,
  PluginAuthConfiguration: () => PluginAuthConfiguration,
  PluginBuildStatus: () => PluginBuildStatus,
  PluginState: () => PluginState,
  PluginType: () => PluginType,
  PluginTypeCategory: () => PluginTypeCategory,
  Principal: () => Principal,
  PutFeedbackCommand: () => PutFeedbackCommand,
  PutGroupCommand: () => PutGroupCommand,
  QAppsControlMode: () => QAppsControlMode,
  QBusiness: () => QBusiness,
  QBusinessClient: () => QBusinessClient,
  QBusinessServiceException: () => QBusinessServiceException,
  ReadAccessType: () => ReadAccessType,
  ResourceNotFoundException: () => ResourceNotFoundException,
  ResponseConfigurationType: () => ResponseConfigurationType,
  ResponseScope: () => ResponseScope,
  RetrieverConfiguration: () => RetrieverConfiguration,
  RetrieverStatus: () => RetrieverStatus,
  RetrieverType: () => RetrieverType,
  RuleConfiguration: () => RuleConfiguration,
  RuleType: () => RuleType,
  ScoreConfidence: () => ScoreConfidence,
  SearchRelevantContentCommand: () => SearchRelevantContentCommand,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  SourceDetails: () => SourceDetails,
  StartDataSourceSyncJobCommand: () => StartDataSourceSyncJobCommand,
  Status: () => Status,
  StopDataSourceSyncJobCommand: () => StopDataSourceSyncJobCommand,
  StringAttributeValueBoostingLevel: () => StringAttributeValueBoostingLevel,
  SubscriptionPrincipal: () => SubscriptionPrincipal,
  SubscriptionType: () => SubscriptionType,
  SystemMessageType: () => SystemMessageType,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateApplicationCommand: () => UpdateApplicationCommand,
  UpdateChatControlsConfigurationCommand: () => UpdateChatControlsConfigurationCommand,
  UpdateChatResponseConfigurationCommand: () => UpdateChatResponseConfigurationCommand,
  UpdateDataAccessorCommand: () => UpdateDataAccessorCommand,
  UpdateDataAccessorRequestFilterSensitiveLog: () => UpdateDataAccessorRequestFilterSensitiveLog,
  UpdateDataSourceCommand: () => UpdateDataSourceCommand,
  UpdateIndexCommand: () => UpdateIndexCommand,
  UpdatePluginCommand: () => UpdatePluginCommand,
  UpdatePluginRequestFilterSensitiveLog: () => UpdatePluginRequestFilterSensitiveLog,
  UpdateRetrieverCommand: () => UpdateRetrieverCommand,
  UpdateSubscriptionCommand: () => UpdateSubscriptionCommand,
  UpdateUserCommand: () => UpdateUserCommand,
  UpdateWebExperienceCommand: () => UpdateWebExperienceCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  VideoExtractionStatus: () => VideoExtractionStatus,
  VideoExtractionType: () => VideoExtractionType,
  WebExperienceAuthConfiguration: () => WebExperienceAuthConfiguration,
  WebExperienceSamplePromptsControlMode: () => WebExperienceSamplePromptsControlMode,
  WebExperienceStatus: () => WebExperienceStatus,
  __Client: () => import_smithy_client.Client,
  paginateGetChatControlsConfiguration: () => paginateGetChatControlsConfiguration,
  paginateListApplications: () => paginateListApplications,
  paginateListAttachments: () => paginateListAttachments,
  paginateListChatResponseConfigurations: () => paginateListChatResponseConfigurations,
  paginateListConversations: () => paginateListConversations,
  paginateListDataAccessors: () => paginateListDataAccessors,
  paginateListDataSourceSyncJobs: () => paginateListDataSourceSyncJobs,
  paginateListDataSources: () => paginateListDataSources,
  paginateListDocuments: () => paginateListDocuments,
  paginateListGroups: () => paginateListGroups,
  paginateListIndices: () => paginateListIndices,
  paginateListMessages: () => paginateListMessages,
  paginateListPluginActions: () => paginateListPluginActions,
  paginateListPluginTypeActions: () => paginateListPluginTypeActions,
  paginateListPluginTypeMetadata: () => paginateListPluginTypeMetadata,
  paginateListPlugins: () => paginateListPlugins,
  paginateListRetrievers: () => paginateListRetrievers,
  paginateListSubscriptions: () => paginateListSubscriptions,
  paginateListWebExperiences: () => paginateListWebExperiences,
  paginateSearchRelevantContent: () => paginateSearchRelevantContent
});
module.exports = __toCommonJS(index_exports);

// src/QBusinessClient.ts
var import_middleware_eventstream = require("@aws-sdk/middleware-eventstream");
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_eventstream_serde_config_resolver = require("@smithy/eventstream-serde-config-resolver");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "qbusiness"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" }
};

// src/QBusinessClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/QBusinessClient.ts
var QBusinessClient = class extends import_smithy_client.Client {
  static {
    __name(this, "QBusinessClient");
  }
  /**
   * The resolved configuration of QBusinessClient class. This is resolved and normalized from the {@link QBusinessClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_eventstream_serde_config_resolver.resolveEventStreamSerdeConfig)(_config_6);
    const _config_8 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_7);
    const _config_9 = (0, import_middleware_eventstream.resolveEventStreamConfig)(_config_8);
    const _config_10 = resolveRuntimeExtensions(_config_9, configuration?.extensions || []);
    this.config = _config_10;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultQBusinessHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/QBusiness.ts


// src/commands/AssociatePermissionCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/models_0.ts


// src/models/QBusinessServiceException.ts

var QBusinessServiceException = class _QBusinessServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "QBusinessServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _QBusinessServiceException.prototype);
  }
};

// src/models/models_0.ts
var MemberRelation = {
  AND: "AND",
  OR: "OR"
};
var ReadAccessType = {
  ALLOW: "ALLOW",
  DENY: "DENY"
};
var MembershipType = {
  DATASOURCE: "DATASOURCE",
  INDEX: "INDEX"
};
var Principal;
((Principal3) => {
  Principal3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.user !== void 0) return visitor.user(value.user);
    if (value.group !== void 0) return visitor.group(value.group);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Principal || (Principal = {}));
var AccessDeniedException = class _AccessDeniedException extends QBusinessServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
var DocumentAttributeValue;
((DocumentAttributeValue2) => {
  DocumentAttributeValue2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.stringValue !== void 0) return visitor.stringValue(value.stringValue);
    if (value.stringListValue !== void 0) return visitor.stringListValue(value.stringListValue);
    if (value.longValue !== void 0) return visitor.longValue(value.longValue);
    if (value.dateValue !== void 0) return visitor.dateValue(value.dateValue);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DocumentAttributeValue || (DocumentAttributeValue = {}));
var ActionPayloadFieldType = {
  ARRAY: "ARRAY",
  BOOLEAN: "BOOLEAN",
  NUMBER: "NUMBER",
  STRING: "STRING"
};
var PluginType = {
  ASANA: "ASANA",
  ATLASSIAN_CONFLUENCE: "ATLASSIAN_CONFLUENCE",
  CUSTOM: "CUSTOM",
  GOOGLE_CALENDAR: "GOOGLE_CALENDAR",
  JIRA: "JIRA",
  JIRA_CLOUD: "JIRA_CLOUD",
  MICROSOFT_EXCHANGE: "MICROSOFT_EXCHANGE",
  MICROSOFT_TEAMS: "MICROSOFT_TEAMS",
  PAGERDUTY_ADVANCE: "PAGERDUTY_ADVANCE",
  QUICKSIGHT: "QUICKSIGHT",
  SALESFORCE: "SALESFORCE",
  SALESFORCE_CRM: "SALESFORCE_CRM",
  SERVICENOW_NOW_PLATFORM: "SERVICENOW_NOW_PLATFORM",
  SERVICE_NOW: "SERVICE_NOW",
  SMARTSHEET: "SMARTSHEET",
  ZENDESK: "ZENDESK",
  ZENDESK_SUITE: "ZENDESK_SUITE"
};
var APISchema;
((APISchema3) => {
  APISchema3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.payload !== void 0) return visitor.payload(value.payload);
    if (value.s3 !== void 0) return visitor.s3(value.s3);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(APISchema || (APISchema = {}));
var APISchemaType = {
  OPEN_API_V3: "OPEN_API_V3"
};
var IdentityType = {
  ANONYMOUS: "ANONYMOUS",
  AWS_IAM_IDC: "AWS_IAM_IDC",
  AWS_IAM_IDP_OIDC: "AWS_IAM_IDP_OIDC",
  AWS_IAM_IDP_SAML: "AWS_IAM_IDP_SAML",
  AWS_QUICKSIGHT_IDP: "AWS_QUICKSIGHT_IDP"
};
var ApplicationStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var ConflictException = class _ConflictException extends QBusinessServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * <p>The identifier of the resource affected.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource affected.</p>
   * @public
   */
  resourceType;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
var AttachmentsControlMode = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var PersonalizationControlMode = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var QAppsControlMode = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var InternalServerException = class _InternalServerException extends QBusinessServiceException {
  static {
    __name(this, "InternalServerException");
  }
  name = "InternalServerException";
  $fault = "server";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends QBusinessServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * <p>The identifier of the resource affected.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource affected.</p>
   * @public
   */
  resourceType;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
var ServiceQuotaExceededException = class _ServiceQuotaExceededException extends QBusinessServiceException {
  static {
    __name(this, "ServiceQuotaExceededException");
  }
  name = "ServiceQuotaExceededException";
  $fault = "client";
  /**
   * <p>The identifier of the resource affected.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource affected.</p>
   * @public
   */
  resourceType;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
var ThrottlingException = class _ThrottlingException extends QBusinessServiceException {
  static {
    __name(this, "ThrottlingException");
  }
  name = "ThrottlingException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
  }
};
var ValidationExceptionReason = {
  CANNOT_PARSE: "CANNOT_PARSE",
  FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
  UNKNOWN_OPERATION: "UNKNOWN_OPERATION"
};
var ValidationException = class _ValidationException extends QBusinessServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * <p>The reason for the <code>ValidationException</code>.</p>
   * @public
   */
  reason;
  /**
   * <p>The input field(s) that failed validation.</p>
   * @public
   */
  fields;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.reason = opts.reason;
    this.fields = opts.fields;
  }
};
var DataAccessorAuthenticationConfiguration;
((DataAccessorAuthenticationConfiguration3) => {
  DataAccessorAuthenticationConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.idcTrustedTokenIssuerConfiguration !== void 0)
      return visitor.idcTrustedTokenIssuerConfiguration(value.idcTrustedTokenIssuerConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DataAccessorAuthenticationConfiguration || (DataAccessorAuthenticationConfiguration = {}));
var DataAccessorAuthenticationType = {
  AWS_IAM_IDC_AUTH_CODE: "AWS_IAM_IDC_AUTH_CODE",
  AWS_IAM_IDC_TTI: "AWS_IAM_IDC_TTI"
};
var AutoSubscriptionStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var SubscriptionType = {
  Q_BUSINESS: "Q_BUSINESS",
  Q_LITE: "Q_LITE"
};
var ErrorCode = {
  INTERNAL_ERROR: "InternalError",
  INVALID_REQUEST: "InvalidRequest",
  RESOURCE_INACTIVE: "ResourceInactive",
  RESOURCE_NOT_FOUND: "ResourceNotFound"
};
var IndexType = {
  ENTERPRISE: "ENTERPRISE",
  STARTER: "STARTER"
};
var DocumentEnrichmentConditionOperator = {
  BEGINS_WITH: "BEGINS_WITH",
  CONTAINS: "CONTAINS",
  EQUALS: "EQUALS",
  EXISTS: "EXISTS",
  GREATER_THAN: "GREATER_THAN",
  GREATER_THAN_OR_EQUALS: "GREATER_THAN_OR_EQUALS",
  LESS_THAN: "LESS_THAN",
  LESS_THAN_OR_EQUALS: "LESS_THAN_OR_EQUALS",
  NOT_CONTAINS: "NOT_CONTAINS",
  NOT_EQUALS: "NOT_EQUALS",
  NOT_EXISTS: "NOT_EXISTS"
};
var DocumentContentOperator = {
  DELETE: "DELETE"
};
var AttributeValueOperator = {
  DELETE: "DELETE"
};
var AudioExtractionStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ImageExtractionStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var VideoExtractionStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var DataSourceStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  PENDING_CREATION: "PENDING_CREATION",
  UPDATING: "UPDATING"
};
var Status = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var AttributeType = {
  DATE: "DATE",
  NUMBER: "NUMBER",
  STRING: "STRING",
  STRING_LIST: "STRING_LIST"
};
var IndexStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var PluginAuthConfiguration;
((PluginAuthConfiguration3) => {
  PluginAuthConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.basicAuthConfiguration !== void 0) return visitor.basicAuthConfiguration(value.basicAuthConfiguration);
    if (value.oAuth2ClientCredentialConfiguration !== void 0)
      return visitor.oAuth2ClientCredentialConfiguration(value.oAuth2ClientCredentialConfiguration);
    if (value.noAuthConfiguration !== void 0) return visitor.noAuthConfiguration(value.noAuthConfiguration);
    if (value.idcAuthConfiguration !== void 0) return visitor.idcAuthConfiguration(value.idcAuthConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(PluginAuthConfiguration || (PluginAuthConfiguration = {}));
var PluginBuildStatus = {
  CREATE_FAILED: "CREATE_FAILED",
  CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS",
  DELETE_FAILED: "DELETE_FAILED",
  DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
  READY: "READY",
  UPDATE_FAILED: "UPDATE_FAILED",
  UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS"
};
var PluginState = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var DocumentAttributeBoostingLevel = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM",
  NONE: "NONE",
  ONE: "ONE",
  TWO: "TWO",
  VERY_HIGH: "VERY_HIGH"
};
var NumberAttributeBoostingType = {
  PRIORITIZE_LARGER_VALUES: "PRIORITIZE_LARGER_VALUES",
  PRIORITIZE_SMALLER_VALUES: "PRIORITIZE_SMALLER_VALUES"
};
var StringAttributeValueBoostingLevel = {
  FIVE: "FIVE",
  FOUR: "FOUR",
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM",
  ONE: "ONE",
  THREE: "THREE",
  TWO: "TWO",
  VERY_HIGH: "VERY_HIGH"
};
var DocumentAttributeBoostingConfiguration;
((DocumentAttributeBoostingConfiguration3) => {
  DocumentAttributeBoostingConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.numberConfiguration !== void 0) return visitor.numberConfiguration(value.numberConfiguration);
    if (value.stringConfiguration !== void 0) return visitor.stringConfiguration(value.stringConfiguration);
    if (value.dateConfiguration !== void 0) return visitor.dateConfiguration(value.dateConfiguration);
    if (value.stringListConfiguration !== void 0)
      return visitor.stringListConfiguration(value.stringListConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DocumentAttributeBoostingConfiguration || (DocumentAttributeBoostingConfiguration = {}));
var RetrieverConfiguration;
((RetrieverConfiguration3) => {
  RetrieverConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.nativeIndexConfiguration !== void 0)
      return visitor.nativeIndexConfiguration(value.nativeIndexConfiguration);
    if (value.kendraIndexConfiguration !== void 0)
      return visitor.kendraIndexConfiguration(value.kendraIndexConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(RetrieverConfiguration || (RetrieverConfiguration = {}));
var RetrieverType = {
  KENDRA_INDEX: "KENDRA_INDEX",
  NATIVE_INDEX: "NATIVE_INDEX"
};
var RetrieverStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  FAILED: "FAILED"
};
var BrowserExtension = {
  CHROME: "CHROME",
  FIREFOX: "FIREFOX"
};
var IdentityProviderConfiguration;
((IdentityProviderConfiguration3) => {
  IdentityProviderConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.samlConfiguration !== void 0) return visitor.samlConfiguration(value.samlConfiguration);
    if (value.openIDConnectConfiguration !== void 0)
      return visitor.openIDConnectConfiguration(value.openIDConnectConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(IdentityProviderConfiguration || (IdentityProviderConfiguration = {}));
var WebExperienceSamplePromptsControlMode = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var WebExperienceAuthConfiguration;
((WebExperienceAuthConfiguration3) => {
  WebExperienceAuthConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.samlConfiguration !== void 0) return visitor.samlConfiguration(value.samlConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(WebExperienceAuthConfiguration || (WebExperienceAuthConfiguration = {}));
var WebExperienceStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  DELETING: "DELETING",
  FAILED: "FAILED",
  PENDING_AUTH_CONFIG: "PENDING_AUTH_CONFIG"
};
var CreatorModeControl = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var OrchestrationControl = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var PermissionConditionOperator = {
  STRING_EQUALS: "StringEquals"
};
var CopyFromSource;
((CopyFromSource3) => {
  CopyFromSource3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.conversation !== void 0) return visitor.conversation(value.conversation);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(CopyFromSource || (CopyFromSource = {}));
var AttachmentStatus = {
  FAILED: "FAILED",
  SUCCESS: "SUCCESS"
};
var AudioExtractionType = {
  SUMMARY: "SUMMARY",
  TRANSCRIPT: "TRANSCRIPT"
};
var DocumentContent;
((DocumentContent2) => {
  DocumentContent2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.blob !== void 0) return visitor.blob(value.blob);
    if (value.s3 !== void 0) return visitor.s3(value.s3);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(DocumentContent || (DocumentContent = {}));
var ContentType = {
  CSV: "CSV",
  HTML: "HTML",
  JSON: "JSON",
  MD: "MD",
  MS_EXCEL: "MS_EXCEL",
  MS_WORD: "MS_WORD",
  PDF: "PDF",
  PLAIN_TEXT: "PLAIN_TEXT",
  PPT: "PPT",
  RTF: "RTF",
  XML: "XML",
  XSLT: "XSLT"
};
var ChatMode = {
  CREATOR_MODE: "CREATOR_MODE",
  PLUGIN_MODE: "PLUGIN_MODE",
  RETRIEVAL_MODE: "RETRIEVAL_MODE"
};
var ChatModeConfiguration;
((ChatModeConfiguration3) => {
  ChatModeConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.pluginConfiguration !== void 0) return visitor.pluginConfiguration(value.pluginConfiguration);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ChatModeConfiguration || (ChatModeConfiguration = {}));
var VideoExtractionType = {
  SUMMARY: "SUMMARY",
  TRANSCRIPT: "TRANSCRIPT"
};
var SourceDetails;
((SourceDetails2) => {
  SourceDetails2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.imageSourceDetails !== void 0) return visitor.imageSourceDetails(value.imageSourceDetails);
    if (value.audioSourceDetails !== void 0) return visitor.audioSourceDetails(value.audioSourceDetails);
    if (value.videoSourceDetails !== void 0) return visitor.videoSourceDetails(value.videoSourceDetails);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(SourceDetails || (SourceDetails = {}));
var SystemMessageType = {
  GROUNDED_RESPONSE: "GROUNDED_RESPONSE",
  RESPONSE: "RESPONSE"
};
var ChatOutputStream;
((ChatOutputStream3) => {
  ChatOutputStream3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.textEvent !== void 0) return visitor.textEvent(value.textEvent);
    if (value.metadataEvent !== void 0) return visitor.metadataEvent(value.metadataEvent);
    if (value.actionReviewEvent !== void 0) return visitor.actionReviewEvent(value.actionReviewEvent);
    if (value.failedAttachmentEvent !== void 0) return visitor.failedAttachmentEvent(value.failedAttachmentEvent);
    if (value.authChallengeRequestEvent !== void 0)
      return visitor.authChallengeRequestEvent(value.authChallengeRequestEvent);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ChatOutputStream || (ChatOutputStream = {}));
var ExternalResourceException = class _ExternalResourceException extends QBusinessServiceException {
  static {
    __name(this, "ExternalResourceException");
  }
  name = "ExternalResourceException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ExternalResourceException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ExternalResourceException.prototype);
  }
};
var LicenseNotFoundException = class _LicenseNotFoundException extends QBusinessServiceException {
  static {
    __name(this, "LicenseNotFoundException");
  }
  name = "LicenseNotFoundException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "LicenseNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _LicenseNotFoundException.prototype);
  }
};
var ChatResponseConfigurationStatus = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  FAILED: "FAILED",
  UPDATING: "UPDATING"
};
var ResponseConfigurationType = {
  ALL: "ALL"
};
var ContentSource;
((ContentSource3) => {
  ContentSource3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.retriever !== void 0) return visitor.retriever(value.retriever);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ContentSource || (ContentSource = {}));
var SubscriptionPrincipal;
((SubscriptionPrincipal3) => {
  SubscriptionPrincipal3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.user !== void 0) return visitor.user(value.user);
    if (value.group !== void 0) return visitor.group(value.group);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(SubscriptionPrincipal || (SubscriptionPrincipal = {}));
var DataSourceSyncJobStatus = {
  ABORTED: "ABORTED",
  FAILED: "FAILED",
  INCOMPLETE: "INCOMPLETE",
  STOPPING: "STOPPING",
  SUCCEEDED: "SUCCEEDED",
  SYNCING: "SYNCING",
  SYNCING_INDEXING: "SYNCING_INDEXING"
};
var DocumentStatus = {
  DELETED: "DELETED",
  DELETING: "DELETING",
  DOCUMENT_FAILED_TO_INDEX: "DOCUMENT_FAILED_TO_INDEX",
  FAILED: "FAILED",
  INDEXED: "INDEXED",
  PROCESSING: "PROCESSING",
  RECEIVED: "RECEIVED",
  UPDATED: "UPDATED"
};
var HallucinationReductionControl = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ResponseScope = {
  ENTERPRISE_CONTENT_ONLY: "ENTERPRISE_CONTENT_ONLY",
  EXTENDED_KNOWLEDGE_ENABLED: "EXTENDED_KNOWLEDGE_ENABLED"
};
var RuleConfiguration;
((RuleConfiguration3) => {
  RuleConfiguration3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.contentBlockerRule !== void 0) return visitor.contentBlockerRule(value.contentBlockerRule);
    if (value.contentRetrievalRule !== void 0) return visitor.contentRetrievalRule(value.contentRetrievalRule);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(RuleConfiguration || (RuleConfiguration = {}));
var RuleType = {
  CONTENT_BLOCKER_RULE: "CONTENT_BLOCKER_RULE",
  CONTENT_RETRIEVAL_RULE: "CONTENT_RETRIEVAL_RULE"
};
var APISchemaFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.payload !== void 0) return { payload: import_smithy_client.SENSITIVE_STRING };
  if (obj.s3 !== void 0) return { s3: obj.s3 };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "APISchemaFilterSensitiveLog");
var EncryptionConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.kmsKeyId && { kmsKeyId: import_smithy_client.SENSITIVE_STRING }
}), "EncryptionConfigurationFilterSensitiveLog");
var CreateApplicationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.encryptionConfiguration && {
    encryptionConfiguration: EncryptionConfigurationFilterSensitiveLog(obj.encryptionConfiguration)
  }
}), "CreateApplicationRequestFilterSensitiveLog");
var DataAccessorFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.displayName && { displayName: import_smithy_client.SENSITIVE_STRING },
  ...obj.authenticationDetail && { authenticationDetail: obj.authenticationDetail }
}), "DataAccessorFilterSensitiveLog");
var ListDataAccessorsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.dataAccessors && { dataAccessors: obj.dataAccessors.map((item) => DataAccessorFilterSensitiveLog(item)) }
}), "ListDataAccessorsResponseFilterSensitiveLog");
var GetApplicationResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.encryptionConfiguration && {
    encryptionConfiguration: EncryptionConfigurationFilterSensitiveLog(obj.encryptionConfiguration)
  }
}), "GetApplicationResponseFilterSensitiveLog");
var CustomPluginConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.apiSchema && { apiSchema: APISchemaFilterSensitiveLog(obj.apiSchema) }
}), "CustomPluginConfigurationFilterSensitiveLog");
var CreatePluginRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.authConfiguration && { authConfiguration: obj.authConfiguration },
  ...obj.customPluginConfiguration && {
    customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration)
  }
}), "CreatePluginRequestFilterSensitiveLog");
var GetPluginResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.authConfiguration && { authConfiguration: obj.authConfiguration },
  ...obj.customPluginConfiguration && {
    customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration)
  }
}), "GetPluginResponseFilterSensitiveLog");
var UpdatePluginRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.customPluginConfiguration && {
    customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration)
  },
  ...obj.authConfiguration && { authConfiguration: obj.authConfiguration }
}), "UpdatePluginRequestFilterSensitiveLog");
var ChatOutputStreamFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.textEvent !== void 0) return { textEvent: obj.textEvent };
  if (obj.metadataEvent !== void 0) return { metadataEvent: obj.metadataEvent };
  if (obj.actionReviewEvent !== void 0) return { actionReviewEvent: obj.actionReviewEvent };
  if (obj.failedAttachmentEvent !== void 0) return { failedAttachmentEvent: obj.failedAttachmentEvent };
  if (obj.authChallengeRequestEvent !== void 0) return { authChallengeRequestEvent: obj.authChallengeRequestEvent };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "ChatOutputStreamFilterSensitiveLog");
var ChatOutputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.outputStream && { outputStream: "STREAMING_CONTENT" }
}), "ChatOutputFilterSensitiveLog");

// src/models/models_1.ts

var GroupStatus = {
  DELETED: "DELETED",
  DELETING: "DELETING",
  FAILED: "FAILED",
  PROCESSING: "PROCESSING",
  SUCCEEDED: "SUCCEEDED"
};
var MediaTooLargeException = class _MediaTooLargeException extends QBusinessServiceException {
  static {
    __name(this, "MediaTooLargeException");
  }
  name = "MediaTooLargeException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "MediaTooLargeException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _MediaTooLargeException.prototype);
  }
};
var MessageType = {
  SYSTEM: "SYSTEM",
  USER: "USER"
};
var PluginTypeCategory = {
  COMMUNICATION: "Communication",
  CRM: "Customer relationship management (CRM)",
  PRODUCTIVITY: "Productivity",
  PROJECT_MANAGEMENT: "Project management",
  TICKETING_MANAGEMENT: "Ticketing and incident management"
};
var MessageUsefulnessReason = {
  COMPLETE: "COMPLETE",
  FACTUALLY_CORRECT: "FACTUALLY_CORRECT",
  HARMFUL_OR_UNSAFE: "HARMFUL_OR_UNSAFE",
  HELPFUL: "HELPFUL",
  INCORRECT_OR_MISSING_SOURCES: "INCORRECT_OR_MISSING_SOURCES",
  NOT_BASED_ON_DOCUMENTS: "NOT_BASED_ON_DOCUMENTS",
  NOT_COMPLETE: "NOT_COMPLETE",
  NOT_CONCISE: "NOT_CONCISE",
  NOT_FACTUALLY_CORRECT: "NOT_FACTUALLY_CORRECT",
  NOT_HELPFUL: "NOT_HELPFUL",
  OTHER: "OTHER",
  RELEVANT_SOURCES: "RELEVANT_SOURCES"
};
var MessageUsefulness = {
  NOT_USEFUL: "NOT_USEFUL",
  USEFUL: "USEFUL"
};
var ScoreConfidence = {
  HIGH: "HIGH",
  LOW: "LOW",
  MEDIUM: "MEDIUM",
  NOT_AVAILABLE: "NOT_AVAILABLE",
  VERY_HIGH: "VERY_HIGH"
};
var ChatInputStream;
((ChatInputStream2) => {
  ChatInputStream2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.configurationEvent !== void 0) return visitor.configurationEvent(value.configurationEvent);
    if (value.textEvent !== void 0) return visitor.textEvent(value.textEvent);
    if (value.attachmentEvent !== void 0) return visitor.attachmentEvent(value.attachmentEvent);
    if (value.actionExecutionEvent !== void 0) return visitor.actionExecutionEvent(value.actionExecutionEvent);
    if (value.endOfInputEvent !== void 0) return visitor.endOfInputEvent(value.endOfInputEvent);
    if (value.authChallengeResponseEvent !== void 0)
      return visitor.authChallengeResponseEvent(value.authChallengeResponseEvent);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ChatInputStream || (ChatInputStream = {}));
var ChatInputStreamFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.configurationEvent !== void 0) return { configurationEvent: obj.configurationEvent };
  if (obj.textEvent !== void 0) return { textEvent: obj.textEvent };
  if (obj.attachmentEvent !== void 0) return { attachmentEvent: obj.attachmentEvent };
  if (obj.actionExecutionEvent !== void 0) return { actionExecutionEvent: obj.actionExecutionEvent };
  if (obj.endOfInputEvent !== void 0) return { endOfInputEvent: obj.endOfInputEvent };
  if (obj.authChallengeResponseEvent !== void 0)
    return { authChallengeResponseEvent: obj.authChallengeResponseEvent };
  if (obj.$unknown !== void 0) return { [obj.$unknown[0]]: "UNKNOWN" };
}, "ChatInputStreamFilterSensitiveLog");
var ChatInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.inputStream && { inputStream: "STREAMING_CONTENT" }
}), "ChatInputFilterSensitiveLog");
var CreateDataAccessorRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.actionConfigurations && { actionConfigurations: obj.actionConfigurations.map((item) => item) },
  ...obj.displayName && { displayName: import_smithy_client.SENSITIVE_STRING },
  ...obj.authenticationDetail && { authenticationDetail: obj.authenticationDetail }
}), "CreateDataAccessorRequestFilterSensitiveLog");
var GetDataAccessorResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.displayName && { displayName: import_smithy_client.SENSITIVE_STRING },
  ...obj.actionConfigurations && { actionConfigurations: obj.actionConfigurations.map((item) => item) },
  ...obj.authenticationDetail && { authenticationDetail: obj.authenticationDetail }
}), "GetDataAccessorResponseFilterSensitiveLog");
var UpdateDataAccessorRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.actionConfigurations && { actionConfigurations: obj.actionConfigurations.map((item) => item) },
  ...obj.authenticationDetail && { authenticationDetail: obj.authenticationDetail },
  ...obj.displayName && { displayName: import_smithy_client.SENSITIVE_STRING }
}), "UpdateDataAccessorRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AssociatePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/policy");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "actions"),
      conditions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "conditions"),
      principal: [],
      statementId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssociatePermissionCommand");
var se_BatchDeleteDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}/documents/delete");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dataSourceSyncId: [],
      documents: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "documents")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchDeleteDocumentCommand");
var se_BatchPutDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}/documents");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dataSourceSyncId: [],
      documents: /* @__PURE__ */ __name((_) => se_Documents(_, context), "documents"),
      roleArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchPutDocumentCommand");
var se_CancelSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/subscriptions/{subscriptionId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("subscriptionId", () => input.subscriptionId, "{subscriptionId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelSubscriptionCommand");
var se_ChatCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/conversations");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]],
    [_uG]: [() => input.userGroups !== void 0, () => input[_uG] || []],
    [_cI]: [, input[_cI]],
    [_pMI]: [, input[_pMI]],
    [_cT]: [, input[_cT] ?? (0, import_uuid.v4)()]
  });
  let body;
  if (input.inputStream !== void 0) {
    body = se_ChatInputStream(input.inputStream, context);
  }
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ChatCommand");
var se_ChatSyncCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/conversations");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_s]: [, ""],
    [_uI]: [, input[_uI]],
    [_uG]: [() => input.userGroups !== void 0, () => input[_uG] || []]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionExecution: /* @__PURE__ */ __name((_) => se_ActionExecution(_, context), "actionExecution"),
      attachments: /* @__PURE__ */ __name((_) => se_AttachmentsInput(_, context), "attachments"),
      attributeFilter: /* @__PURE__ */ __name((_) => se_AttributeFilter(_, context), "attributeFilter"),
      authChallengeResponse: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authChallengeResponse"),
      chatMode: [],
      chatModeConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "chatModeConfiguration"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      conversationId: [],
      parentMessageId: [],
      userMessage: []
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_ChatSyncCommand");
var se_CheckDocumentAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/index/{indexId}/users/{userId}/documents/{documentId}/check-document-access");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("userId", () => input.userId, "{userId}", false);
  b.p("documentId", () => input.documentId, "{documentId}", false);
  const query = (0, import_smithy_client.map)({
    [_dSI]: [, input[_dSI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_CheckDocumentAccessCommand");
var se_CreateAnonymousWebExperienceUrlCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/experiences/{webExperienceId}/anonymous-url");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("webExperienceId", () => input.webExperienceId, "{webExperienceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      sessionDurationInMinutes: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateAnonymousWebExperienceUrlCommand");
var se_CreateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attachmentsConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "attachmentsConfiguration"),
      clientIdsForOIDC: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "clientIdsForOIDC"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      displayName: [],
      encryptionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "encryptionConfiguration"),
      iamIdentityProviderArn: [],
      identityCenterInstanceArn: [],
      identityType: [],
      personalizationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "personalizationConfiguration"),
      qAppsConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "qAppsConfiguration"),
      quickSightConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "quickSightConfiguration"),
      roleArn: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateApplicationCommand");
var se_CreateChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/chatresponseconfigurations");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      displayName: [],
      responseConfigurations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "responseConfigurations"),
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateChatResponseConfigurationCommand");
var se_CreateDataAccessorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/dataaccessors");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionConfigurations: /* @__PURE__ */ __name((_) => se_ActionConfigurationList(_, context), "actionConfigurations"),
      authenticationDetail: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authenticationDetail"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      displayName: [],
      principal: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDataAccessorCommand");
var se_CreateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      configuration: /* @__PURE__ */ __name((_) => se_DataSourceConfiguration(_, context), "configuration"),
      description: [],
      displayName: [],
      documentEnrichmentConfiguration: /* @__PURE__ */ __name((_) => se_DocumentEnrichmentConfiguration(_, context), "documentEnrichmentConfiguration"),
      mediaExtractionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "mediaExtractionConfiguration"),
      roleArn: [],
      syncSchedule: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      vpcConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "vpcConfiguration")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDataSourceCommand");
var se_CreateIndexCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      capacityConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "capacityConfiguration"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      description: [],
      displayName: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateIndexCommand");
var se_CreatePluginCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/plugins");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authConfiguration"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customPluginConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customPluginConfiguration"),
      displayName: [],
      serverUrl: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreatePluginCommand");
var se_CreateRetrieverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/retrievers");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      configuration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "configuration"),
      displayName: [],
      roleArn: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateRetrieverCommand");
var se_CreateSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/subscriptions");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "principal"),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSubscriptionCommand");
var se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/users");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      userAliases: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "userAliases"),
      userId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateUserCommand");
var se_CreateWebExperienceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/experiences");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      browserExtensionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "browserExtensionConfiguration"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      customizationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customizationConfiguration"),
      identityProviderConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "identityProviderConfiguration"),
      origins: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "origins"),
      roleArn: [],
      samplePromptsControlMode: [],
      subtitle: [],
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags"),
      title: [],
      welcomeMessage: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateWebExperienceCommand");
var se_DeleteApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteApplicationCommand");
var se_DeleteAttachmentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/conversations/{conversationId}/attachments/{attachmentId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("conversationId", () => input.conversationId, "{conversationId}", false);
  b.p("attachmentId", () => input.attachmentId, "{attachmentId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteAttachmentCommand");
var se_DeleteChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/chatcontrols");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChatControlsConfigurationCommand");
var se_DeleteChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/chatresponseconfigurations/{chatResponseConfigurationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("chatResponseConfigurationId", () => input.chatResponseConfigurationId, "{chatResponseConfigurationId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteChatResponseConfigurationCommand");
var se_DeleteConversationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/conversations/{conversationId}");
  b.p("conversationId", () => input.conversationId, "{conversationId}", false);
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteConversationCommand");
var se_DeleteDataAccessorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/dataaccessors/{dataAccessorId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("dataAccessorId", () => input.dataAccessorId, "{dataAccessorId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataAccessorCommand");
var se_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDataSourceCommand");
var se_DeleteGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/groups/{groupName}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("groupName", () => input.groupName, "{groupName}", false);
  const query = (0, import_smithy_client.map)({
    [_dSI]: [, input[_dSI]]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_DeleteGroupCommand");
var se_DeleteIndexCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteIndexCommand");
var se_DeletePluginCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/plugins/{pluginId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("pluginId", () => input.pluginId, "{pluginId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeletePluginCommand");
var se_DeleteRetrieverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/retrievers/{retrieverId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("retrieverId", () => input.retrieverId, "{retrieverId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteRetrieverCommand");
var se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/users/{userId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("userId", () => input.userId, "{userId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteUserCommand");
var se_DeleteWebExperienceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/experiences/{webExperienceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("webExperienceId", () => input.webExperienceId, "{webExperienceId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteWebExperienceCommand");
var se_DisassociatePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/policy/{statementId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("statementId", () => input.statementId, "{statementId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociatePermissionCommand");
var se_GetApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetApplicationCommand");
var se_GetChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/chatcontrols");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetChatControlsConfigurationCommand");
var se_GetChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/chatresponseconfigurations/{chatResponseConfigurationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("chatResponseConfigurationId", () => input.chatResponseConfigurationId, "{chatResponseConfigurationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetChatResponseConfigurationCommand");
var se_GetDataAccessorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/dataaccessors/{dataAccessorId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("dataAccessorId", () => input.dataAccessorId, "{dataAccessorId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataAccessorCommand");
var se_GetDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDataSourceCommand");
var se_GetGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/groups/{groupName}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("groupName", () => input.groupName, "{groupName}", false);
  const query = (0, import_smithy_client.map)({
    [_dSI]: [, input[_dSI]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetGroupCommand");
var se_GetIndexCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetIndexCommand");
var se_GetMediaCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/conversations/{conversationId}/messages/{messageId}/media/{mediaId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("conversationId", () => input.conversationId, "{conversationId}", false);
  b.p("messageId", () => input.messageId, "{messageId}", false);
  b.p("mediaId", () => input.mediaId, "{mediaId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetMediaCommand");
var se_GetPluginCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/plugins/{pluginId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("pluginId", () => input.pluginId, "{pluginId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetPluginCommand");
var se_GetPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/policy");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetPolicyCommand");
var se_GetRetrieverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/retrievers/{retrieverId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("retrieverId", () => input.retrieverId, "{retrieverId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetRetrieverCommand");
var se_GetUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/users/{userId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("userId", () => input.userId, "{userId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetUserCommand");
var se_GetWebExperienceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/experiences/{webExperienceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("webExperienceId", () => input.webExperienceId, "{webExperienceId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetWebExperienceCommand");
var se_ListApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListApplicationsCommand");
var se_ListAttachmentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/attachments");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_cI]: [, input[_cI]],
    [_uI]: [, input[_uI]],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListAttachmentsCommand");
var se_ListChatResponseConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/chatresponseconfigurations");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListChatResponseConfigurationsCommand");
var se_ListConversationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/conversations");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListConversationsCommand");
var se_ListDataAccessorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/dataaccessors");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDataAccessorsCommand");
var se_ListDataSourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDataSourcesCommand");
var se_ListDataSourceSyncJobsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}/syncjobs");
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_sT]: [() => input.startTime !== void 0, () => (0, import_smithy_client.serializeDateTime)(input[_sT]).toString()],
    [_eT]: [() => input.endTime !== void 0, () => (0, import_smithy_client.serializeDateTime)(input[_eT]).toString()],
    [_sS]: [, input[_sF]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDataSourceSyncJobsCommand");
var se_ListDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/index/{indexId}/documents");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  const query = (0, import_smithy_client.map)({
    [_dSIa]: [() => input.dataSourceIds !== void 0, () => input[_dSIa] || []],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDocumentsCommand");
var se_ListGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/groups");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  const query = (0, import_smithy_client.map)({
    [_uET]: [
      (0, import_smithy_client.expectNonNull)(input.updatedEarlierThan, `updatedEarlierThan`) != null,
      () => (0, import_smithy_client.serializeDateTime)(input[_uET]).toString()
    ],
    [_dSI]: [, input[_dSI]],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListGroupsCommand");
var se_ListIndicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListIndicesCommand");
var se_ListMessagesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/conversations/{conversationId}");
  b.p("conversationId", () => input.conversationId, "{conversationId}", false);
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]],
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListMessagesCommand");
var se_ListPluginActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/plugins/{pluginId}/actions");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("pluginId", () => input.pluginId, "{pluginId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPluginActionsCommand");
var se_ListPluginsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/plugins");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPluginsCommand");
var se_ListPluginTypeActionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/pluginTypes/{pluginType}/actions");
  b.p("pluginType", () => input.pluginType, "{pluginType}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPluginTypeActionsCommand");
var se_ListPluginTypeMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/pluginTypeMetadata");
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListPluginTypeMetadataCommand");
var se_ListRetrieversCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/retrievers");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListRetrieversCommand");
var se_ListSubscriptionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/subscriptions");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSubscriptionsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{resourceARN}");
  b.p("resourceARN", () => input.resourceARN, "{resourceARN}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListWebExperiencesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/experiences");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  const query = (0, import_smithy_client.map)({
    [_nT]: [, input[_nT]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListWebExperiencesCommand");
var se_PutFeedbackCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/conversations/{conversationId}/messages/{messageId}/feedback");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("conversationId", () => input.conversationId, "{conversationId}", false);
  b.p("messageId", () => input.messageId, "{messageId}", false);
  const query = (0, import_smithy_client.map)({
    [_uI]: [, input[_uI]]
  });
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      messageCopiedAt: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "messageCopiedAt"),
      messageUsefulness: /* @__PURE__ */ __name((_) => se_MessageUsefulnessFeedback(_, context), "messageUsefulness")
    })
  );
  b.m("POST").h(headers).q(query).b(body);
  return b.build();
}, "se_PutFeedbackCommand");
var se_PutGroupCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}/groups");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      dataSourceId: [],
      groupMembers: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "groupMembers"),
      groupName: [],
      roleArn: [],
      type: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_PutGroupCommand");
var se_SearchRelevantContentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/relevant-content");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attributeFilter: /* @__PURE__ */ __name((_) => se_AttributeFilter(_, context), "attributeFilter"),
      contentSource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "contentSource"),
      maxResults: [],
      nextToken: [],
      queryText: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchRelevantContentCommand");
var se_StartDataSourceSyncJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}/startsync");
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartDataSourceSyncJobCommand");
var se_StopDataSourceSyncJobCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}/stopsync");
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StopDataSourceSyncJobCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/v1/tags/{resourceARN}");
  b.p("resourceARN", () => input.resourceARN, "{resourceARN}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "tags")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/v1/tags/{resourceARN}");
  b.p("resourceARN", () => input.resourceARN, "{resourceARN}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      attachmentsConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "attachmentsConfiguration"),
      autoSubscriptionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "autoSubscriptionConfiguration"),
      description: [],
      displayName: [],
      identityCenterInstanceArn: [],
      personalizationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "personalizationConfiguration"),
      qAppsConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "qAppsConfiguration"),
      roleArn: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateApplicationCommand");
var se_UpdateChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/chatcontrols");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      blockedPhrasesConfigurationUpdate: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "blockedPhrasesConfigurationUpdate"),
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      creatorModeConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "creatorModeConfiguration"),
      hallucinationReductionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "hallucinationReductionConfiguration"),
      orchestrationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "orchestrationConfiguration"),
      responseScope: [],
      topicConfigurationsToCreateOrUpdate: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "topicConfigurationsToCreateOrUpdate"),
      topicConfigurationsToDelete: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "topicConfigurationsToDelete")
    })
  );
  b.m("PATCH").h(headers).b(body);
  return b.build();
}, "se_UpdateChatControlsConfigurationCommand");
var se_UpdateChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/chatresponseconfigurations/{chatResponseConfigurationId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("chatResponseConfigurationId", () => input.chatResponseConfigurationId, "{chatResponseConfigurationId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      displayName: [],
      responseConfigurations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "responseConfigurations")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateChatResponseConfigurationCommand");
var se_UpdateDataAccessorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/dataaccessors/{dataAccessorId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("dataAccessorId", () => input.dataAccessorId, "{dataAccessorId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      actionConfigurations: /* @__PURE__ */ __name((_) => se_ActionConfigurationList(_, context), "actionConfigurations"),
      authenticationDetail: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authenticationDetail"),
      displayName: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDataAccessorCommand");
var se_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}/datasources/{dataSourceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  b.p("dataSourceId", () => input.dataSourceId, "{dataSourceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      configuration: /* @__PURE__ */ __name((_) => se_DataSourceConfiguration(_, context), "configuration"),
      description: [],
      displayName: [],
      documentEnrichmentConfiguration: /* @__PURE__ */ __name((_) => se_DocumentEnrichmentConfiguration(_, context), "documentEnrichmentConfiguration"),
      mediaExtractionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "mediaExtractionConfiguration"),
      roleArn: [],
      syncSchedule: [],
      vpcConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "vpcConfiguration")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateDataSourceCommand");
var se_UpdateIndexCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/indices/{indexId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("indexId", () => input.indexId, "{indexId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      capacityConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "capacityConfiguration"),
      description: [],
      displayName: [],
      documentAttributeConfigurations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "documentAttributeConfigurations")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateIndexCommand");
var se_UpdatePluginCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/plugins/{pluginId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("pluginId", () => input.pluginId, "{pluginId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authConfiguration"),
      customPluginConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customPluginConfiguration"),
      displayName: [],
      serverUrl: [],
      state: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdatePluginCommand");
var se_UpdateRetrieverCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/retrievers/{retrieverId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("retrieverId", () => input.retrieverId, "{retrieverId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      configuration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "configuration"),
      displayName: [],
      roleArn: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateRetrieverCommand");
var se_UpdateSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/subscriptions/{subscriptionId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("subscriptionId", () => input.subscriptionId, "{subscriptionId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      type: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateSubscriptionCommand");
var se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/users/{userId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("userId", () => input.userId, "{userId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      userAliasesToDelete: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "userAliasesToDelete"),
      userAliasesToUpdate: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "userAliasesToUpdate")
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateUserCommand");
var se_UpdateWebExperienceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/applications/{applicationId}/experiences/{webExperienceId}");
  b.p("applicationId", () => input.applicationId, "{applicationId}", false);
  b.p("webExperienceId", () => input.webExperienceId, "{webExperienceId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      authenticationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "authenticationConfiguration"),
      browserExtensionConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "browserExtensionConfiguration"),
      customizationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "customizationConfiguration"),
      identityProviderConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "identityProviderConfiguration"),
      origins: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "origins"),
      roleArn: [],
      samplePromptsControlMode: [],
      subtitle: [],
      title: [],
      welcomeMessage: []
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateWebExperienceCommand");
var de_AssociatePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    statement: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociatePermissionCommand");
var de_BatchDeleteDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    failedDocuments: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchDeleteDocumentCommand");
var de_BatchPutDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    failedDocuments: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchPutDocumentCommand");
var de_CancelSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    currentSubscription: import_smithy_client._json,
    nextSubscription: import_smithy_client._json,
    subscriptionArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelSubscriptionCommand");
var de_ChatCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = output.body;
  contents.outputStream = de_ChatOutputStream(data, context);
  return contents;
}, "de_ChatCommand");
var de_ChatSyncCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    actionReview: /* @__PURE__ */ __name((_) => de_ActionReview(_, context), "actionReview"),
    authChallengeRequest: import_smithy_client._json,
    conversationId: import_smithy_client.expectString,
    failedAttachments: import_smithy_client._json,
    sourceAttributions: /* @__PURE__ */ __name((_) => de_SourceAttributions(_, context), "sourceAttributions"),
    systemMessage: import_smithy_client.expectString,
    systemMessageId: import_smithy_client.expectString,
    userMessageId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ChatSyncCommand");
var de_CheckDocumentAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentAcl: import_smithy_client._json,
    hasAccess: import_smithy_client.expectBoolean,
    userAliases: import_smithy_client._json,
    userGroups: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CheckDocumentAccessCommand");
var de_CreateAnonymousWebExperienceUrlCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    anonymousUrl: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateAnonymousWebExperienceUrlCommand");
var de_CreateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationArn: import_smithy_client.expectString,
    applicationId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateApplicationCommand");
var de_CreateChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    chatResponseConfigurationArn: import_smithy_client.expectString,
    chatResponseConfigurationId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateChatResponseConfigurationCommand");
var de_CreateDataAccessorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataAccessorArn: import_smithy_client.expectString,
    dataAccessorId: import_smithy_client.expectString,
    idcApplicationArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDataAccessorCommand");
var de_CreateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSourceArn: import_smithy_client.expectString,
    dataSourceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDataSourceCommand");
var de_CreateIndexCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    indexArn: import_smithy_client.expectString,
    indexId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateIndexCommand");
var de_CreatePluginCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    buildStatus: import_smithy_client.expectString,
    pluginArn: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreatePluginCommand");
var de_CreateRetrieverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    retrieverArn: import_smithy_client.expectString,
    retrieverId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateRetrieverCommand");
var de_CreateSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    currentSubscription: import_smithy_client._json,
    nextSubscription: import_smithy_client._json,
    subscriptionArn: import_smithy_client.expectString,
    subscriptionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSubscriptionCommand");
var de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateUserCommand");
var de_CreateWebExperienceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    webExperienceArn: import_smithy_client.expectString,
    webExperienceId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateWebExperienceCommand");
var de_DeleteApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteApplicationCommand");
var de_DeleteAttachmentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteAttachmentCommand");
var de_DeleteChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChatControlsConfigurationCommand");
var de_DeleteChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteChatResponseConfigurationCommand");
var de_DeleteConversationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteConversationCommand");
var de_DeleteDataAccessorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDataAccessorCommand");
var de_DeleteDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDataSourceCommand");
var de_DeleteGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteGroupCommand");
var de_DeleteIndexCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteIndexCommand");
var de_DeletePluginCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeletePluginCommand");
var de_DeleteRetrieverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteRetrieverCommand");
var de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteUserCommand");
var de_DeleteWebExperienceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteWebExperienceCommand");
var de_DisassociatePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DisassociatePermissionCommand");
var de_GetApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationArn: import_smithy_client.expectString,
    applicationId: import_smithy_client.expectString,
    attachmentsConfiguration: import_smithy_client._json,
    autoSubscriptionConfiguration: import_smithy_client._json,
    clientIdsForOIDC: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    description: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    encryptionConfiguration: import_smithy_client._json,
    error: import_smithy_client._json,
    iamIdentityProviderArn: import_smithy_client.expectString,
    identityCenterApplicationArn: import_smithy_client.expectString,
    identityType: import_smithy_client.expectString,
    personalizationConfiguration: import_smithy_client._json,
    qAppsConfiguration: import_smithy_client._json,
    quickSightConfiguration: import_smithy_client._json,
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetApplicationCommand");
var de_GetChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    blockedPhrases: import_smithy_client._json,
    creatorModeConfiguration: import_smithy_client._json,
    hallucinationReductionConfiguration: import_smithy_client._json,
    nextToken: import_smithy_client.expectString,
    orchestrationConfiguration: import_smithy_client._json,
    responseScope: import_smithy_client.expectString,
    topicConfigurations: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetChatControlsConfigurationCommand");
var de_GetChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    chatResponseConfigurationArn: import_smithy_client.expectString,
    chatResponseConfigurationId: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    inUseConfiguration: /* @__PURE__ */ __name((_) => de_ChatResponseConfigurationDetail(_, context), "inUseConfiguration"),
    lastUpdateConfiguration: /* @__PURE__ */ __name((_) => de_ChatResponseConfigurationDetail(_, context), "lastUpdateConfiguration")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetChatResponseConfigurationCommand");
var de_GetDataAccessorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    actionConfigurations: /* @__PURE__ */ __name((_) => de_ActionConfigurationList(_, context), "actionConfigurations"),
    applicationId: import_smithy_client.expectString,
    authenticationDetail: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataAccessorArn: import_smithy_client.expectString,
    dataAccessorId: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    idcApplicationArn: import_smithy_client.expectString,
    principal: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataAccessorCommand");
var de_GetDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    configuration: /* @__PURE__ */ __name((_) => de_DataSourceConfiguration(_, context), "configuration"),
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataSourceArn: import_smithy_client.expectString,
    dataSourceId: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    documentEnrichmentConfiguration: /* @__PURE__ */ __name((_) => de_DocumentEnrichmentConfiguration(_, context), "documentEnrichmentConfiguration"),
    error: import_smithy_client._json,
    indexId: import_smithy_client.expectString,
    mediaExtractionConfiguration: import_smithy_client._json,
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    syncSchedule: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt"),
    vpcConfiguration: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataSourceCommand");
var de_GetGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    status: /* @__PURE__ */ __name((_) => de_GroupStatusDetail(_, context), "status"),
    statusHistory: /* @__PURE__ */ __name((_) => de_GroupStatusDetails(_, context), "statusHistory")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetGroupCommand");
var de_GetIndexCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    capacityConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    description: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    documentAttributeConfigurations: import_smithy_client._json,
    error: import_smithy_client._json,
    indexArn: import_smithy_client.expectString,
    indexId: import_smithy_client.expectString,
    indexStatistics: import_smithy_client._json,
    status: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetIndexCommand");
var de_GetMediaCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    mediaBytes: context.base64Decoder,
    mediaMimeType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetMediaCommand");
var de_GetPluginCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    authConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "authConfiguration"),
    buildStatus: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    customPluginConfiguration: import_smithy_client._json,
    displayName: import_smithy_client.expectString,
    pluginArn: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString,
    serverUrl: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPluginCommand");
var de_GetPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    policy: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetPolicyCommand");
var de_GetRetrieverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    configuration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "configuration"),
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    retrieverArn: import_smithy_client.expectString,
    retrieverId: import_smithy_client.expectString,
    roleArn: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetRetrieverCommand");
var de_GetUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    userAliases: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetUserCommand");
var de_GetWebExperienceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applicationId: import_smithy_client.expectString,
    authenticationConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "authenticationConfiguration"),
    browserExtensionConfiguration: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    customizationConfiguration: import_smithy_client._json,
    defaultEndpoint: import_smithy_client.expectString,
    error: import_smithy_client._json,
    identityProviderConfiguration: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "identityProviderConfiguration"),
    origins: import_smithy_client._json,
    roleArn: import_smithy_client.expectString,
    samplePromptsControlMode: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    subtitle: import_smithy_client.expectString,
    title: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt"),
    webExperienceArn: import_smithy_client.expectString,
    webExperienceId: import_smithy_client.expectString,
    welcomeMessage: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetWebExperienceCommand");
var de_ListApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    applications: /* @__PURE__ */ __name((_) => de_Applications(_, context), "applications"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListApplicationsCommand");
var de_ListAttachmentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    attachments: /* @__PURE__ */ __name((_) => de_AttachmentList(_, context), "attachments"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListAttachmentsCommand");
var de_ListChatResponseConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    chatResponseConfigurations: /* @__PURE__ */ __name((_) => de_ChatResponseConfigurations(_, context), "chatResponseConfigurations"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListChatResponseConfigurationsCommand");
var de_ListConversationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    conversations: /* @__PURE__ */ __name((_) => de_Conversations(_, context), "conversations"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListConversationsCommand");
var de_ListDataAccessorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataAccessors: /* @__PURE__ */ __name((_) => de_DataAccessors(_, context), "dataAccessors"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataAccessorsCommand");
var de_ListDataSourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    dataSources: /* @__PURE__ */ __name((_) => de_DataSources(_, context), "dataSources"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourcesCommand");
var de_ListDataSourceSyncJobsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    history: /* @__PURE__ */ __name((_) => de_DataSourceSyncJobs(_, context), "history"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataSourceSyncJobsCommand");
var de_ListDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    documentDetailList: /* @__PURE__ */ __name((_) => de_DocumentDetailList(_, context), "documentDetailList"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDocumentsCommand");
var de_ListGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListGroupsCommand");
var de_ListIndicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    indices: /* @__PURE__ */ __name((_) => de_Indices(_, context), "indices"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListIndicesCommand");
var de_ListMessagesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    messages: /* @__PURE__ */ __name((_) => de_Messages(_, context), "messages"),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListMessagesCommand");
var de_ListPluginActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPluginActionsCommand");
var de_ListPluginsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    plugins: /* @__PURE__ */ __name((_) => de_Plugins(_, context), "plugins")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPluginsCommand");
var de_ListPluginTypeActionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPluginTypeActionsCommand");
var de_ListPluginTypeMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    items: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPluginTypeMetadataCommand");
var de_ListRetrieversCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    retrievers: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListRetrieversCommand");
var de_ListSubscriptionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    subscriptions: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSubscriptionsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListWebExperiencesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    webExperiences: /* @__PURE__ */ __name((_) => de_WebExperiences(_, context), "webExperiences")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListWebExperiencesCommand");
var de_PutFeedbackCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutFeedbackCommand");
var de_PutGroupCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutGroupCommand");
var de_SearchRelevantContentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    relevantContent: /* @__PURE__ */ __name((_) => de_RelevantContentList(_, context), "relevantContent")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchRelevantContentCommand");
var de_StartDataSourceSyncJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    executionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartDataSourceSyncJobCommand");
var de_StopDataSourceSyncJobCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_StopDataSourceSyncJobCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateApplicationCommand");
var de_UpdateChatControlsConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateChatControlsConfigurationCommand");
var de_UpdateChatResponseConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateChatResponseConfigurationCommand");
var de_UpdateDataAccessorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateDataAccessorCommand");
var de_UpdateDataSourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateDataSourceCommand");
var de_UpdateIndexCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateIndexCommand");
var de_UpdatePluginCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdatePluginCommand");
var de_UpdateRetrieverCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateRetrieverCommand");
var de_UpdateSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    currentSubscription: import_smithy_client._json,
    nextSubscription: import_smithy_client._json,
    subscriptionArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateSubscriptionCommand");
var de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    userAliasesAdded: import_smithy_client._json,
    userAliasesDeleted: import_smithy_client._json,
    userAliasesUpdated: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateUserCommand");
var de_UpdateWebExperienceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateWebExperienceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.qbusiness#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.qbusiness#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "InternalServerException":
    case "com.amazonaws.qbusiness#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.qbusiness#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.qbusiness#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.qbusiness#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.qbusiness#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ExternalResourceException":
    case "com.amazonaws.qbusiness#ExternalResourceException":
      throw await de_ExternalResourceExceptionRes(parsedOutput, context);
    case "LicenseNotFoundException":
    case "com.amazonaws.qbusiness#LicenseNotFoundException":
      throw await de_LicenseNotFoundExceptionRes(parsedOutput, context);
    case "MediaTooLargeException":
    case "com.amazonaws.qbusiness#MediaTooLargeException":
      throw await de_MediaTooLargeExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(QBusinessServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_ExternalResourceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ExternalResourceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ExternalResourceExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_LicenseNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new LicenseNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_LicenseNotFoundExceptionRes");
var de_MediaTooLargeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new MediaTooLargeException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_MediaTooLargeExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fields: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_ChatInputStream = /* @__PURE__ */ __name((input, context) => {
  const eventMarshallingVisitor = /* @__PURE__ */ __name((event) => ChatInputStream.visit(event, {
    configurationEvent: /* @__PURE__ */ __name((value) => se_ConfigurationEvent_event(value, context), "configurationEvent"),
    textEvent: /* @__PURE__ */ __name((value) => se_TextInputEvent_event(value, context), "textEvent"),
    attachmentEvent: /* @__PURE__ */ __name((value) => se_AttachmentInputEvent_event(value, context), "attachmentEvent"),
    actionExecutionEvent: /* @__PURE__ */ __name((value) => se_ActionExecutionEvent_event(value, context), "actionExecutionEvent"),
    endOfInputEvent: /* @__PURE__ */ __name((value) => se_EndOfInputEvent_event(value, context), "endOfInputEvent"),
    authChallengeResponseEvent: /* @__PURE__ */ __name((value) => se_AuthChallengeResponseEvent_event(value, context), "authChallengeResponseEvent"),
    _: /* @__PURE__ */ __name((value) => value, "_")
  }), "eventMarshallingVisitor");
  return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);
}, "se_ChatInputStream");
var se_ActionExecutionEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "actionExecutionEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = se_ActionExecutionEvent(input, context);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_ActionExecutionEvent_event");
var se_AttachmentInputEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "attachmentEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = se_AttachmentInputEvent(input, context);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_AttachmentInputEvent_event");
var se_AuthChallengeResponseEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "authChallengeResponseEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = (0, import_smithy_client._json)(input);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_AuthChallengeResponseEvent_event");
var se_ConfigurationEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "configurationEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = se_ConfigurationEvent(input, context);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_ConfigurationEvent_event");
var se_EndOfInputEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "endOfInputEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = (0, import_smithy_client._json)(input);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_EndOfInputEvent_event");
var se_TextInputEvent_event = /* @__PURE__ */ __name((input, context) => {
  const headers = {
    ":event-type": { type: "string", value: "textEvent" },
    ":message-type": { type: "string", value: "event" },
    ":content-type": { type: "string", value: "application/json" }
  };
  let body = new Uint8Array();
  body = (0, import_smithy_client._json)(input);
  body = context.utf8Decoder(JSON.stringify(body));
  return { headers, body };
}, "se_TextInputEvent_event");
var de_ChatOutputStream = /* @__PURE__ */ __name((output, context) => {
  return context.eventStreamMarshaller.deserialize(output, async (event) => {
    if (event["textEvent"] != null) {
      return {
        textEvent: await de_TextOutputEvent_event(event["textEvent"], context)
      };
    }
    if (event["metadataEvent"] != null) {
      return {
        metadataEvent: await de_MetadataEvent_event(event["metadataEvent"], context)
      };
    }
    if (event["actionReviewEvent"] != null) {
      return {
        actionReviewEvent: await de_ActionReviewEvent_event(event["actionReviewEvent"], context)
      };
    }
    if (event["failedAttachmentEvent"] != null) {
      return {
        failedAttachmentEvent: await de_FailedAttachmentEvent_event(event["failedAttachmentEvent"], context)
      };
    }
    if (event["authChallengeRequestEvent"] != null) {
      return {
        authChallengeRequestEvent: await de_AuthChallengeRequestEvent_event(
          event["authChallengeRequestEvent"],
          context
        )
      };
    }
    return { $unknown: event };
  });
}, "de_ChatOutputStream");
var de_ActionReviewEvent_event = /* @__PURE__ */ __name(async (output, context) => {
  const contents = {};
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  Object.assign(contents, de_ActionReviewEvent(data, context));
  return contents;
}, "de_ActionReviewEvent_event");
var de_AuthChallengeRequestEvent_event = /* @__PURE__ */ __name(async (output, context) => {
  const contents = {};
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  Object.assign(contents, (0, import_smithy_client._json)(data));
  return contents;
}, "de_AuthChallengeRequestEvent_event");
var de_FailedAttachmentEvent_event = /* @__PURE__ */ __name(async (output, context) => {
  const contents = {};
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  Object.assign(contents, (0, import_smithy_client._json)(data));
  return contents;
}, "de_FailedAttachmentEvent_event");
var de_MetadataEvent_event = /* @__PURE__ */ __name(async (output, context) => {
  const contents = {};
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  Object.assign(contents, de_MetadataEvent(data, context));
  return contents;
}, "de_MetadataEvent_event");
var de_TextOutputEvent_event = /* @__PURE__ */ __name(async (output, context) => {
  const contents = {};
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  Object.assign(contents, (0, import_smithy_client._json)(data));
  return contents;
}, "de_TextOutputEvent_event");
var se_ActionConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    action: [],
    filterConfiguration: /* @__PURE__ */ __name((_) => se_ActionFilterConfiguration(_, context), "filterConfiguration")
  });
}, "se_ActionConfiguration");
var se_ActionConfigurationList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ActionConfiguration(entry, context);
  });
}, "se_ActionConfigurationList");
var se_ActionExecution = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    payload: /* @__PURE__ */ __name((_) => se_ActionExecutionPayload(_, context), "payload"),
    payloadFieldNameSeparator: [],
    pluginId: []
  });
}, "se_ActionExecution");
var se_ActionExecutionEvent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    payload: /* @__PURE__ */ __name((_) => se_ActionExecutionPayload(_, context), "payload"),
    payloadFieldNameSeparator: [],
    pluginId: []
  });
}, "se_ActionExecutionEvent");
var se_ActionExecutionPayload = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_ActionExecutionPayloadField(value, context);
    return acc;
  }, {});
}, "se_ActionExecutionPayload");
var se_ActionExecutionPayloadField = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    value: /* @__PURE__ */ __name((_) => se_ActionPayloadFieldValue(_, context), "value")
  });
}, "se_ActionExecutionPayloadField");
var se_ActionFilterConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    documentAttributeFilter: /* @__PURE__ */ __name((_) => se_AttributeFilter(_, context), "documentAttributeFilter")
  });
}, "se_ActionFilterConfiguration");
var se_ActionPayloadFieldValue = /* @__PURE__ */ __name((input, context) => {
  return input;
}, "se_ActionPayloadFieldValue");
var se_AttachmentInput = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    copyFrom: import_smithy_client._json,
    data: context.base64Encoder,
    name: []
  });
}, "se_AttachmentInput");
var se_AttachmentInputEvent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    attachment: /* @__PURE__ */ __name((_) => se_AttachmentInput(_, context), "attachment")
  });
}, "se_AttachmentInputEvent");
var se_AttachmentsInput = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_AttachmentInput(entry, context);
  });
}, "se_AttachmentsInput");
var se_AttributeFilter = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    andAllFilters: /* @__PURE__ */ __name((_) => se_AttributeFilters(_, context), "andAllFilters"),
    containsAll: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "containsAll"),
    containsAny: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "containsAny"),
    equalsTo: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "equalsTo"),
    greaterThan: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "greaterThan"),
    greaterThanOrEquals: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "greaterThanOrEquals"),
    lessThan: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "lessThan"),
    lessThanOrEquals: /* @__PURE__ */ __name((_) => se_DocumentAttribute(_, context), "lessThanOrEquals"),
    notFilter: /* @__PURE__ */ __name((_) => se_AttributeFilter(_, context), "notFilter"),
    orAllFilters: /* @__PURE__ */ __name((_) => se_AttributeFilters(_, context), "orAllFilters")
  });
}, "se_AttributeFilter");
var se_AttributeFilters = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_AttributeFilter(entry, context);
  });
}, "se_AttributeFilters");
var se_ConfigurationEvent = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    attributeFilter: /* @__PURE__ */ __name((_) => se_AttributeFilter(_, context), "attributeFilter"),
    chatMode: [],
    chatModeConfiguration: import_smithy_client._json
  });
}, "se_ConfigurationEvent");
var se_DataSourceConfiguration = /* @__PURE__ */ __name((input, context) => {
  return input;
}, "se_DataSourceConfiguration");
var se_Document = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    accessConfiguration: import_smithy_client._json,
    attributes: /* @__PURE__ */ __name((_) => se_DocumentAttributes(_, context), "attributes"),
    content: /* @__PURE__ */ __name((_) => se_DocumentContent(_, context), "content"),
    contentType: [],
    documentEnrichmentConfiguration: /* @__PURE__ */ __name((_) => se_DocumentEnrichmentConfiguration(_, context), "documentEnrichmentConfiguration"),
    id: [],
    mediaExtractionConfiguration: import_smithy_client._json,
    title: []
  });
}, "se_Document");
var se_DocumentAttribute = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    name: [],
    value: /* @__PURE__ */ __name((_) => se_DocumentAttributeValue(_, context), "value")
  });
}, "se_DocumentAttribute");
var se_DocumentAttributeCondition = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    key: [],
    operator: [],
    value: /* @__PURE__ */ __name((_) => se_DocumentAttributeValue(_, context), "value")
  });
}, "se_DocumentAttributeCondition");
var se_DocumentAttributes = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_DocumentAttribute(entry, context);
  });
}, "se_DocumentAttributes");
var se_DocumentAttributeTarget = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    attributeValueOperator: [],
    key: [],
    value: /* @__PURE__ */ __name((_) => se_DocumentAttributeValue(_, context), "value")
  });
}, "se_DocumentAttributeTarget");
var se_DocumentAttributeValue = /* @__PURE__ */ __name((input, context) => {
  return DocumentAttributeValue.visit(input, {
    dateValue: /* @__PURE__ */ __name((value) => ({ dateValue: value.getTime() / 1e3 }), "dateValue"),
    longValue: /* @__PURE__ */ __name((value) => ({ longValue: value }), "longValue"),
    stringListValue: /* @__PURE__ */ __name((value) => ({ stringListValue: (0, import_smithy_client._json)(value) }), "stringListValue"),
    stringValue: /* @__PURE__ */ __name((value) => ({ stringValue: value }), "stringValue"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_DocumentAttributeValue");
var se_DocumentContent = /* @__PURE__ */ __name((input, context) => {
  return DocumentContent.visit(input, {
    blob: /* @__PURE__ */ __name((value) => ({ blob: context.base64Encoder(value) }), "blob"),
    s3: /* @__PURE__ */ __name((value) => ({ s3: (0, import_smithy_client._json)(value) }), "s3"),
    _: /* @__PURE__ */ __name((name, value) => ({ [name]: value }), "_")
  });
}, "se_DocumentContent");
var se_DocumentEnrichmentConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    inlineConfigurations: /* @__PURE__ */ __name((_) => se_InlineDocumentEnrichmentConfigurations(_, context), "inlineConfigurations"),
    postExtractionHookConfiguration: /* @__PURE__ */ __name((_) => se_HookConfiguration(_, context), "postExtractionHookConfiguration"),
    preExtractionHookConfiguration: /* @__PURE__ */ __name((_) => se_HookConfiguration(_, context), "preExtractionHookConfiguration")
  });
}, "se_DocumentEnrichmentConfiguration");
var se_Documents = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Document(entry, context);
  });
}, "se_Documents");
var se_HookConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    invocationCondition: /* @__PURE__ */ __name((_) => se_DocumentAttributeCondition(_, context), "invocationCondition"),
    lambdaArn: [],
    roleArn: [],
    s3BucketName: []
  });
}, "se_HookConfiguration");
var se_InlineDocumentEnrichmentConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    condition: /* @__PURE__ */ __name((_) => se_DocumentAttributeCondition(_, context), "condition"),
    documentContentOperator: [],
    target: /* @__PURE__ */ __name((_) => se_DocumentAttributeTarget(_, context), "target")
  });
}, "se_InlineDocumentEnrichmentConfiguration");
var se_InlineDocumentEnrichmentConfigurations = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_InlineDocumentEnrichmentConfiguration(entry, context);
  });
}, "se_InlineDocumentEnrichmentConfigurations");
var se_MessageUsefulnessFeedback = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    comment: [],
    reason: [],
    submittedAt: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "submittedAt"),
    usefulness: []
  });
}, "se_MessageUsefulnessFeedback");
var de_ActionConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    action: import_smithy_client.expectString,
    filterConfiguration: /* @__PURE__ */ __name((_) => de_ActionFilterConfiguration(_, context), "filterConfiguration")
  });
}, "de_ActionConfiguration");
var de_ActionConfigurationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ActionConfiguration(entry, context);
  });
  return retVal;
}, "de_ActionConfigurationList");
var de_ActionExecution = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    payload: /* @__PURE__ */ __name((_) => de_ActionExecutionPayload(_, context), "payload"),
    payloadFieldNameSeparator: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString
  });
}, "de_ActionExecution");
var de_ActionExecutionPayload = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce(
    (acc, [key, value]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_ActionExecutionPayloadField(value, context);
      return acc;
    },
    {}
  );
}, "de_ActionExecutionPayload");
var de_ActionExecutionPayloadField = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    value: /* @__PURE__ */ __name((_) => de_ActionPayloadFieldValue(_, context), "value")
  });
}, "de_ActionExecutionPayloadField");
var de_ActionFilterConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    documentAttributeFilter: /* @__PURE__ */ __name((_) => de_AttributeFilter(_, context), "documentAttributeFilter")
  });
}, "de_ActionFilterConfiguration");
var de_ActionPayloadFieldValue = /* @__PURE__ */ __name((output, context) => {
  return output;
}, "de_ActionPayloadFieldValue");
var de_ActionReview = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    payload: /* @__PURE__ */ __name((_) => de_ActionReviewPayload(_, context), "payload"),
    payloadFieldNameSeparator: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString,
    pluginType: import_smithy_client.expectString
  });
}, "de_ActionReview");
var de_ActionReviewEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    conversationId: import_smithy_client.expectString,
    payload: /* @__PURE__ */ __name((_) => de_ActionReviewPayload(_, context), "payload"),
    payloadFieldNameSeparator: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString,
    pluginType: import_smithy_client.expectString,
    systemMessageId: import_smithy_client.expectString,
    userMessageId: import_smithy_client.expectString
  });
}, "de_ActionReviewEvent");
var de_ActionReviewPayload = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_ActionReviewPayloadField(value, context);
    return acc;
  }, {});
}, "de_ActionReviewPayload");
var de_ActionReviewPayloadField = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    allowedFormat: import_smithy_client.expectString,
    allowedValues: /* @__PURE__ */ __name((_) => de_ActionReviewPayloadFieldAllowedValues(_, context), "allowedValues"),
    arrayItemJsonSchema: /* @__PURE__ */ __name((_) => de_ActionReviewPayloadFieldArrayItemJsonSchema(_, context), "arrayItemJsonSchema"),
    displayDescription: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    displayOrder: import_smithy_client.expectInt32,
    required: import_smithy_client.expectBoolean,
    type: import_smithy_client.expectString,
    value: /* @__PURE__ */ __name((_) => de_ActionPayloadFieldValue(_, context), "value")
  });
}, "de_ActionReviewPayloadField");
var de_ActionReviewPayloadFieldAllowedValue = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    displayValue: /* @__PURE__ */ __name((_) => de_ActionPayloadFieldValue(_, context), "displayValue"),
    value: /* @__PURE__ */ __name((_) => de_ActionPayloadFieldValue(_, context), "value")
  });
}, "de_ActionReviewPayloadFieldAllowedValue");
var de_ActionReviewPayloadFieldAllowedValues = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ActionReviewPayloadFieldAllowedValue(entry, context);
  });
  return retVal;
}, "de_ActionReviewPayloadFieldAllowedValues");
var de_ActionReviewPayloadFieldArrayItemJsonSchema = /* @__PURE__ */ __name((output, context) => {
  return output;
}, "de_ActionReviewPayloadFieldArrayItemJsonSchema");
var de_Application = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationId: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    identityType: import_smithy_client.expectString,
    quickSightConfiguration: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_Application");
var de_Applications = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Application(entry, context);
  });
  return retVal;
}, "de_Applications");
var de_Attachment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attachmentId: import_smithy_client.expectString,
    conversationId: import_smithy_client.expectString,
    copyFrom: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)), "copyFrom"),
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    error: import_smithy_client._json,
    fileSize: import_smithy_client.expectInt32,
    fileType: import_smithy_client.expectString,
    md5chksum: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_Attachment");
var de_AttachmentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Attachment(entry, context);
  });
  return retVal;
}, "de_AttachmentList");
var de_AttributeFilter = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    andAllFilters: /* @__PURE__ */ __name((_) => de_AttributeFilters(_, context), "andAllFilters"),
    containsAll: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "containsAll"),
    containsAny: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "containsAny"),
    equalsTo: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "equalsTo"),
    greaterThan: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "greaterThan"),
    greaterThanOrEquals: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "greaterThanOrEquals"),
    lessThan: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "lessThan"),
    lessThanOrEquals: /* @__PURE__ */ __name((_) => de_DocumentAttribute(_, context), "lessThanOrEquals"),
    notFilter: /* @__PURE__ */ __name((_) => de_AttributeFilter(_, context), "notFilter"),
    orAllFilters: /* @__PURE__ */ __name((_) => de_AttributeFilters(_, context), "orAllFilters")
  });
}, "de_AttributeFilter");
var de_AttributeFilters = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AttributeFilter(entry, context);
  });
  return retVal;
}, "de_AttributeFilters");
var de_ChatResponseConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    chatResponseConfigurationArn: import_smithy_client.expectString,
    chatResponseConfigurationId: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    responseConfigurationSummary: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_ChatResponseConfiguration");
var de_ChatResponseConfigurationDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    error: import_smithy_client._json,
    responseConfigurationSummary: import_smithy_client.expectString,
    responseConfigurations: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_ChatResponseConfigurationDetail");
var de_ChatResponseConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ChatResponseConfiguration(entry, context);
  });
  return retVal;
}, "de_ChatResponseConfigurations");
var de_Conversation = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    conversationId: import_smithy_client.expectString,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "startTime"),
    title: import_smithy_client.expectString
  });
}, "de_Conversation");
var de_Conversations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Conversation(entry, context);
  });
  return retVal;
}, "de_Conversations");
var de_DataAccessor = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    authenticationDetail: import_smithy_client._json,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataAccessorArn: import_smithy_client.expectString,
    dataAccessorId: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    idcApplicationArn: import_smithy_client.expectString,
    principal: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_DataAccessor");
var de_DataAccessors = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataAccessor(entry, context);
  });
  return retVal;
}, "de_DataAccessors");
var de_DataSource = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    dataSourceId: import_smithy_client.expectString,
    displayName: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_DataSource");
var de_DataSourceConfiguration = /* @__PURE__ */ __name((output, context) => {
  return output;
}, "de_DataSourceConfiguration");
var de_DataSources = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataSource(entry, context);
  });
  return retVal;
}, "de_DataSources");
var de_DataSourceSyncJob = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    dataSourceErrorCode: import_smithy_client.expectString,
    endTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "endTime"),
    error: import_smithy_client._json,
    executionId: import_smithy_client.expectString,
    metrics: import_smithy_client._json,
    startTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "startTime"),
    status: import_smithy_client.expectString
  });
}, "de_DataSourceSyncJob");
var de_DataSourceSyncJobs = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DataSourceSyncJob(entry, context);
  });
  return retVal;
}, "de_DataSourceSyncJobs");
var de_DocumentAttribute = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    name: import_smithy_client.expectString,
    value: /* @__PURE__ */ __name((_) => de_DocumentAttributeValue((0, import_core2.awsExpectUnion)(_), context), "value")
  });
}, "de_DocumentAttribute");
var de_DocumentAttributeCondition = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    key: import_smithy_client.expectString,
    operator: import_smithy_client.expectString,
    value: /* @__PURE__ */ __name((_) => de_DocumentAttributeValue((0, import_core2.awsExpectUnion)(_), context), "value")
  });
}, "de_DocumentAttributeCondition");
var de_DocumentAttributes = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DocumentAttribute(entry, context);
  });
  return retVal;
}, "de_DocumentAttributes");
var de_DocumentAttributeTarget = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    attributeValueOperator: import_smithy_client.expectString,
    key: import_smithy_client.expectString,
    value: /* @__PURE__ */ __name((_) => de_DocumentAttributeValue((0, import_core2.awsExpectUnion)(_), context), "value")
  });
}, "de_DocumentAttributeTarget");
var de_DocumentAttributeValue = /* @__PURE__ */ __name((output, context) => {
  if (output.dateValue != null) {
    return {
      dateValue: (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(output.dateValue)))
    };
  }
  if ((0, import_smithy_client.expectLong)(output.longValue) !== void 0) {
    return { longValue: (0, import_smithy_client.expectLong)(output.longValue) };
  }
  if (output.stringListValue != null) {
    return {
      stringListValue: (0, import_smithy_client._json)(output.stringListValue)
    };
  }
  if ((0, import_smithy_client.expectString)(output.stringValue) !== void 0) {
    return { stringValue: (0, import_smithy_client.expectString)(output.stringValue) };
  }
  return { $unknown: Object.entries(output)[0] };
}, "de_DocumentAttributeValue");
var de_DocumentDetailList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_DocumentDetails(entry, context);
  });
  return retVal;
}, "de_DocumentDetailList");
var de_DocumentDetails = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    documentId: import_smithy_client.expectString,
    error: import_smithy_client._json,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_DocumentDetails");
var de_DocumentEnrichmentConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    inlineConfigurations: /* @__PURE__ */ __name((_) => de_InlineDocumentEnrichmentConfigurations(_, context), "inlineConfigurations"),
    postExtractionHookConfiguration: /* @__PURE__ */ __name((_) => de_HookConfiguration(_, context), "postExtractionHookConfiguration"),
    preExtractionHookConfiguration: /* @__PURE__ */ __name((_) => de_HookConfiguration(_, context), "preExtractionHookConfiguration")
  });
}, "de_DocumentEnrichmentConfiguration");
var de_GroupStatusDetail = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    errorDetail: import_smithy_client._json,
    lastUpdatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "lastUpdatedAt"),
    status: import_smithy_client.expectString
  });
}, "de_GroupStatusDetail");
var de_GroupStatusDetails = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_GroupStatusDetail(entry, context);
  });
  return retVal;
}, "de_GroupStatusDetails");
var de_HookConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    invocationCondition: /* @__PURE__ */ __name((_) => de_DocumentAttributeCondition(_, context), "invocationCondition"),
    lambdaArn: import_smithy_client.expectString,
    roleArn: import_smithy_client.expectString,
    s3BucketName: import_smithy_client.expectString
  });
}, "de_HookConfiguration");
var de_Index = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    indexId: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_Index");
var de_Indices = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Index(entry, context);
  });
  return retVal;
}, "de_Indices");
var de_InlineDocumentEnrichmentConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    condition: /* @__PURE__ */ __name((_) => de_DocumentAttributeCondition(_, context), "condition"),
    documentContentOperator: import_smithy_client.expectString,
    target: /* @__PURE__ */ __name((_) => de_DocumentAttributeTarget(_, context), "target")
  });
}, "de_InlineDocumentEnrichmentConfiguration");
var de_InlineDocumentEnrichmentConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InlineDocumentEnrichmentConfiguration(entry, context);
  });
  return retVal;
}, "de_InlineDocumentEnrichmentConfigurations");
var de_Message = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    actionExecution: /* @__PURE__ */ __name((_) => de_ActionExecution(_, context), "actionExecution"),
    actionReview: /* @__PURE__ */ __name((_) => de_ActionReview(_, context), "actionReview"),
    attachments: import_smithy_client._json,
    body: import_smithy_client.expectString,
    messageId: import_smithy_client.expectString,
    sourceAttribution: /* @__PURE__ */ __name((_) => de_SourceAttributions(_, context), "sourceAttribution"),
    time: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "time"),
    type: import_smithy_client.expectString
  });
}, "de_Message");
var de_Messages = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Message(entry, context);
  });
  return retVal;
}, "de_Messages");
var de_MetadataEvent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    conversationId: import_smithy_client.expectString,
    finalTextMessage: import_smithy_client.expectString,
    sourceAttributions: /* @__PURE__ */ __name((_) => de_SourceAttributions(_, context), "sourceAttributions"),
    systemMessageId: import_smithy_client.expectString,
    userMessageId: import_smithy_client.expectString
  });
}, "de_MetadataEvent");
var de_Plugin = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    buildStatus: import_smithy_client.expectString,
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    displayName: import_smithy_client.expectString,
    pluginId: import_smithy_client.expectString,
    serverUrl: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    type: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt")
  });
}, "de_Plugin");
var de_Plugins = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Plugin(entry, context);
  });
  return retVal;
}, "de_Plugins");
var de_RelevantContent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    content: import_smithy_client.expectString,
    documentAttributes: /* @__PURE__ */ __name((_) => de_DocumentAttributes(_, context), "documentAttributes"),
    documentId: import_smithy_client.expectString,
    documentTitle: import_smithy_client.expectString,
    documentUri: import_smithy_client.expectString,
    scoreAttributes: import_smithy_client._json
  });
}, "de_RelevantContent");
var de_RelevantContentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_RelevantContent(entry, context);
  });
  return retVal;
}, "de_RelevantContentList");
var de_SourceAttribution = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    citationNumber: import_smithy_client.expectInt32,
    snippet: import_smithy_client.expectString,
    textMessageSegments: import_smithy_client._json,
    title: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt"),
    url: import_smithy_client.expectString
  });
}, "de_SourceAttribution");
var de_SourceAttributions = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).map((entry) => {
    if (entry === null) {
      return null;
    }
    return de_SourceAttribution(entry, context);
  });
  return retVal;
}, "de_SourceAttributions");
var de_WebExperience = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    createdAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "createdAt"),
    defaultEndpoint: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    updatedAt: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "updatedAt"),
    webExperienceId: import_smithy_client.expectString
  });
}, "de_WebExperience");
var de_WebExperiences = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_WebExperience(entry, context);
  });
  return retVal;
}, "de_WebExperiences");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _cI = "conversationId";
var _cT = "clientToken";
var _dSI = "dataSourceId";
var _dSIa = "dataSourceIds";
var _eT = "endTime";
var _mR = "maxResults";
var _nT = "nextToken";
var _pMI = "parentMessageId";
var _s = "sync";
var _sF = "statusFilter";
var _sS = "syncStatus";
var _sT = "startTime";
var _tK = "tagKeys";
var _uET = "updatedEarlierThan";
var _uG = "userGroups";
var _uI = "userId";

// src/commands/AssociatePermissionCommand.ts
var AssociatePermissionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "AssociatePermission", {}).n("QBusinessClient", "AssociatePermissionCommand").f(void 0, void 0).ser(se_AssociatePermissionCommand).de(de_AssociatePermissionCommand).build() {
  static {
    __name(this, "AssociatePermissionCommand");
  }
};

// src/commands/BatchDeleteDocumentCommand.ts



var BatchDeleteDocumentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "BatchDeleteDocument", {}).n("QBusinessClient", "BatchDeleteDocumentCommand").f(void 0, void 0).ser(se_BatchDeleteDocumentCommand).de(de_BatchDeleteDocumentCommand).build() {
  static {
    __name(this, "BatchDeleteDocumentCommand");
  }
};

// src/commands/BatchPutDocumentCommand.ts



var BatchPutDocumentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "BatchPutDocument", {}).n("QBusinessClient", "BatchPutDocumentCommand").f(void 0, void 0).ser(se_BatchPutDocumentCommand).de(de_BatchPutDocumentCommand).build() {
  static {
    __name(this, "BatchPutDocumentCommand");
  }
};

// src/commands/CancelSubscriptionCommand.ts



var CancelSubscriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CancelSubscription", {}).n("QBusinessClient", "CancelSubscriptionCommand").f(void 0, void 0).ser(se_CancelSubscriptionCommand).de(de_CancelSubscriptionCommand).build() {
  static {
    __name(this, "CancelSubscriptionCommand");
  }
};

// src/commands/ChatCommand.ts




var ChatCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions()),
    (0, import_middleware_eventstream.getEventStreamPlugin)(config)
  ];
}).s("ExpertQ", "Chat", {
  /**
   * @internal
   */
  eventStream: {
    input: true,
    output: true
  }
}).n("QBusinessClient", "ChatCommand").f(ChatInputFilterSensitiveLog, ChatOutputFilterSensitiveLog).ser(se_ChatCommand).de(de_ChatCommand).build() {
  static {
    __name(this, "ChatCommand");
  }
};

// src/commands/ChatSyncCommand.ts



var ChatSyncCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ChatSync", {}).n("QBusinessClient", "ChatSyncCommand").f(void 0, void 0).ser(se_ChatSyncCommand).de(de_ChatSyncCommand).build() {
  static {
    __name(this, "ChatSyncCommand");
  }
};

// src/commands/CheckDocumentAccessCommand.ts



var CheckDocumentAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CheckDocumentAccess", {}).n("QBusinessClient", "CheckDocumentAccessCommand").f(void 0, void 0).ser(se_CheckDocumentAccessCommand).de(de_CheckDocumentAccessCommand).build() {
  static {
    __name(this, "CheckDocumentAccessCommand");
  }
};

// src/commands/CreateAnonymousWebExperienceUrlCommand.ts



var CreateAnonymousWebExperienceUrlCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateAnonymousWebExperienceUrl", {}).n("QBusinessClient", "CreateAnonymousWebExperienceUrlCommand").f(void 0, void 0).ser(se_CreateAnonymousWebExperienceUrlCommand).de(de_CreateAnonymousWebExperienceUrlCommand).build() {
  static {
    __name(this, "CreateAnonymousWebExperienceUrlCommand");
  }
};

// src/commands/CreateApplicationCommand.ts



var CreateApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateApplication", {}).n("QBusinessClient", "CreateApplicationCommand").f(CreateApplicationRequestFilterSensitiveLog, void 0).ser(se_CreateApplicationCommand).de(de_CreateApplicationCommand).build() {
  static {
    __name(this, "CreateApplicationCommand");
  }
};

// src/commands/CreateChatResponseConfigurationCommand.ts



var CreateChatResponseConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateChatResponseConfiguration", {}).n("QBusinessClient", "CreateChatResponseConfigurationCommand").f(void 0, void 0).ser(se_CreateChatResponseConfigurationCommand).de(de_CreateChatResponseConfigurationCommand).build() {
  static {
    __name(this, "CreateChatResponseConfigurationCommand");
  }
};

// src/commands/CreateDataAccessorCommand.ts



var CreateDataAccessorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateDataAccessor", {}).n("QBusinessClient", "CreateDataAccessorCommand").f(CreateDataAccessorRequestFilterSensitiveLog, void 0).ser(se_CreateDataAccessorCommand).de(de_CreateDataAccessorCommand).build() {
  static {
    __name(this, "CreateDataAccessorCommand");
  }
};

// src/commands/CreateDataSourceCommand.ts



var CreateDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateDataSource", {}).n("QBusinessClient", "CreateDataSourceCommand").f(void 0, void 0).ser(se_CreateDataSourceCommand).de(de_CreateDataSourceCommand).build() {
  static {
    __name(this, "CreateDataSourceCommand");
  }
};

// src/commands/CreateIndexCommand.ts



var CreateIndexCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateIndex", {}).n("QBusinessClient", "CreateIndexCommand").f(void 0, void 0).ser(se_CreateIndexCommand).de(de_CreateIndexCommand).build() {
  static {
    __name(this, "CreateIndexCommand");
  }
};

// src/commands/CreatePluginCommand.ts



var CreatePluginCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreatePlugin", {}).n("QBusinessClient", "CreatePluginCommand").f(CreatePluginRequestFilterSensitiveLog, void 0).ser(se_CreatePluginCommand).de(de_CreatePluginCommand).build() {
  static {
    __name(this, "CreatePluginCommand");
  }
};

// src/commands/CreateRetrieverCommand.ts



var CreateRetrieverCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateRetriever", {}).n("QBusinessClient", "CreateRetrieverCommand").f(void 0, void 0).ser(se_CreateRetrieverCommand).de(de_CreateRetrieverCommand).build() {
  static {
    __name(this, "CreateRetrieverCommand");
  }
};

// src/commands/CreateSubscriptionCommand.ts



var CreateSubscriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateSubscription", {}).n("QBusinessClient", "CreateSubscriptionCommand").f(void 0, void 0).ser(se_CreateSubscriptionCommand).de(de_CreateSubscriptionCommand).build() {
  static {
    __name(this, "CreateSubscriptionCommand");
  }
};

// src/commands/CreateUserCommand.ts



var CreateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateUser", {}).n("QBusinessClient", "CreateUserCommand").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {
  static {
    __name(this, "CreateUserCommand");
  }
};

// src/commands/CreateWebExperienceCommand.ts



var CreateWebExperienceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "CreateWebExperience", {}).n("QBusinessClient", "CreateWebExperienceCommand").f(void 0, void 0).ser(se_CreateWebExperienceCommand).de(de_CreateWebExperienceCommand).build() {
  static {
    __name(this, "CreateWebExperienceCommand");
  }
};

// src/commands/DeleteApplicationCommand.ts



var DeleteApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteApplication", {}).n("QBusinessClient", "DeleteApplicationCommand").f(void 0, void 0).ser(se_DeleteApplicationCommand).de(de_DeleteApplicationCommand).build() {
  static {
    __name(this, "DeleteApplicationCommand");
  }
};

// src/commands/DeleteAttachmentCommand.ts



var DeleteAttachmentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteAttachment", {}).n("QBusinessClient", "DeleteAttachmentCommand").f(void 0, void 0).ser(se_DeleteAttachmentCommand).de(de_DeleteAttachmentCommand).build() {
  static {
    __name(this, "DeleteAttachmentCommand");
  }
};

// src/commands/DeleteChatControlsConfigurationCommand.ts



var DeleteChatControlsConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteChatControlsConfiguration", {}).n("QBusinessClient", "DeleteChatControlsConfigurationCommand").f(void 0, void 0).ser(se_DeleteChatControlsConfigurationCommand).de(de_DeleteChatControlsConfigurationCommand).build() {
  static {
    __name(this, "DeleteChatControlsConfigurationCommand");
  }
};

// src/commands/DeleteChatResponseConfigurationCommand.ts



var DeleteChatResponseConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteChatResponseConfiguration", {}).n("QBusinessClient", "DeleteChatResponseConfigurationCommand").f(void 0, void 0).ser(se_DeleteChatResponseConfigurationCommand).de(de_DeleteChatResponseConfigurationCommand).build() {
  static {
    __name(this, "DeleteChatResponseConfigurationCommand");
  }
};

// src/commands/DeleteConversationCommand.ts



var DeleteConversationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteConversation", {}).n("QBusinessClient", "DeleteConversationCommand").f(void 0, void 0).ser(se_DeleteConversationCommand).de(de_DeleteConversationCommand).build() {
  static {
    __name(this, "DeleteConversationCommand");
  }
};

// src/commands/DeleteDataAccessorCommand.ts



var DeleteDataAccessorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteDataAccessor", {}).n("QBusinessClient", "DeleteDataAccessorCommand").f(void 0, void 0).ser(se_DeleteDataAccessorCommand).de(de_DeleteDataAccessorCommand).build() {
  static {
    __name(this, "DeleteDataAccessorCommand");
  }
};

// src/commands/DeleteDataSourceCommand.ts



var DeleteDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteDataSource", {}).n("QBusinessClient", "DeleteDataSourceCommand").f(void 0, void 0).ser(se_DeleteDataSourceCommand).de(de_DeleteDataSourceCommand).build() {
  static {
    __name(this, "DeleteDataSourceCommand");
  }
};

// src/commands/DeleteGroupCommand.ts



var DeleteGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteGroup", {}).n("QBusinessClient", "DeleteGroupCommand").f(void 0, void 0).ser(se_DeleteGroupCommand).de(de_DeleteGroupCommand).build() {
  static {
    __name(this, "DeleteGroupCommand");
  }
};

// src/commands/DeleteIndexCommand.ts



var DeleteIndexCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteIndex", {}).n("QBusinessClient", "DeleteIndexCommand").f(void 0, void 0).ser(se_DeleteIndexCommand).de(de_DeleteIndexCommand).build() {
  static {
    __name(this, "DeleteIndexCommand");
  }
};

// src/commands/DeletePluginCommand.ts



var DeletePluginCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeletePlugin", {}).n("QBusinessClient", "DeletePluginCommand").f(void 0, void 0).ser(se_DeletePluginCommand).de(de_DeletePluginCommand).build() {
  static {
    __name(this, "DeletePluginCommand");
  }
};

// src/commands/DeleteRetrieverCommand.ts



var DeleteRetrieverCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteRetriever", {}).n("QBusinessClient", "DeleteRetrieverCommand").f(void 0, void 0).ser(se_DeleteRetrieverCommand).de(de_DeleteRetrieverCommand).build() {
  static {
    __name(this, "DeleteRetrieverCommand");
  }
};

// src/commands/DeleteUserCommand.ts



var DeleteUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteUser", {}).n("QBusinessClient", "DeleteUserCommand").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {
  static {
    __name(this, "DeleteUserCommand");
  }
};

// src/commands/DeleteWebExperienceCommand.ts



var DeleteWebExperienceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DeleteWebExperience", {}).n("QBusinessClient", "DeleteWebExperienceCommand").f(void 0, void 0).ser(se_DeleteWebExperienceCommand).de(de_DeleteWebExperienceCommand).build() {
  static {
    __name(this, "DeleteWebExperienceCommand");
  }
};

// src/commands/DisassociatePermissionCommand.ts



var DisassociatePermissionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "DisassociatePermission", {}).n("QBusinessClient", "DisassociatePermissionCommand").f(void 0, void 0).ser(se_DisassociatePermissionCommand).de(de_DisassociatePermissionCommand).build() {
  static {
    __name(this, "DisassociatePermissionCommand");
  }
};

// src/commands/GetApplicationCommand.ts



var GetApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetApplication", {}).n("QBusinessClient", "GetApplicationCommand").f(void 0, GetApplicationResponseFilterSensitiveLog).ser(se_GetApplicationCommand).de(de_GetApplicationCommand).build() {
  static {
    __name(this, "GetApplicationCommand");
  }
};

// src/commands/GetChatControlsConfigurationCommand.ts



var GetChatControlsConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetChatControlsConfiguration", {}).n("QBusinessClient", "GetChatControlsConfigurationCommand").f(void 0, void 0).ser(se_GetChatControlsConfigurationCommand).de(de_GetChatControlsConfigurationCommand).build() {
  static {
    __name(this, "GetChatControlsConfigurationCommand");
  }
};

// src/commands/GetChatResponseConfigurationCommand.ts



var GetChatResponseConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetChatResponseConfiguration", {}).n("QBusinessClient", "GetChatResponseConfigurationCommand").f(void 0, void 0).ser(se_GetChatResponseConfigurationCommand).de(de_GetChatResponseConfigurationCommand).build() {
  static {
    __name(this, "GetChatResponseConfigurationCommand");
  }
};

// src/commands/GetDataAccessorCommand.ts



var GetDataAccessorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetDataAccessor", {}).n("QBusinessClient", "GetDataAccessorCommand").f(void 0, GetDataAccessorResponseFilterSensitiveLog).ser(se_GetDataAccessorCommand).de(de_GetDataAccessorCommand).build() {
  static {
    __name(this, "GetDataAccessorCommand");
  }
};

// src/commands/GetDataSourceCommand.ts



var GetDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetDataSource", {}).n("QBusinessClient", "GetDataSourceCommand").f(void 0, void 0).ser(se_GetDataSourceCommand).de(de_GetDataSourceCommand).build() {
  static {
    __name(this, "GetDataSourceCommand");
  }
};

// src/commands/GetGroupCommand.ts



var GetGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetGroup", {}).n("QBusinessClient", "GetGroupCommand").f(void 0, void 0).ser(se_GetGroupCommand).de(de_GetGroupCommand).build() {
  static {
    __name(this, "GetGroupCommand");
  }
};

// src/commands/GetIndexCommand.ts



var GetIndexCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetIndex", {}).n("QBusinessClient", "GetIndexCommand").f(void 0, void 0).ser(se_GetIndexCommand).de(de_GetIndexCommand).build() {
  static {
    __name(this, "GetIndexCommand");
  }
};

// src/commands/GetMediaCommand.ts



var GetMediaCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetMedia", {}).n("QBusinessClient", "GetMediaCommand").f(void 0, void 0).ser(se_GetMediaCommand).de(de_GetMediaCommand).build() {
  static {
    __name(this, "GetMediaCommand");
  }
};

// src/commands/GetPluginCommand.ts



var GetPluginCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetPlugin", {}).n("QBusinessClient", "GetPluginCommand").f(void 0, GetPluginResponseFilterSensitiveLog).ser(se_GetPluginCommand).de(de_GetPluginCommand).build() {
  static {
    __name(this, "GetPluginCommand");
  }
};

// src/commands/GetPolicyCommand.ts



var GetPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetPolicy", {}).n("QBusinessClient", "GetPolicyCommand").f(void 0, void 0).ser(se_GetPolicyCommand).de(de_GetPolicyCommand).build() {
  static {
    __name(this, "GetPolicyCommand");
  }
};

// src/commands/GetRetrieverCommand.ts



var GetRetrieverCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetRetriever", {}).n("QBusinessClient", "GetRetrieverCommand").f(void 0, void 0).ser(se_GetRetrieverCommand).de(de_GetRetrieverCommand).build() {
  static {
    __name(this, "GetRetrieverCommand");
  }
};

// src/commands/GetUserCommand.ts



var GetUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetUser", {}).n("QBusinessClient", "GetUserCommand").f(void 0, void 0).ser(se_GetUserCommand).de(de_GetUserCommand).build() {
  static {
    __name(this, "GetUserCommand");
  }
};

// src/commands/GetWebExperienceCommand.ts



var GetWebExperienceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "GetWebExperience", {}).n("QBusinessClient", "GetWebExperienceCommand").f(void 0, void 0).ser(se_GetWebExperienceCommand).de(de_GetWebExperienceCommand).build() {
  static {
    __name(this, "GetWebExperienceCommand");
  }
};

// src/commands/ListApplicationsCommand.ts



var ListApplicationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListApplications", {}).n("QBusinessClient", "ListApplicationsCommand").f(void 0, void 0).ser(se_ListApplicationsCommand).de(de_ListApplicationsCommand).build() {
  static {
    __name(this, "ListApplicationsCommand");
  }
};

// src/commands/ListAttachmentsCommand.ts



var ListAttachmentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListAttachments", {}).n("QBusinessClient", "ListAttachmentsCommand").f(void 0, void 0).ser(se_ListAttachmentsCommand).de(de_ListAttachmentsCommand).build() {
  static {
    __name(this, "ListAttachmentsCommand");
  }
};

// src/commands/ListChatResponseConfigurationsCommand.ts



var ListChatResponseConfigurationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListChatResponseConfigurations", {}).n("QBusinessClient", "ListChatResponseConfigurationsCommand").f(void 0, void 0).ser(se_ListChatResponseConfigurationsCommand).de(de_ListChatResponseConfigurationsCommand).build() {
  static {
    __name(this, "ListChatResponseConfigurationsCommand");
  }
};

// src/commands/ListConversationsCommand.ts



var ListConversationsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListConversations", {}).n("QBusinessClient", "ListConversationsCommand").f(void 0, void 0).ser(se_ListConversationsCommand).de(de_ListConversationsCommand).build() {
  static {
    __name(this, "ListConversationsCommand");
  }
};

// src/commands/ListDataAccessorsCommand.ts



var ListDataAccessorsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListDataAccessors", {}).n("QBusinessClient", "ListDataAccessorsCommand").f(void 0, ListDataAccessorsResponseFilterSensitiveLog).ser(se_ListDataAccessorsCommand).de(de_ListDataAccessorsCommand).build() {
  static {
    __name(this, "ListDataAccessorsCommand");
  }
};

// src/commands/ListDataSourcesCommand.ts



var ListDataSourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListDataSources", {}).n("QBusinessClient", "ListDataSourcesCommand").f(void 0, void 0).ser(se_ListDataSourcesCommand).de(de_ListDataSourcesCommand).build() {
  static {
    __name(this, "ListDataSourcesCommand");
  }
};

// src/commands/ListDataSourceSyncJobsCommand.ts



var ListDataSourceSyncJobsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListDataSourceSyncJobs", {}).n("QBusinessClient", "ListDataSourceSyncJobsCommand").f(void 0, void 0).ser(se_ListDataSourceSyncJobsCommand).de(de_ListDataSourceSyncJobsCommand).build() {
  static {
    __name(this, "ListDataSourceSyncJobsCommand");
  }
};

// src/commands/ListDocumentsCommand.ts



var ListDocumentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListDocuments", {}).n("QBusinessClient", "ListDocumentsCommand").f(void 0, void 0).ser(se_ListDocumentsCommand).de(de_ListDocumentsCommand).build() {
  static {
    __name(this, "ListDocumentsCommand");
  }
};

// src/commands/ListGroupsCommand.ts



var ListGroupsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListGroups", {}).n("QBusinessClient", "ListGroupsCommand").f(void 0, void 0).ser(se_ListGroupsCommand).de(de_ListGroupsCommand).build() {
  static {
    __name(this, "ListGroupsCommand");
  }
};

// src/commands/ListIndicesCommand.ts



var ListIndicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListIndices", {}).n("QBusinessClient", "ListIndicesCommand").f(void 0, void 0).ser(se_ListIndicesCommand).de(de_ListIndicesCommand).build() {
  static {
    __name(this, "ListIndicesCommand");
  }
};

// src/commands/ListMessagesCommand.ts



var ListMessagesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListMessages", {}).n("QBusinessClient", "ListMessagesCommand").f(void 0, void 0).ser(se_ListMessagesCommand).de(de_ListMessagesCommand).build() {
  static {
    __name(this, "ListMessagesCommand");
  }
};

// src/commands/ListPluginActionsCommand.ts



var ListPluginActionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListPluginActions", {}).n("QBusinessClient", "ListPluginActionsCommand").f(void 0, void 0).ser(se_ListPluginActionsCommand).de(de_ListPluginActionsCommand).build() {
  static {
    __name(this, "ListPluginActionsCommand");
  }
};

// src/commands/ListPluginsCommand.ts



var ListPluginsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListPlugins", {}).n("QBusinessClient", "ListPluginsCommand").f(void 0, void 0).ser(se_ListPluginsCommand).de(de_ListPluginsCommand).build() {
  static {
    __name(this, "ListPluginsCommand");
  }
};

// src/commands/ListPluginTypeActionsCommand.ts



var ListPluginTypeActionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListPluginTypeActions", {}).n("QBusinessClient", "ListPluginTypeActionsCommand").f(void 0, void 0).ser(se_ListPluginTypeActionsCommand).de(de_ListPluginTypeActionsCommand).build() {
  static {
    __name(this, "ListPluginTypeActionsCommand");
  }
};

// src/commands/ListPluginTypeMetadataCommand.ts



var ListPluginTypeMetadataCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListPluginTypeMetadata", {}).n("QBusinessClient", "ListPluginTypeMetadataCommand").f(void 0, void 0).ser(se_ListPluginTypeMetadataCommand).de(de_ListPluginTypeMetadataCommand).build() {
  static {
    __name(this, "ListPluginTypeMetadataCommand");
  }
};

// src/commands/ListRetrieversCommand.ts



var ListRetrieversCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListRetrievers", {}).n("QBusinessClient", "ListRetrieversCommand").f(void 0, void 0).ser(se_ListRetrieversCommand).de(de_ListRetrieversCommand).build() {
  static {
    __name(this, "ListRetrieversCommand");
  }
};

// src/commands/ListSubscriptionsCommand.ts



var ListSubscriptionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListSubscriptions", {}).n("QBusinessClient", "ListSubscriptionsCommand").f(void 0, void 0).ser(se_ListSubscriptionsCommand).de(de_ListSubscriptionsCommand).build() {
  static {
    __name(this, "ListSubscriptionsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListTagsForResource", {}).n("QBusinessClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/ListWebExperiencesCommand.ts



var ListWebExperiencesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "ListWebExperiences", {}).n("QBusinessClient", "ListWebExperiencesCommand").f(void 0, void 0).ser(se_ListWebExperiencesCommand).de(de_ListWebExperiencesCommand).build() {
  static {
    __name(this, "ListWebExperiencesCommand");
  }
};

// src/commands/PutFeedbackCommand.ts



var PutFeedbackCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "PutFeedback", {}).n("QBusinessClient", "PutFeedbackCommand").f(void 0, void 0).ser(se_PutFeedbackCommand).de(de_PutFeedbackCommand).build() {
  static {
    __name(this, "PutFeedbackCommand");
  }
};

// src/commands/PutGroupCommand.ts



var PutGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "PutGroup", {}).n("QBusinessClient", "PutGroupCommand").f(void 0, void 0).ser(se_PutGroupCommand).de(de_PutGroupCommand).build() {
  static {
    __name(this, "PutGroupCommand");
  }
};

// src/commands/SearchRelevantContentCommand.ts



var SearchRelevantContentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "SearchRelevantContent", {}).n("QBusinessClient", "SearchRelevantContentCommand").f(void 0, void 0).ser(se_SearchRelevantContentCommand).de(de_SearchRelevantContentCommand).build() {
  static {
    __name(this, "SearchRelevantContentCommand");
  }
};

// src/commands/StartDataSourceSyncJobCommand.ts



var StartDataSourceSyncJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "StartDataSourceSyncJob", {}).n("QBusinessClient", "StartDataSourceSyncJobCommand").f(void 0, void 0).ser(se_StartDataSourceSyncJobCommand).de(de_StartDataSourceSyncJobCommand).build() {
  static {
    __name(this, "StartDataSourceSyncJobCommand");
  }
};

// src/commands/StopDataSourceSyncJobCommand.ts



var StopDataSourceSyncJobCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "StopDataSourceSyncJob", {}).n("QBusinessClient", "StopDataSourceSyncJobCommand").f(void 0, void 0).ser(se_StopDataSourceSyncJobCommand).de(de_StopDataSourceSyncJobCommand).build() {
  static {
    __name(this, "StopDataSourceSyncJobCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "TagResource", {}).n("QBusinessClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UntagResource", {}).n("QBusinessClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateApplicationCommand.ts



var UpdateApplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateApplication", {}).n("QBusinessClient", "UpdateApplicationCommand").f(void 0, void 0).ser(se_UpdateApplicationCommand).de(de_UpdateApplicationCommand).build() {
  static {
    __name(this, "UpdateApplicationCommand");
  }
};

// src/commands/UpdateChatControlsConfigurationCommand.ts



var UpdateChatControlsConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateChatControlsConfiguration", {}).n("QBusinessClient", "UpdateChatControlsConfigurationCommand").f(void 0, void 0).ser(se_UpdateChatControlsConfigurationCommand).de(de_UpdateChatControlsConfigurationCommand).build() {
  static {
    __name(this, "UpdateChatControlsConfigurationCommand");
  }
};

// src/commands/UpdateChatResponseConfigurationCommand.ts



var UpdateChatResponseConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateChatResponseConfiguration", {}).n("QBusinessClient", "UpdateChatResponseConfigurationCommand").f(void 0, void 0).ser(se_UpdateChatResponseConfigurationCommand).de(de_UpdateChatResponseConfigurationCommand).build() {
  static {
    __name(this, "UpdateChatResponseConfigurationCommand");
  }
};

// src/commands/UpdateDataAccessorCommand.ts



var UpdateDataAccessorCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateDataAccessor", {}).n("QBusinessClient", "UpdateDataAccessorCommand").f(UpdateDataAccessorRequestFilterSensitiveLog, void 0).ser(se_UpdateDataAccessorCommand).de(de_UpdateDataAccessorCommand).build() {
  static {
    __name(this, "UpdateDataAccessorCommand");
  }
};

// src/commands/UpdateDataSourceCommand.ts



var UpdateDataSourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateDataSource", {}).n("QBusinessClient", "UpdateDataSourceCommand").f(void 0, void 0).ser(se_UpdateDataSourceCommand).de(de_UpdateDataSourceCommand).build() {
  static {
    __name(this, "UpdateDataSourceCommand");
  }
};

// src/commands/UpdateIndexCommand.ts



var UpdateIndexCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateIndex", {}).n("QBusinessClient", "UpdateIndexCommand").f(void 0, void 0).ser(se_UpdateIndexCommand).de(de_UpdateIndexCommand).build() {
  static {
    __name(this, "UpdateIndexCommand");
  }
};

// src/commands/UpdatePluginCommand.ts



var UpdatePluginCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdatePlugin", {}).n("QBusinessClient", "UpdatePluginCommand").f(UpdatePluginRequestFilterSensitiveLog, void 0).ser(se_UpdatePluginCommand).de(de_UpdatePluginCommand).build() {
  static {
    __name(this, "UpdatePluginCommand");
  }
};

// src/commands/UpdateRetrieverCommand.ts



var UpdateRetrieverCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateRetriever", {}).n("QBusinessClient", "UpdateRetrieverCommand").f(void 0, void 0).ser(se_UpdateRetrieverCommand).de(de_UpdateRetrieverCommand).build() {
  static {
    __name(this, "UpdateRetrieverCommand");
  }
};

// src/commands/UpdateSubscriptionCommand.ts



var UpdateSubscriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateSubscription", {}).n("QBusinessClient", "UpdateSubscriptionCommand").f(void 0, void 0).ser(se_UpdateSubscriptionCommand).de(de_UpdateSubscriptionCommand).build() {
  static {
    __name(this, "UpdateSubscriptionCommand");
  }
};

// src/commands/UpdateUserCommand.ts



var UpdateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateUser", {}).n("QBusinessClient", "UpdateUserCommand").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {
  static {
    __name(this, "UpdateUserCommand");
  }
};

// src/commands/UpdateWebExperienceCommand.ts



var UpdateWebExperienceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("ExpertQ", "UpdateWebExperience", {}).n("QBusinessClient", "UpdateWebExperienceCommand").f(void 0, void 0).ser(se_UpdateWebExperienceCommand).de(de_UpdateWebExperienceCommand).build() {
  static {
    __name(this, "UpdateWebExperienceCommand");
  }
};

// src/QBusiness.ts
var commands = {
  AssociatePermissionCommand,
  BatchDeleteDocumentCommand,
  BatchPutDocumentCommand,
  CancelSubscriptionCommand,
  ChatCommand,
  ChatSyncCommand,
  CheckDocumentAccessCommand,
  CreateAnonymousWebExperienceUrlCommand,
  CreateApplicationCommand,
  CreateChatResponseConfigurationCommand,
  CreateDataAccessorCommand,
  CreateDataSourceCommand,
  CreateIndexCommand,
  CreatePluginCommand,
  CreateRetrieverCommand,
  CreateSubscriptionCommand,
  CreateUserCommand,
  CreateWebExperienceCommand,
  DeleteApplicationCommand,
  DeleteAttachmentCommand,
  DeleteChatControlsConfigurationCommand,
  DeleteChatResponseConfigurationCommand,
  DeleteConversationCommand,
  DeleteDataAccessorCommand,
  DeleteDataSourceCommand,
  DeleteGroupCommand,
  DeleteIndexCommand,
  DeletePluginCommand,
  DeleteRetrieverCommand,
  DeleteUserCommand,
  DeleteWebExperienceCommand,
  DisassociatePermissionCommand,
  GetApplicationCommand,
  GetChatControlsConfigurationCommand,
  GetChatResponseConfigurationCommand,
  GetDataAccessorCommand,
  GetDataSourceCommand,
  GetGroupCommand,
  GetIndexCommand,
  GetMediaCommand,
  GetPluginCommand,
  GetPolicyCommand,
  GetRetrieverCommand,
  GetUserCommand,
  GetWebExperienceCommand,
  ListApplicationsCommand,
  ListAttachmentsCommand,
  ListChatResponseConfigurationsCommand,
  ListConversationsCommand,
  ListDataAccessorsCommand,
  ListDataSourcesCommand,
  ListDataSourceSyncJobsCommand,
  ListDocumentsCommand,
  ListGroupsCommand,
  ListIndicesCommand,
  ListMessagesCommand,
  ListPluginActionsCommand,
  ListPluginsCommand,
  ListPluginTypeActionsCommand,
  ListPluginTypeMetadataCommand,
  ListRetrieversCommand,
  ListSubscriptionsCommand,
  ListTagsForResourceCommand,
  ListWebExperiencesCommand,
  PutFeedbackCommand,
  PutGroupCommand,
  SearchRelevantContentCommand,
  StartDataSourceSyncJobCommand,
  StopDataSourceSyncJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApplicationCommand,
  UpdateChatControlsConfigurationCommand,
  UpdateChatResponseConfigurationCommand,
  UpdateDataAccessorCommand,
  UpdateDataSourceCommand,
  UpdateIndexCommand,
  UpdatePluginCommand,
  UpdateRetrieverCommand,
  UpdateSubscriptionCommand,
  UpdateUserCommand,
  UpdateWebExperienceCommand
};
var QBusiness = class extends QBusinessClient {
  static {
    __name(this, "QBusiness");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, QBusiness);

// src/pagination/GetChatControlsConfigurationPaginator.ts

var paginateGetChatControlsConfiguration = (0, import_core.createPaginator)(QBusinessClient, GetChatControlsConfigurationCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListApplicationsPaginator.ts

var paginateListApplications = (0, import_core.createPaginator)(QBusinessClient, ListApplicationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListAttachmentsPaginator.ts

var paginateListAttachments = (0, import_core.createPaginator)(QBusinessClient, ListAttachmentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListChatResponseConfigurationsPaginator.ts

var paginateListChatResponseConfigurations = (0, import_core.createPaginator)(QBusinessClient, ListChatResponseConfigurationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListConversationsPaginator.ts

var paginateListConversations = (0, import_core.createPaginator)(QBusinessClient, ListConversationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDataAccessorsPaginator.ts

var paginateListDataAccessors = (0, import_core.createPaginator)(QBusinessClient, ListDataAccessorsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDataSourceSyncJobsPaginator.ts

var paginateListDataSourceSyncJobs = (0, import_core.createPaginator)(QBusinessClient, ListDataSourceSyncJobsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDataSourcesPaginator.ts

var paginateListDataSources = (0, import_core.createPaginator)(QBusinessClient, ListDataSourcesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDocumentsPaginator.ts

var paginateListDocuments = (0, import_core.createPaginator)(QBusinessClient, ListDocumentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListGroupsPaginator.ts

var paginateListGroups = (0, import_core.createPaginator)(QBusinessClient, ListGroupsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListIndicesPaginator.ts

var paginateListIndices = (0, import_core.createPaginator)(QBusinessClient, ListIndicesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListMessagesPaginator.ts

var paginateListMessages = (0, import_core.createPaginator)(QBusinessClient, ListMessagesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPluginActionsPaginator.ts

var paginateListPluginActions = (0, import_core.createPaginator)(QBusinessClient, ListPluginActionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPluginTypeActionsPaginator.ts

var paginateListPluginTypeActions = (0, import_core.createPaginator)(QBusinessClient, ListPluginTypeActionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPluginTypeMetadataPaginator.ts

var paginateListPluginTypeMetadata = (0, import_core.createPaginator)(QBusinessClient, ListPluginTypeMetadataCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListPluginsPaginator.ts

var paginateListPlugins = (0, import_core.createPaginator)(QBusinessClient, ListPluginsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListRetrieversPaginator.ts

var paginateListRetrievers = (0, import_core.createPaginator)(QBusinessClient, ListRetrieversCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSubscriptionsPaginator.ts

var paginateListSubscriptions = (0, import_core.createPaginator)(QBusinessClient, ListSubscriptionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListWebExperiencesPaginator.ts

var paginateListWebExperiences = (0, import_core.createPaginator)(QBusinessClient, ListWebExperiencesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/SearchRelevantContentPaginator.ts

var paginateSearchRelevantContent = (0, import_core.createPaginator)(QBusinessClient, SearchRelevantContentCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  QBusinessServiceException,
  __Client,
  QBusinessClient,
  QBusiness,
  $Command,
  AssociatePermissionCommand,
  BatchDeleteDocumentCommand,
  BatchPutDocumentCommand,
  CancelSubscriptionCommand,
  ChatCommand,
  ChatSyncCommand,
  CheckDocumentAccessCommand,
  CreateAnonymousWebExperienceUrlCommand,
  CreateApplicationCommand,
  CreateChatResponseConfigurationCommand,
  CreateDataAccessorCommand,
  CreateDataSourceCommand,
  CreateIndexCommand,
  CreatePluginCommand,
  CreateRetrieverCommand,
  CreateSubscriptionCommand,
  CreateUserCommand,
  CreateWebExperienceCommand,
  DeleteApplicationCommand,
  DeleteAttachmentCommand,
  DeleteChatControlsConfigurationCommand,
  DeleteChatResponseConfigurationCommand,
  DeleteConversationCommand,
  DeleteDataAccessorCommand,
  DeleteDataSourceCommand,
  DeleteGroupCommand,
  DeleteIndexCommand,
  DeletePluginCommand,
  DeleteRetrieverCommand,
  DeleteUserCommand,
  DeleteWebExperienceCommand,
  DisassociatePermissionCommand,
  GetApplicationCommand,
  GetChatControlsConfigurationCommand,
  GetChatResponseConfigurationCommand,
  GetDataAccessorCommand,
  GetDataSourceCommand,
  GetGroupCommand,
  GetIndexCommand,
  GetMediaCommand,
  GetPluginCommand,
  GetPolicyCommand,
  GetRetrieverCommand,
  GetUserCommand,
  GetWebExperienceCommand,
  ListApplicationsCommand,
  ListAttachmentsCommand,
  ListChatResponseConfigurationsCommand,
  ListConversationsCommand,
  ListDataAccessorsCommand,
  ListDataSourceSyncJobsCommand,
  ListDataSourcesCommand,
  ListDocumentsCommand,
  ListGroupsCommand,
  ListIndicesCommand,
  ListMessagesCommand,
  ListPluginActionsCommand,
  ListPluginTypeActionsCommand,
  ListPluginTypeMetadataCommand,
  ListPluginsCommand,
  ListRetrieversCommand,
  ListSubscriptionsCommand,
  ListTagsForResourceCommand,
  ListWebExperiencesCommand,
  PutFeedbackCommand,
  PutGroupCommand,
  SearchRelevantContentCommand,
  StartDataSourceSyncJobCommand,
  StopDataSourceSyncJobCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateApplicationCommand,
  UpdateChatControlsConfigurationCommand,
  UpdateChatResponseConfigurationCommand,
  UpdateDataAccessorCommand,
  UpdateDataSourceCommand,
  UpdateIndexCommand,
  UpdatePluginCommand,
  UpdateRetrieverCommand,
  UpdateSubscriptionCommand,
  UpdateUserCommand,
  UpdateWebExperienceCommand,
  paginateGetChatControlsConfiguration,
  paginateListApplications,
  paginateListAttachments,
  paginateListChatResponseConfigurations,
  paginateListConversations,
  paginateListDataAccessors,
  paginateListDataSourceSyncJobs,
  paginateListDataSources,
  paginateListDocuments,
  paginateListGroups,
  paginateListIndices,
  paginateListMessages,
  paginateListPluginActions,
  paginateListPluginTypeActions,
  paginateListPluginTypeMetadata,
  paginateListPlugins,
  paginateListRetrievers,
  paginateListSubscriptions,
  paginateListWebExperiences,
  paginateSearchRelevantContent,
  MemberRelation,
  ReadAccessType,
  MembershipType,
  Principal,
  AccessDeniedException,
  DocumentAttributeValue,
  ActionPayloadFieldType,
  PluginType,
  APISchema,
  APISchemaType,
  IdentityType,
  ApplicationStatus,
  ConflictException,
  AttachmentsControlMode,
  PersonalizationControlMode,
  QAppsControlMode,
  InternalServerException,
  ResourceNotFoundException,
  ServiceQuotaExceededException,
  ThrottlingException,
  ValidationExceptionReason,
  ValidationException,
  DataAccessorAuthenticationConfiguration,
  DataAccessorAuthenticationType,
  AutoSubscriptionStatus,
  SubscriptionType,
  ErrorCode,
  IndexType,
  DocumentEnrichmentConditionOperator,
  DocumentContentOperator,
  AttributeValueOperator,
  AudioExtractionStatus,
  ImageExtractionStatus,
  VideoExtractionStatus,
  DataSourceStatus,
  Status,
  AttributeType,
  IndexStatus,
  PluginAuthConfiguration,
  PluginBuildStatus,
  PluginState,
  DocumentAttributeBoostingLevel,
  NumberAttributeBoostingType,
  StringAttributeValueBoostingLevel,
  DocumentAttributeBoostingConfiguration,
  RetrieverConfiguration,
  RetrieverType,
  RetrieverStatus,
  BrowserExtension,
  IdentityProviderConfiguration,
  WebExperienceSamplePromptsControlMode,
  WebExperienceAuthConfiguration,
  WebExperienceStatus,
  CreatorModeControl,
  OrchestrationControl,
  PermissionConditionOperator,
  CopyFromSource,
  AttachmentStatus,
  AudioExtractionType,
  DocumentContent,
  ContentType,
  ChatMode,
  ChatModeConfiguration,
  VideoExtractionType,
  SourceDetails,
  SystemMessageType,
  ChatOutputStream,
  ExternalResourceException,
  LicenseNotFoundException,
  ChatResponseConfigurationStatus,
  ResponseConfigurationType,
  ContentSource,
  SubscriptionPrincipal,
  DataSourceSyncJobStatus,
  DocumentStatus,
  HallucinationReductionControl,
  ResponseScope,
  RuleConfiguration,
  RuleType,
  APISchemaFilterSensitiveLog,
  EncryptionConfigurationFilterSensitiveLog,
  CreateApplicationRequestFilterSensitiveLog,
  DataAccessorFilterSensitiveLog,
  ListDataAccessorsResponseFilterSensitiveLog,
  GetApplicationResponseFilterSensitiveLog,
  CustomPluginConfigurationFilterSensitiveLog,
  CreatePluginRequestFilterSensitiveLog,
  GetPluginResponseFilterSensitiveLog,
  UpdatePluginRequestFilterSensitiveLog,
  ChatOutputStreamFilterSensitiveLog,
  ChatOutputFilterSensitiveLog,
  GroupStatus,
  MediaTooLargeException,
  MessageType,
  PluginTypeCategory,
  MessageUsefulnessReason,
  MessageUsefulness,
  ScoreConfidence,
  ChatInputStream,
  ChatInputStreamFilterSensitiveLog,
  ChatInputFilterSensitiveLog,
  CreateDataAccessorRequestFilterSensitiveLog,
  GetDataAccessorResponseFilterSensitiveLog,
  UpdateDataAccessorRequestFilterSensitiveLog
});

