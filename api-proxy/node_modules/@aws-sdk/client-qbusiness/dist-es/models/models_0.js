import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { QBusinessServiceException as __BaseException } from "./QBusinessServiceException";
export const MemberRelation = {
    AND: "AND",
    OR: "OR",
};
export const ReadAccessType = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export const MembershipType = {
    DATASOURCE: "DATASOURCE",
    INDEX: "INDEX",
};
export var Principal;
(function (Principal) {
    Principal.visit = (value, visitor) => {
        if (value.user !== undefined)
            return visitor.user(value.user);
        if (value.group !== undefined)
            return visitor.group(value.group);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Principal || (Principal = {}));
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export var DocumentAttributeValue;
(function (DocumentAttributeValue) {
    DocumentAttributeValue.visit = (value, visitor) => {
        if (value.stringValue !== undefined)
            return visitor.stringValue(value.stringValue);
        if (value.stringListValue !== undefined)
            return visitor.stringListValue(value.stringListValue);
        if (value.longValue !== undefined)
            return visitor.longValue(value.longValue);
        if (value.dateValue !== undefined)
            return visitor.dateValue(value.dateValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DocumentAttributeValue || (DocumentAttributeValue = {}));
export const ActionPayloadFieldType = {
    ARRAY: "ARRAY",
    BOOLEAN: "BOOLEAN",
    NUMBER: "NUMBER",
    STRING: "STRING",
};
export const PluginType = {
    ASANA: "ASANA",
    ATLASSIAN_CONFLUENCE: "ATLASSIAN_CONFLUENCE",
    CUSTOM: "CUSTOM",
    GOOGLE_CALENDAR: "GOOGLE_CALENDAR",
    JIRA: "JIRA",
    JIRA_CLOUD: "JIRA_CLOUD",
    MICROSOFT_EXCHANGE: "MICROSOFT_EXCHANGE",
    MICROSOFT_TEAMS: "MICROSOFT_TEAMS",
    PAGERDUTY_ADVANCE: "PAGERDUTY_ADVANCE",
    QUICKSIGHT: "QUICKSIGHT",
    SALESFORCE: "SALESFORCE",
    SALESFORCE_CRM: "SALESFORCE_CRM",
    SERVICENOW_NOW_PLATFORM: "SERVICENOW_NOW_PLATFORM",
    SERVICE_NOW: "SERVICE_NOW",
    SMARTSHEET: "SMARTSHEET",
    ZENDESK: "ZENDESK",
    ZENDESK_SUITE: "ZENDESK_SUITE",
};
export var APISchema;
(function (APISchema) {
    APISchema.visit = (value, visitor) => {
        if (value.payload !== undefined)
            return visitor.payload(value.payload);
        if (value.s3 !== undefined)
            return visitor.s3(value.s3);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(APISchema || (APISchema = {}));
export const APISchemaType = {
    OPEN_API_V3: "OPEN_API_V3",
};
export const IdentityType = {
    ANONYMOUS: "ANONYMOUS",
    AWS_IAM_IDC: "AWS_IAM_IDC",
    AWS_IAM_IDP_OIDC: "AWS_IAM_IDP_OIDC",
    AWS_IAM_IDP_SAML: "AWS_IAM_IDP_SAML",
    AWS_QUICKSIGHT_IDP: "AWS_QUICKSIGHT_IDP",
};
export const ApplicationStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    resourceId;
    resourceType;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export const AttachmentsControlMode = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const PersonalizationControlMode = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const QAppsControlMode = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    resourceId;
    resourceType;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    resourceId;
    resourceType;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export const ValidationExceptionReason = {
    CANNOT_PARSE: "CANNOT_PARSE",
    FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
    UNKNOWN_OPERATION: "UNKNOWN_OPERATION",
};
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    reason;
    fields;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
        this.fields = opts.fields;
    }
}
export var DataAccessorAuthenticationConfiguration;
(function (DataAccessorAuthenticationConfiguration) {
    DataAccessorAuthenticationConfiguration.visit = (value, visitor) => {
        if (value.idcTrustedTokenIssuerConfiguration !== undefined)
            return visitor.idcTrustedTokenIssuerConfiguration(value.idcTrustedTokenIssuerConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DataAccessorAuthenticationConfiguration || (DataAccessorAuthenticationConfiguration = {}));
export const DataAccessorAuthenticationType = {
    AWS_IAM_IDC_AUTH_CODE: "AWS_IAM_IDC_AUTH_CODE",
    AWS_IAM_IDC_TTI: "AWS_IAM_IDC_TTI",
};
export const AutoSubscriptionStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const SubscriptionType = {
    Q_BUSINESS: "Q_BUSINESS",
    Q_LITE: "Q_LITE",
};
export const ErrorCode = {
    INTERNAL_ERROR: "InternalError",
    INVALID_REQUEST: "InvalidRequest",
    RESOURCE_INACTIVE: "ResourceInactive",
    RESOURCE_NOT_FOUND: "ResourceNotFound",
};
export const IndexType = {
    ENTERPRISE: "ENTERPRISE",
    STARTER: "STARTER",
};
export const DocumentEnrichmentConditionOperator = {
    BEGINS_WITH: "BEGINS_WITH",
    CONTAINS: "CONTAINS",
    EQUALS: "EQUALS",
    EXISTS: "EXISTS",
    GREATER_THAN: "GREATER_THAN",
    GREATER_THAN_OR_EQUALS: "GREATER_THAN_OR_EQUALS",
    LESS_THAN: "LESS_THAN",
    LESS_THAN_OR_EQUALS: "LESS_THAN_OR_EQUALS",
    NOT_CONTAINS: "NOT_CONTAINS",
    NOT_EQUALS: "NOT_EQUALS",
    NOT_EXISTS: "NOT_EXISTS",
};
export const DocumentContentOperator = {
    DELETE: "DELETE",
};
export const AttributeValueOperator = {
    DELETE: "DELETE",
};
export const AudioExtractionStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ImageExtractionStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const VideoExtractionStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DataSourceStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    PENDING_CREATION: "PENDING_CREATION",
    UPDATING: "UPDATING",
};
export const Status = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const AttributeType = {
    DATE: "DATE",
    NUMBER: "NUMBER",
    STRING: "STRING",
    STRING_LIST: "STRING_LIST",
};
export const IndexStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export var PluginAuthConfiguration;
(function (PluginAuthConfiguration) {
    PluginAuthConfiguration.visit = (value, visitor) => {
        if (value.basicAuthConfiguration !== undefined)
            return visitor.basicAuthConfiguration(value.basicAuthConfiguration);
        if (value.oAuth2ClientCredentialConfiguration !== undefined)
            return visitor.oAuth2ClientCredentialConfiguration(value.oAuth2ClientCredentialConfiguration);
        if (value.noAuthConfiguration !== undefined)
            return visitor.noAuthConfiguration(value.noAuthConfiguration);
        if (value.idcAuthConfiguration !== undefined)
            return visitor.idcAuthConfiguration(value.idcAuthConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(PluginAuthConfiguration || (PluginAuthConfiguration = {}));
export const PluginBuildStatus = {
    CREATE_FAILED: "CREATE_FAILED",
    CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS",
    DELETE_FAILED: "DELETE_FAILED",
    DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
    READY: "READY",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS",
};
export const PluginState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DocumentAttributeBoostingLevel = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
    NONE: "NONE",
    ONE: "ONE",
    TWO: "TWO",
    VERY_HIGH: "VERY_HIGH",
};
export const NumberAttributeBoostingType = {
    PRIORITIZE_LARGER_VALUES: "PRIORITIZE_LARGER_VALUES",
    PRIORITIZE_SMALLER_VALUES: "PRIORITIZE_SMALLER_VALUES",
};
export const StringAttributeValueBoostingLevel = {
    FIVE: "FIVE",
    FOUR: "FOUR",
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
    ONE: "ONE",
    THREE: "THREE",
    TWO: "TWO",
    VERY_HIGH: "VERY_HIGH",
};
export var DocumentAttributeBoostingConfiguration;
(function (DocumentAttributeBoostingConfiguration) {
    DocumentAttributeBoostingConfiguration.visit = (value, visitor) => {
        if (value.numberConfiguration !== undefined)
            return visitor.numberConfiguration(value.numberConfiguration);
        if (value.stringConfiguration !== undefined)
            return visitor.stringConfiguration(value.stringConfiguration);
        if (value.dateConfiguration !== undefined)
            return visitor.dateConfiguration(value.dateConfiguration);
        if (value.stringListConfiguration !== undefined)
            return visitor.stringListConfiguration(value.stringListConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DocumentAttributeBoostingConfiguration || (DocumentAttributeBoostingConfiguration = {}));
export var RetrieverConfiguration;
(function (RetrieverConfiguration) {
    RetrieverConfiguration.visit = (value, visitor) => {
        if (value.nativeIndexConfiguration !== undefined)
            return visitor.nativeIndexConfiguration(value.nativeIndexConfiguration);
        if (value.kendraIndexConfiguration !== undefined)
            return visitor.kendraIndexConfiguration(value.kendraIndexConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(RetrieverConfiguration || (RetrieverConfiguration = {}));
export const RetrieverType = {
    KENDRA_INDEX: "KENDRA_INDEX",
    NATIVE_INDEX: "NATIVE_INDEX",
};
export const RetrieverStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    FAILED: "FAILED",
};
export const BrowserExtension = {
    CHROME: "CHROME",
    FIREFOX: "FIREFOX",
};
export var IdentityProviderConfiguration;
(function (IdentityProviderConfiguration) {
    IdentityProviderConfiguration.visit = (value, visitor) => {
        if (value.samlConfiguration !== undefined)
            return visitor.samlConfiguration(value.samlConfiguration);
        if (value.openIDConnectConfiguration !== undefined)
            return visitor.openIDConnectConfiguration(value.openIDConnectConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(IdentityProviderConfiguration || (IdentityProviderConfiguration = {}));
export const WebExperienceSamplePromptsControlMode = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export var WebExperienceAuthConfiguration;
(function (WebExperienceAuthConfiguration) {
    WebExperienceAuthConfiguration.visit = (value, visitor) => {
        if (value.samlConfiguration !== undefined)
            return visitor.samlConfiguration(value.samlConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(WebExperienceAuthConfiguration || (WebExperienceAuthConfiguration = {}));
export const WebExperienceStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    PENDING_AUTH_CONFIG: "PENDING_AUTH_CONFIG",
};
export const CreatorModeControl = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const OrchestrationControl = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const PermissionConditionOperator = {
    STRING_EQUALS: "StringEquals",
};
export var CopyFromSource;
(function (CopyFromSource) {
    CopyFromSource.visit = (value, visitor) => {
        if (value.conversation !== undefined)
            return visitor.conversation(value.conversation);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(CopyFromSource || (CopyFromSource = {}));
export const AttachmentStatus = {
    FAILED: "FAILED",
    SUCCESS: "SUCCESS",
};
export const AudioExtractionType = {
    SUMMARY: "SUMMARY",
    TRANSCRIPT: "TRANSCRIPT",
};
export var DocumentContent;
(function (DocumentContent) {
    DocumentContent.visit = (value, visitor) => {
        if (value.blob !== undefined)
            return visitor.blob(value.blob);
        if (value.s3 !== undefined)
            return visitor.s3(value.s3);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(DocumentContent || (DocumentContent = {}));
export const ContentType = {
    CSV: "CSV",
    HTML: "HTML",
    JSON: "JSON",
    MD: "MD",
    MS_EXCEL: "MS_EXCEL",
    MS_WORD: "MS_WORD",
    PDF: "PDF",
    PLAIN_TEXT: "PLAIN_TEXT",
    PPT: "PPT",
    RTF: "RTF",
    XML: "XML",
    XSLT: "XSLT",
};
export const ChatMode = {
    CREATOR_MODE: "CREATOR_MODE",
    PLUGIN_MODE: "PLUGIN_MODE",
    RETRIEVAL_MODE: "RETRIEVAL_MODE",
};
export var ChatModeConfiguration;
(function (ChatModeConfiguration) {
    ChatModeConfiguration.visit = (value, visitor) => {
        if (value.pluginConfiguration !== undefined)
            return visitor.pluginConfiguration(value.pluginConfiguration);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ChatModeConfiguration || (ChatModeConfiguration = {}));
export const VideoExtractionType = {
    SUMMARY: "SUMMARY",
    TRANSCRIPT: "TRANSCRIPT",
};
export var SourceDetails;
(function (SourceDetails) {
    SourceDetails.visit = (value, visitor) => {
        if (value.imageSourceDetails !== undefined)
            return visitor.imageSourceDetails(value.imageSourceDetails);
        if (value.audioSourceDetails !== undefined)
            return visitor.audioSourceDetails(value.audioSourceDetails);
        if (value.videoSourceDetails !== undefined)
            return visitor.videoSourceDetails(value.videoSourceDetails);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(SourceDetails || (SourceDetails = {}));
export const SystemMessageType = {
    GROUNDED_RESPONSE: "GROUNDED_RESPONSE",
    RESPONSE: "RESPONSE",
};
export var ChatOutputStream;
(function (ChatOutputStream) {
    ChatOutputStream.visit = (value, visitor) => {
        if (value.textEvent !== undefined)
            return visitor.textEvent(value.textEvent);
        if (value.metadataEvent !== undefined)
            return visitor.metadataEvent(value.metadataEvent);
        if (value.actionReviewEvent !== undefined)
            return visitor.actionReviewEvent(value.actionReviewEvent);
        if (value.failedAttachmentEvent !== undefined)
            return visitor.failedAttachmentEvent(value.failedAttachmentEvent);
        if (value.authChallengeRequestEvent !== undefined)
            return visitor.authChallengeRequestEvent(value.authChallengeRequestEvent);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ChatOutputStream || (ChatOutputStream = {}));
export class ExternalResourceException extends __BaseException {
    name = "ExternalResourceException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ExternalResourceException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ExternalResourceException.prototype);
    }
}
export class LicenseNotFoundException extends __BaseException {
    name = "LicenseNotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LicenseNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LicenseNotFoundException.prototype);
    }
}
export const ChatResponseConfigurationStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
export const ResponseConfigurationType = {
    ALL: "ALL",
};
export var ContentSource;
(function (ContentSource) {
    ContentSource.visit = (value, visitor) => {
        if (value.retriever !== undefined)
            return visitor.retriever(value.retriever);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ContentSource || (ContentSource = {}));
export var SubscriptionPrincipal;
(function (SubscriptionPrincipal) {
    SubscriptionPrincipal.visit = (value, visitor) => {
        if (value.user !== undefined)
            return visitor.user(value.user);
        if (value.group !== undefined)
            return visitor.group(value.group);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(SubscriptionPrincipal || (SubscriptionPrincipal = {}));
export const DataSourceSyncJobStatus = {
    ABORTED: "ABORTED",
    FAILED: "FAILED",
    INCOMPLETE: "INCOMPLETE",
    STOPPING: "STOPPING",
    SUCCEEDED: "SUCCEEDED",
    SYNCING: "SYNCING",
    SYNCING_INDEXING: "SYNCING_INDEXING",
};
export const DocumentStatus = {
    DELETED: "DELETED",
    DELETING: "DELETING",
    DOCUMENT_FAILED_TO_INDEX: "DOCUMENT_FAILED_TO_INDEX",
    FAILED: "FAILED",
    INDEXED: "INDEXED",
    PROCESSING: "PROCESSING",
    RECEIVED: "RECEIVED",
    UPDATED: "UPDATED",
};
export const HallucinationReductionControl = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ResponseScope = {
    ENTERPRISE_CONTENT_ONLY: "ENTERPRISE_CONTENT_ONLY",
    EXTENDED_KNOWLEDGE_ENABLED: "EXTENDED_KNOWLEDGE_ENABLED",
};
export var RuleConfiguration;
(function (RuleConfiguration) {
    RuleConfiguration.visit = (value, visitor) => {
        if (value.contentBlockerRule !== undefined)
            return visitor.contentBlockerRule(value.contentBlockerRule);
        if (value.contentRetrievalRule !== undefined)
            return visitor.contentRetrievalRule(value.contentRetrievalRule);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(RuleConfiguration || (RuleConfiguration = {}));
export const RuleType = {
    CONTENT_BLOCKER_RULE: "CONTENT_BLOCKER_RULE",
    CONTENT_RETRIEVAL_RULE: "CONTENT_RETRIEVAL_RULE",
};
export const APISchemaFilterSensitiveLog = (obj) => {
    if (obj.payload !== undefined)
        return { payload: SENSITIVE_STRING };
    if (obj.s3 !== undefined)
        return { s3: obj.s3 };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const EncryptionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.kmsKeyId && { kmsKeyId: SENSITIVE_STRING }),
});
export const CreateApplicationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionConfiguration && {
        encryptionConfiguration: EncryptionConfigurationFilterSensitiveLog(obj.encryptionConfiguration),
    }),
});
export const DataAccessorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.authenticationDetail && { authenticationDetail: obj.authenticationDetail }),
});
export const ListDataAccessorsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.dataAccessors && { dataAccessors: obj.dataAccessors.map((item) => DataAccessorFilterSensitiveLog(item)) }),
});
export const GetApplicationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionConfiguration && {
        encryptionConfiguration: EncryptionConfigurationFilterSensitiveLog(obj.encryptionConfiguration),
    }),
});
export const CustomPluginConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.apiSchema && { apiSchema: APISchemaFilterSensitiveLog(obj.apiSchema) }),
});
export const CreatePluginRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.authConfiguration && { authConfiguration: obj.authConfiguration }),
    ...(obj.customPluginConfiguration && {
        customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration),
    }),
});
export const GetPluginResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.authConfiguration && { authConfiguration: obj.authConfiguration }),
    ...(obj.customPluginConfiguration && {
        customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration),
    }),
});
export const UpdatePluginRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.customPluginConfiguration && {
        customPluginConfiguration: CustomPluginConfigurationFilterSensitiveLog(obj.customPluginConfiguration),
    }),
    ...(obj.authConfiguration && { authConfiguration: obj.authConfiguration }),
});
export const ChatOutputStreamFilterSensitiveLog = (obj) => {
    if (obj.textEvent !== undefined)
        return { textEvent: obj.textEvent };
    if (obj.metadataEvent !== undefined)
        return { metadataEvent: obj.metadataEvent };
    if (obj.actionReviewEvent !== undefined)
        return { actionReviewEvent: obj.actionReviewEvent };
    if (obj.failedAttachmentEvent !== undefined)
        return { failedAttachmentEvent: obj.failedAttachmentEvent };
    if (obj.authChallengeRequestEvent !== undefined)
        return { authChallengeRequestEvent: obj.authChallengeRequestEvent };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const ChatOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.outputStream && { outputStream: "STREAMING_CONTENT" }),
});
