import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { DocumentType as __DocumentType } from "@smithy/types";
import { QBusinessServiceException as __BaseException } from "./QBusinessServiceException";
export declare const MemberRelation: {
  readonly AND: "AND";
  readonly OR: "OR";
};
export type MemberRelation =
  (typeof MemberRelation)[keyof typeof MemberRelation];
export declare const ReadAccessType: {
  readonly ALLOW: "ALLOW";
  readonly DENY: "DENY";
};
export type ReadAccessType =
  (typeof ReadAccessType)[keyof typeof ReadAccessType];
export declare const MembershipType: {
  readonly DATASOURCE: "DATASOURCE";
  readonly INDEX: "INDEX";
};
export type MembershipType =
  (typeof MembershipType)[keyof typeof MembershipType];
export interface PrincipalGroup {
  name?: string | undefined;
  access: ReadAccessType | undefined;
  membershipType?: MembershipType | undefined;
}
export interface PrincipalUser {
  id?: string | undefined;
  access: ReadAccessType | undefined;
  membershipType?: MembershipType | undefined;
}
export type Principal =
  | Principal.GroupMember
  | Principal.UserMember
  | Principal.$UnknownMember;
export declare namespace Principal {
  interface UserMember {
    user: PrincipalUser;
    group?: never;
    $unknown?: never;
  }
  interface GroupMember {
    user?: never;
    group: PrincipalGroup;
    $unknown?: never;
  }
  interface $UnknownMember {
    user?: never;
    group?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    user: (value: PrincipalUser) => T;
    group: (value: PrincipalGroup) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Principal, visitor: Visitor<T>) => T;
}
export interface AccessControl {
  principals: Principal[] | undefined;
  memberRelation?: MemberRelation | undefined;
}
export interface AccessConfiguration {
  accessControls: AccessControl[] | undefined;
  memberRelation?: MemberRelation | undefined;
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export type DocumentAttributeValue =
  | DocumentAttributeValue.DateValueMember
  | DocumentAttributeValue.LongValueMember
  | DocumentAttributeValue.StringListValueMember
  | DocumentAttributeValue.StringValueMember
  | DocumentAttributeValue.$UnknownMember;
export declare namespace DocumentAttributeValue {
  interface StringValueMember {
    stringValue: string;
    stringListValue?: never;
    longValue?: never;
    dateValue?: never;
    $unknown?: never;
  }
  interface StringListValueMember {
    stringValue?: never;
    stringListValue: string[];
    longValue?: never;
    dateValue?: never;
    $unknown?: never;
  }
  interface LongValueMember {
    stringValue?: never;
    stringListValue?: never;
    longValue: number;
    dateValue?: never;
    $unknown?: never;
  }
  interface DateValueMember {
    stringValue?: never;
    stringListValue?: never;
    longValue?: never;
    dateValue: Date;
    $unknown?: never;
  }
  interface $UnknownMember {
    stringValue?: never;
    stringListValue?: never;
    longValue?: never;
    dateValue?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    stringValue: (value: string) => T;
    stringListValue: (value: string[]) => T;
    longValue: (value: number) => T;
    dateValue: (value: Date) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: DocumentAttributeValue, visitor: Visitor<T>) => T;
}
export interface DocumentAttribute {
  name: string | undefined;
  value: DocumentAttributeValue | undefined;
}
export interface ActionExecutionPayloadField {
  value: __DocumentType | undefined;
}
export interface ActionExecution {
  pluginId: string | undefined;
  payload: Record<string, ActionExecutionPayloadField> | undefined;
  payloadFieldNameSeparator: string | undefined;
}
export interface ActionExecutionEvent {
  pluginId: string | undefined;
  payload: Record<string, ActionExecutionPayloadField> | undefined;
  payloadFieldNameSeparator: string | undefined;
}
export declare const ActionPayloadFieldType: {
  readonly ARRAY: "ARRAY";
  readonly BOOLEAN: "BOOLEAN";
  readonly NUMBER: "NUMBER";
  readonly STRING: "STRING";
};
export type ActionPayloadFieldType =
  (typeof ActionPayloadFieldType)[keyof typeof ActionPayloadFieldType];
export interface ActionReviewPayloadFieldAllowedValue {
  value?: __DocumentType | undefined;
  displayValue?: __DocumentType | undefined;
}
export interface ActionReviewPayloadField {
  displayName?: string | undefined;
  displayOrder?: number | undefined;
  displayDescription?: string | undefined;
  type?: ActionPayloadFieldType | undefined;
  value?: __DocumentType | undefined;
  allowedValues?: ActionReviewPayloadFieldAllowedValue[] | undefined;
  allowedFormat?: string | undefined;
  arrayItemJsonSchema?: __DocumentType | undefined;
  required?: boolean | undefined;
}
export declare const PluginType: {
  readonly ASANA: "ASANA";
  readonly ATLASSIAN_CONFLUENCE: "ATLASSIAN_CONFLUENCE";
  readonly CUSTOM: "CUSTOM";
  readonly GOOGLE_CALENDAR: "GOOGLE_CALENDAR";
  readonly JIRA: "JIRA";
  readonly JIRA_CLOUD: "JIRA_CLOUD";
  readonly MICROSOFT_EXCHANGE: "MICROSOFT_EXCHANGE";
  readonly MICROSOFT_TEAMS: "MICROSOFT_TEAMS";
  readonly PAGERDUTY_ADVANCE: "PAGERDUTY_ADVANCE";
  readonly QUICKSIGHT: "QUICKSIGHT";
  readonly SALESFORCE: "SALESFORCE";
  readonly SALESFORCE_CRM: "SALESFORCE_CRM";
  readonly SERVICENOW_NOW_PLATFORM: "SERVICENOW_NOW_PLATFORM";
  readonly SERVICE_NOW: "SERVICE_NOW";
  readonly SMARTSHEET: "SMARTSHEET";
  readonly ZENDESK: "ZENDESK";
  readonly ZENDESK_SUITE: "ZENDESK_SUITE";
};
export type PluginType = (typeof PluginType)[keyof typeof PluginType];
export interface ActionReview {
  pluginId?: string | undefined;
  pluginType?: PluginType | undefined;
  payload?: Record<string, ActionReviewPayloadField> | undefined;
  payloadFieldNameSeparator?: string | undefined;
}
export interface ActionReviewEvent {
  conversationId?: string | undefined;
  userMessageId?: string | undefined;
  systemMessageId?: string | undefined;
  pluginId?: string | undefined;
  pluginType?: PluginType | undefined;
  payload?: Record<string, ActionReviewPayloadField> | undefined;
  payloadFieldNameSeparator?: string | undefined;
}
export interface ActionSummary {
  actionIdentifier?: string | undefined;
  displayName?: string | undefined;
  instructionExample?: string | undefined;
  description?: string | undefined;
}
export interface S3 {
  bucket: string | undefined;
  key: string | undefined;
}
export type APISchema =
  | APISchema.PayloadMember
  | APISchema.S3Member
  | APISchema.$UnknownMember;
export declare namespace APISchema {
  interface PayloadMember {
    payload: string;
    s3?: never;
    $unknown?: never;
  }
  interface S3Member {
    payload?: never;
    s3: S3;
    $unknown?: never;
  }
  interface $UnknownMember {
    payload?: never;
    s3?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    payload: (value: string) => T;
    s3: (value: S3) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: APISchema, visitor: Visitor<T>) => T;
}
export declare const APISchemaType: {
  readonly OPEN_API_V3: "OPEN_API_V3";
};
export type APISchemaType = (typeof APISchemaType)[keyof typeof APISchemaType];
export declare const IdentityType: {
  readonly ANONYMOUS: "ANONYMOUS";
  readonly AWS_IAM_IDC: "AWS_IAM_IDC";
  readonly AWS_IAM_IDP_OIDC: "AWS_IAM_IDP_OIDC";
  readonly AWS_IAM_IDP_SAML: "AWS_IAM_IDP_SAML";
  readonly AWS_QUICKSIGHT_IDP: "AWS_QUICKSIGHT_IDP";
};
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export interface QuickSightConfiguration {
  clientNamespace: string | undefined;
}
export declare const ApplicationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly UPDATING: "UPDATING";
};
export type ApplicationStatus =
  (typeof ApplicationStatus)[keyof typeof ApplicationStatus];
export interface Application {
  displayName?: string | undefined;
  applicationId?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  status?: ApplicationStatus | undefined;
  identityType?: IdentityType | undefined;
  quickSightConfiguration?: QuickSightConfiguration | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceType: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const AttachmentsControlMode: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AttachmentsControlMode =
  (typeof AttachmentsControlMode)[keyof typeof AttachmentsControlMode];
export interface AttachmentsConfiguration {
  attachmentsControlMode: AttachmentsControlMode | undefined;
}
export interface EncryptionConfiguration {
  kmsKeyId?: string | undefined;
}
export declare const PersonalizationControlMode: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type PersonalizationControlMode =
  (typeof PersonalizationControlMode)[keyof typeof PersonalizationControlMode];
export interface PersonalizationConfiguration {
  personalizationControlMode: PersonalizationControlMode | undefined;
}
export declare const QAppsControlMode: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type QAppsControlMode =
  (typeof QAppsControlMode)[keyof typeof QAppsControlMode];
export interface QAppsConfiguration {
  qAppsControlMode: QAppsControlMode | undefined;
}
export interface Tag {
  key: string | undefined;
  value: string | undefined;
}
export interface CreateApplicationRequest {
  displayName: string | undefined;
  roleArn?: string | undefined;
  identityType?: IdentityType | undefined;
  iamIdentityProviderArn?: string | undefined;
  identityCenterInstanceArn?: string | undefined;
  clientIdsForOIDC?: string[] | undefined;
  description?: string | undefined;
  encryptionConfiguration?: EncryptionConfiguration | undefined;
  tags?: Tag[] | undefined;
  clientToken?: string | undefined;
  attachmentsConfiguration?: AttachmentsConfiguration | undefined;
  qAppsConfiguration?: QAppsConfiguration | undefined;
  personalizationConfiguration?: PersonalizationConfiguration | undefined;
  quickSightConfiguration?: QuickSightConfiguration | undefined;
}
export interface CreateApplicationResponse {
  applicationId?: string | undefined;
  applicationArn?: string | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceType: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  resourceId: string | undefined;
  resourceType: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  name: string | undefined;
  message: string | undefined;
}
export declare const ValidationExceptionReason: {
  readonly CANNOT_PARSE: "CANNOT_PARSE";
  readonly FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED";
  readonly UNKNOWN_OPERATION: "UNKNOWN_OPERATION";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  reason: ValidationExceptionReason | undefined;
  fields?: ValidationExceptionField[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DataAccessorIdcTrustedTokenIssuerConfiguration {
  idcTrustedTokenIssuerArn: string | undefined;
}
export type DataAccessorAuthenticationConfiguration =
  | DataAccessorAuthenticationConfiguration.IdcTrustedTokenIssuerConfigurationMember
  | DataAccessorAuthenticationConfiguration.$UnknownMember;
export declare namespace DataAccessorAuthenticationConfiguration {
  interface IdcTrustedTokenIssuerConfigurationMember {
    idcTrustedTokenIssuerConfiguration: DataAccessorIdcTrustedTokenIssuerConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    idcTrustedTokenIssuerConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    idcTrustedTokenIssuerConfiguration: (
      value: DataAccessorIdcTrustedTokenIssuerConfiguration
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: DataAccessorAuthenticationConfiguration,
    visitor: Visitor<T>
  ) => T;
}
export declare const DataAccessorAuthenticationType: {
  readonly AWS_IAM_IDC_AUTH_CODE: "AWS_IAM_IDC_AUTH_CODE";
  readonly AWS_IAM_IDC_TTI: "AWS_IAM_IDC_TTI";
};
export type DataAccessorAuthenticationType =
  (typeof DataAccessorAuthenticationType)[keyof typeof DataAccessorAuthenticationType];
export interface DataAccessorAuthenticationDetail {
  authenticationType: DataAccessorAuthenticationType | undefined;
  authenticationConfiguration?:
    | DataAccessorAuthenticationConfiguration
    | undefined;
  externalIds?: string[] | undefined;
}
export interface CreateDataAccessorResponse {
  dataAccessorId: string | undefined;
  idcApplicationArn: string | undefined;
  dataAccessorArn: string | undefined;
}
export interface DeleteDataAccessorRequest {
  applicationId: string | undefined;
  dataAccessorId: string | undefined;
}
export interface DeleteDataAccessorResponse {}
export interface GetDataAccessorRequest {
  applicationId: string | undefined;
  dataAccessorId: string | undefined;
}
export interface ListDataAccessorsRequest {
  applicationId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface DataAccessor {
  displayName?: string | undefined;
  dataAccessorId?: string | undefined;
  dataAccessorArn?: string | undefined;
  idcApplicationArn?: string | undefined;
  principal?: string | undefined;
  authenticationDetail?: DataAccessorAuthenticationDetail | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export interface ListDataAccessorsResponse {
  dataAccessors?: DataAccessor[] | undefined;
  nextToken?: string | undefined;
}
export interface UpdateDataAccessorResponse {}
export interface DeleteApplicationRequest {
  applicationId: string | undefined;
}
export interface DeleteApplicationResponse {}
export interface GetApplicationRequest {
  applicationId: string | undefined;
}
export interface AppliedAttachmentsConfiguration {
  attachmentsControlMode?: AttachmentsControlMode | undefined;
}
export declare const AutoSubscriptionStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AutoSubscriptionStatus =
  (typeof AutoSubscriptionStatus)[keyof typeof AutoSubscriptionStatus];
export declare const SubscriptionType: {
  readonly Q_BUSINESS: "Q_BUSINESS";
  readonly Q_LITE: "Q_LITE";
};
export type SubscriptionType =
  (typeof SubscriptionType)[keyof typeof SubscriptionType];
export interface AutoSubscriptionConfiguration {
  autoSubscribe: AutoSubscriptionStatus | undefined;
  defaultSubscriptionType?: SubscriptionType | undefined;
}
export declare const ErrorCode: {
  readonly INTERNAL_ERROR: "InternalError";
  readonly INVALID_REQUEST: "InvalidRequest";
  readonly RESOURCE_INACTIVE: "ResourceInactive";
  readonly RESOURCE_NOT_FOUND: "ResourceNotFound";
};
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];
export interface ErrorDetail {
  errorMessage?: string | undefined;
  errorCode?: ErrorCode | undefined;
}
export interface GetApplicationResponse {
  displayName?: string | undefined;
  applicationId?: string | undefined;
  applicationArn?: string | undefined;
  identityType?: IdentityType | undefined;
  iamIdentityProviderArn?: string | undefined;
  identityCenterApplicationArn?: string | undefined;
  roleArn?: string | undefined;
  status?: ApplicationStatus | undefined;
  description?: string | undefined;
  encryptionConfiguration?: EncryptionConfiguration | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  error?: ErrorDetail | undefined;
  attachmentsConfiguration?: AppliedAttachmentsConfiguration | undefined;
  qAppsConfiguration?: QAppsConfiguration | undefined;
  personalizationConfiguration?: PersonalizationConfiguration | undefined;
  autoSubscriptionConfiguration?: AutoSubscriptionConfiguration | undefined;
  clientIdsForOIDC?: string[] | undefined;
  quickSightConfiguration?: QuickSightConfiguration | undefined;
}
export interface IndexCapacityConfiguration {
  units?: number | undefined;
}
export declare const IndexType: {
  readonly ENTERPRISE: "ENTERPRISE";
  readonly STARTER: "STARTER";
};
export type IndexType = (typeof IndexType)[keyof typeof IndexType];
export interface CreateIndexRequest {
  applicationId: string | undefined;
  displayName: string | undefined;
  description?: string | undefined;
  type?: IndexType | undefined;
  tags?: Tag[] | undefined;
  capacityConfiguration?: IndexCapacityConfiguration | undefined;
  clientToken?: string | undefined;
}
export interface CreateIndexResponse {
  indexId?: string | undefined;
  indexArn?: string | undefined;
}
export declare const DocumentEnrichmentConditionOperator: {
  readonly BEGINS_WITH: "BEGINS_WITH";
  readonly CONTAINS: "CONTAINS";
  readonly EQUALS: "EQUALS";
  readonly EXISTS: "EXISTS";
  readonly GREATER_THAN: "GREATER_THAN";
  readonly GREATER_THAN_OR_EQUALS: "GREATER_THAN_OR_EQUALS";
  readonly LESS_THAN: "LESS_THAN";
  readonly LESS_THAN_OR_EQUALS: "LESS_THAN_OR_EQUALS";
  readonly NOT_CONTAINS: "NOT_CONTAINS";
  readonly NOT_EQUALS: "NOT_EQUALS";
  readonly NOT_EXISTS: "NOT_EXISTS";
};
export type DocumentEnrichmentConditionOperator =
  (typeof DocumentEnrichmentConditionOperator)[keyof typeof DocumentEnrichmentConditionOperator];
export interface DocumentAttributeCondition {
  key: string | undefined;
  operator: DocumentEnrichmentConditionOperator | undefined;
  value?: DocumentAttributeValue | undefined;
}
export declare const DocumentContentOperator: {
  readonly DELETE: "DELETE";
};
export type DocumentContentOperator =
  (typeof DocumentContentOperator)[keyof typeof DocumentContentOperator];
export declare const AttributeValueOperator: {
  readonly DELETE: "DELETE";
};
export type AttributeValueOperator =
  (typeof AttributeValueOperator)[keyof typeof AttributeValueOperator];
export interface DocumentAttributeTarget {
  key: string | undefined;
  value?: DocumentAttributeValue | undefined;
  attributeValueOperator?: AttributeValueOperator | undefined;
}
export interface InlineDocumentEnrichmentConfiguration {
  condition?: DocumentAttributeCondition | undefined;
  target?: DocumentAttributeTarget | undefined;
  documentContentOperator?: DocumentContentOperator | undefined;
}
export interface HookConfiguration {
  invocationCondition?: DocumentAttributeCondition | undefined;
  lambdaArn?: string | undefined;
  s3BucketName?: string | undefined;
  roleArn?: string | undefined;
}
export interface DocumentEnrichmentConfiguration {
  inlineConfigurations?: InlineDocumentEnrichmentConfiguration[] | undefined;
  preExtractionHookConfiguration?: HookConfiguration | undefined;
  postExtractionHookConfiguration?: HookConfiguration | undefined;
}
export declare const AudioExtractionStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AudioExtractionStatus =
  (typeof AudioExtractionStatus)[keyof typeof AudioExtractionStatus];
export interface AudioExtractionConfiguration {
  audioExtractionStatus: AudioExtractionStatus | undefined;
}
export declare const ImageExtractionStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ImageExtractionStatus =
  (typeof ImageExtractionStatus)[keyof typeof ImageExtractionStatus];
export interface ImageExtractionConfiguration {
  imageExtractionStatus: ImageExtractionStatus | undefined;
}
export declare const VideoExtractionStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type VideoExtractionStatus =
  (typeof VideoExtractionStatus)[keyof typeof VideoExtractionStatus];
export interface VideoExtractionConfiguration {
  videoExtractionStatus: VideoExtractionStatus | undefined;
}
export interface MediaExtractionConfiguration {
  imageExtractionConfiguration?: ImageExtractionConfiguration | undefined;
  audioExtractionConfiguration?: AudioExtractionConfiguration | undefined;
  videoExtractionConfiguration?: VideoExtractionConfiguration | undefined;
}
export interface DataSourceVpcConfiguration {
  subnetIds: string[] | undefined;
  securityGroupIds: string[] | undefined;
}
export interface CreateDataSourceRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  displayName: string | undefined;
  configuration: __DocumentType | undefined;
  vpcConfiguration?: DataSourceVpcConfiguration | undefined;
  description?: string | undefined;
  tags?: Tag[] | undefined;
  syncSchedule?: string | undefined;
  roleArn?: string | undefined;
  clientToken?: string | undefined;
  documentEnrichmentConfiguration?: DocumentEnrichmentConfiguration | undefined;
  mediaExtractionConfiguration?: MediaExtractionConfiguration | undefined;
}
export interface CreateDataSourceResponse {
  dataSourceId?: string | undefined;
  dataSourceArn?: string | undefined;
}
export interface DeleteDataSourceRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  dataSourceId: string | undefined;
}
export interface DeleteDataSourceResponse {}
export interface GetDataSourceRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  dataSourceId: string | undefined;
}
export declare const DataSourceStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly PENDING_CREATION: "PENDING_CREATION";
  readonly UPDATING: "UPDATING";
};
export type DataSourceStatus =
  (typeof DataSourceStatus)[keyof typeof DataSourceStatus];
export interface GetDataSourceResponse {
  applicationId?: string | undefined;
  indexId?: string | undefined;
  dataSourceId?: string | undefined;
  dataSourceArn?: string | undefined;
  displayName?: string | undefined;
  type?: string | undefined;
  configuration?: __DocumentType | undefined;
  vpcConfiguration?: DataSourceVpcConfiguration | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  description?: string | undefined;
  status?: DataSourceStatus | undefined;
  syncSchedule?: string | undefined;
  roleArn?: string | undefined;
  error?: ErrorDetail | undefined;
  documentEnrichmentConfiguration?: DocumentEnrichmentConfiguration | undefined;
  mediaExtractionConfiguration?: MediaExtractionConfiguration | undefined;
}
export interface ListDataSourcesRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface DataSource {
  displayName?: string | undefined;
  dataSourceId?: string | undefined;
  type?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  status?: DataSourceStatus | undefined;
}
export interface ListDataSourcesResponse {
  dataSources?: DataSource[] | undefined;
  nextToken?: string | undefined;
}
export interface UpdateDataSourceRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  dataSourceId: string | undefined;
  displayName?: string | undefined;
  configuration?: __DocumentType | undefined;
  vpcConfiguration?: DataSourceVpcConfiguration | undefined;
  description?: string | undefined;
  syncSchedule?: string | undefined;
  roleArn?: string | undefined;
  documentEnrichmentConfiguration?: DocumentEnrichmentConfiguration | undefined;
  mediaExtractionConfiguration?: MediaExtractionConfiguration | undefined;
}
export interface UpdateDataSourceResponse {}
export interface DeleteIndexRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
}
export interface DeleteIndexResponse {}
export interface GetIndexRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
}
export declare const Status: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type Status = (typeof Status)[keyof typeof Status];
export declare const AttributeType: {
  readonly DATE: "DATE";
  readonly NUMBER: "NUMBER";
  readonly STRING: "STRING";
  readonly STRING_LIST: "STRING_LIST";
};
export type AttributeType = (typeof AttributeType)[keyof typeof AttributeType];
export interface DocumentAttributeConfiguration {
  name?: string | undefined;
  type?: AttributeType | undefined;
  search?: Status | undefined;
}
export interface TextDocumentStatistics {
  indexedTextBytes?: number | undefined;
  indexedTextDocumentCount?: number | undefined;
}
export interface IndexStatistics {
  textDocumentStatistics?: TextDocumentStatistics | undefined;
}
export declare const IndexStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly UPDATING: "UPDATING";
};
export type IndexStatus = (typeof IndexStatus)[keyof typeof IndexStatus];
export interface GetIndexResponse {
  applicationId?: string | undefined;
  indexId?: string | undefined;
  displayName?: string | undefined;
  indexArn?: string | undefined;
  status?: IndexStatus | undefined;
  type?: IndexType | undefined;
  description?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  capacityConfiguration?: IndexCapacityConfiguration | undefined;
  documentAttributeConfigurations?:
    | DocumentAttributeConfiguration[]
    | undefined;
  error?: ErrorDetail | undefined;
  indexStatistics?: IndexStatistics | undefined;
}
export interface ListIndicesRequest {
  applicationId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface Index {
  displayName?: string | undefined;
  indexId?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  status?: IndexStatus | undefined;
}
export interface ListIndicesResponse {
  nextToken?: string | undefined;
  indices?: Index[] | undefined;
}
export interface UpdateIndexRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  capacityConfiguration?: IndexCapacityConfiguration | undefined;
  documentAttributeConfigurations?:
    | DocumentAttributeConfiguration[]
    | undefined;
}
export interface UpdateIndexResponse {}
export interface ListApplicationsRequest {
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListApplicationsResponse {
  nextToken?: string | undefined;
  applications?: Application[] | undefined;
}
export interface BasicAuthConfiguration {
  secretArn: string | undefined;
  roleArn: string | undefined;
}
export interface IdcAuthConfiguration {
  idcApplicationArn: string | undefined;
  roleArn: string | undefined;
}
export interface NoAuthConfiguration {}
export interface OAuth2ClientCredentialConfiguration {
  secretArn: string | undefined;
  roleArn: string | undefined;
  authorizationUrl?: string | undefined;
  tokenUrl?: string | undefined;
}
export type PluginAuthConfiguration =
  | PluginAuthConfiguration.BasicAuthConfigurationMember
  | PluginAuthConfiguration.IdcAuthConfigurationMember
  | PluginAuthConfiguration.NoAuthConfigurationMember
  | PluginAuthConfiguration.OAuth2ClientCredentialConfigurationMember
  | PluginAuthConfiguration.$UnknownMember;
export declare namespace PluginAuthConfiguration {
  interface BasicAuthConfigurationMember {
    basicAuthConfiguration: BasicAuthConfiguration;
    oAuth2ClientCredentialConfiguration?: never;
    noAuthConfiguration?: never;
    idcAuthConfiguration?: never;
    $unknown?: never;
  }
  interface OAuth2ClientCredentialConfigurationMember {
    basicAuthConfiguration?: never;
    oAuth2ClientCredentialConfiguration: OAuth2ClientCredentialConfiguration;
    noAuthConfiguration?: never;
    idcAuthConfiguration?: never;
    $unknown?: never;
  }
  interface NoAuthConfigurationMember {
    basicAuthConfiguration?: never;
    oAuth2ClientCredentialConfiguration?: never;
    noAuthConfiguration: NoAuthConfiguration;
    idcAuthConfiguration?: never;
    $unknown?: never;
  }
  interface IdcAuthConfigurationMember {
    basicAuthConfiguration?: never;
    oAuth2ClientCredentialConfiguration?: never;
    noAuthConfiguration?: never;
    idcAuthConfiguration: IdcAuthConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    basicAuthConfiguration?: never;
    oAuth2ClientCredentialConfiguration?: never;
    noAuthConfiguration?: never;
    idcAuthConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    basicAuthConfiguration: (value: BasicAuthConfiguration) => T;
    oAuth2ClientCredentialConfiguration: (
      value: OAuth2ClientCredentialConfiguration
    ) => T;
    noAuthConfiguration: (value: NoAuthConfiguration) => T;
    idcAuthConfiguration: (value: IdcAuthConfiguration) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: PluginAuthConfiguration, visitor: Visitor<T>) => T;
}
export interface CustomPluginConfiguration {
  description: string | undefined;
  apiSchemaType: APISchemaType | undefined;
  apiSchema?: APISchema | undefined;
}
export interface CreatePluginRequest {
  applicationId: string | undefined;
  displayName: string | undefined;
  type: PluginType | undefined;
  authConfiguration: PluginAuthConfiguration | undefined;
  serverUrl?: string | undefined;
  customPluginConfiguration?: CustomPluginConfiguration | undefined;
  tags?: Tag[] | undefined;
  clientToken?: string | undefined;
}
export declare const PluginBuildStatus: {
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
  readonly READY: "READY";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
};
export type PluginBuildStatus =
  (typeof PluginBuildStatus)[keyof typeof PluginBuildStatus];
export interface CreatePluginResponse {
  pluginId?: string | undefined;
  pluginArn?: string | undefined;
  buildStatus?: PluginBuildStatus | undefined;
}
export interface DeletePluginRequest {
  applicationId: string | undefined;
  pluginId: string | undefined;
}
export interface DeletePluginResponse {}
export interface GetPluginRequest {
  applicationId: string | undefined;
  pluginId: string | undefined;
}
export declare const PluginState: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type PluginState = (typeof PluginState)[keyof typeof PluginState];
export interface GetPluginResponse {
  applicationId?: string | undefined;
  pluginId?: string | undefined;
  displayName?: string | undefined;
  type?: PluginType | undefined;
  serverUrl?: string | undefined;
  authConfiguration?: PluginAuthConfiguration | undefined;
  customPluginConfiguration?: CustomPluginConfiguration | undefined;
  buildStatus?: PluginBuildStatus | undefined;
  pluginArn?: string | undefined;
  state?: PluginState | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export interface ListPluginsRequest {
  applicationId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface Plugin {
  pluginId?: string | undefined;
  displayName?: string | undefined;
  type?: PluginType | undefined;
  serverUrl?: string | undefined;
  state?: PluginState | undefined;
  buildStatus?: PluginBuildStatus | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export interface ListPluginsResponse {
  nextToken?: string | undefined;
  plugins?: Plugin[] | undefined;
}
export interface UpdatePluginRequest {
  applicationId: string | undefined;
  pluginId: string | undefined;
  displayName?: string | undefined;
  state?: PluginState | undefined;
  serverUrl?: string | undefined;
  customPluginConfiguration?: CustomPluginConfiguration | undefined;
  authConfiguration?: PluginAuthConfiguration | undefined;
}
export interface UpdatePluginResponse {}
export interface KendraIndexConfiguration {
  indexId: string | undefined;
}
export declare const DocumentAttributeBoostingLevel: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
  readonly NONE: "NONE";
  readonly ONE: "ONE";
  readonly TWO: "TWO";
  readonly VERY_HIGH: "VERY_HIGH";
};
export type DocumentAttributeBoostingLevel =
  (typeof DocumentAttributeBoostingLevel)[keyof typeof DocumentAttributeBoostingLevel];
export interface DateAttributeBoostingConfiguration {
  boostingLevel: DocumentAttributeBoostingLevel | undefined;
  boostingDurationInSeconds?: number | undefined;
}
export declare const NumberAttributeBoostingType: {
  readonly PRIORITIZE_LARGER_VALUES: "PRIORITIZE_LARGER_VALUES";
  readonly PRIORITIZE_SMALLER_VALUES: "PRIORITIZE_SMALLER_VALUES";
};
export type NumberAttributeBoostingType =
  (typeof NumberAttributeBoostingType)[keyof typeof NumberAttributeBoostingType];
export interface NumberAttributeBoostingConfiguration {
  boostingLevel: DocumentAttributeBoostingLevel | undefined;
  boostingType?: NumberAttributeBoostingType | undefined;
}
export declare const StringAttributeValueBoostingLevel: {
  readonly FIVE: "FIVE";
  readonly FOUR: "FOUR";
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
  readonly ONE: "ONE";
  readonly THREE: "THREE";
  readonly TWO: "TWO";
  readonly VERY_HIGH: "VERY_HIGH";
};
export type StringAttributeValueBoostingLevel =
  (typeof StringAttributeValueBoostingLevel)[keyof typeof StringAttributeValueBoostingLevel];
export interface StringAttributeBoostingConfiguration {
  boostingLevel: DocumentAttributeBoostingLevel | undefined;
  attributeValueBoosting?:
    | Record<string, StringAttributeValueBoostingLevel>
    | undefined;
}
export interface StringListAttributeBoostingConfiguration {
  boostingLevel: DocumentAttributeBoostingLevel | undefined;
}
export type DocumentAttributeBoostingConfiguration =
  | DocumentAttributeBoostingConfiguration.DateConfigurationMember
  | DocumentAttributeBoostingConfiguration.NumberConfigurationMember
  | DocumentAttributeBoostingConfiguration.StringConfigurationMember
  | DocumentAttributeBoostingConfiguration.StringListConfigurationMember
  | DocumentAttributeBoostingConfiguration.$UnknownMember;
export declare namespace DocumentAttributeBoostingConfiguration {
  interface NumberConfigurationMember {
    numberConfiguration: NumberAttributeBoostingConfiguration;
    stringConfiguration?: never;
    dateConfiguration?: never;
    stringListConfiguration?: never;
    $unknown?: never;
  }
  interface StringConfigurationMember {
    numberConfiguration?: never;
    stringConfiguration: StringAttributeBoostingConfiguration;
    dateConfiguration?: never;
    stringListConfiguration?: never;
    $unknown?: never;
  }
  interface DateConfigurationMember {
    numberConfiguration?: never;
    stringConfiguration?: never;
    dateConfiguration: DateAttributeBoostingConfiguration;
    stringListConfiguration?: never;
    $unknown?: never;
  }
  interface StringListConfigurationMember {
    numberConfiguration?: never;
    stringConfiguration?: never;
    dateConfiguration?: never;
    stringListConfiguration: StringListAttributeBoostingConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    numberConfiguration?: never;
    stringConfiguration?: never;
    dateConfiguration?: never;
    stringListConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    numberConfiguration: (value: NumberAttributeBoostingConfiguration) => T;
    stringConfiguration: (value: StringAttributeBoostingConfiguration) => T;
    dateConfiguration: (value: DateAttributeBoostingConfiguration) => T;
    stringListConfiguration: (
      value: StringListAttributeBoostingConfiguration
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: DocumentAttributeBoostingConfiguration,
    visitor: Visitor<T>
  ) => T;
}
export interface NativeIndexConfiguration {
  indexId: string | undefined;
  version?: number | undefined;
  boostingOverride?:
    | Record<string, DocumentAttributeBoostingConfiguration>
    | undefined;
}
export type RetrieverConfiguration =
  | RetrieverConfiguration.KendraIndexConfigurationMember
  | RetrieverConfiguration.NativeIndexConfigurationMember
  | RetrieverConfiguration.$UnknownMember;
export declare namespace RetrieverConfiguration {
  interface NativeIndexConfigurationMember {
    nativeIndexConfiguration: NativeIndexConfiguration;
    kendraIndexConfiguration?: never;
    $unknown?: never;
  }
  interface KendraIndexConfigurationMember {
    nativeIndexConfiguration?: never;
    kendraIndexConfiguration: KendraIndexConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    nativeIndexConfiguration?: never;
    kendraIndexConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    nativeIndexConfiguration: (value: NativeIndexConfiguration) => T;
    kendraIndexConfiguration: (value: KendraIndexConfiguration) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: RetrieverConfiguration, visitor: Visitor<T>) => T;
}
export declare const RetrieverType: {
  readonly KENDRA_INDEX: "KENDRA_INDEX";
  readonly NATIVE_INDEX: "NATIVE_INDEX";
};
export type RetrieverType = (typeof RetrieverType)[keyof typeof RetrieverType];
export interface CreateRetrieverRequest {
  applicationId: string | undefined;
  type: RetrieverType | undefined;
  displayName: string | undefined;
  configuration: RetrieverConfiguration | undefined;
  roleArn?: string | undefined;
  clientToken?: string | undefined;
  tags?: Tag[] | undefined;
}
export interface CreateRetrieverResponse {
  retrieverId?: string | undefined;
  retrieverArn?: string | undefined;
}
export interface DeleteRetrieverRequest {
  applicationId: string | undefined;
  retrieverId: string | undefined;
}
export interface DeleteRetrieverResponse {}
export interface GetRetrieverRequest {
  applicationId: string | undefined;
  retrieverId: string | undefined;
}
export declare const RetrieverStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
};
export type RetrieverStatus =
  (typeof RetrieverStatus)[keyof typeof RetrieverStatus];
export interface GetRetrieverResponse {
  applicationId?: string | undefined;
  retrieverId?: string | undefined;
  retrieverArn?: string | undefined;
  type?: RetrieverType | undefined;
  status?: RetrieverStatus | undefined;
  displayName?: string | undefined;
  configuration?: RetrieverConfiguration | undefined;
  roleArn?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export interface ListRetrieversRequest {
  applicationId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface Retriever {
  applicationId?: string | undefined;
  retrieverId?: string | undefined;
  type?: RetrieverType | undefined;
  status?: RetrieverStatus | undefined;
  displayName?: string | undefined;
}
export interface ListRetrieversResponse {
  retrievers?: Retriever[] | undefined;
  nextToken?: string | undefined;
}
export interface UpdateRetrieverRequest {
  applicationId: string | undefined;
  retrieverId: string | undefined;
  configuration?: RetrieverConfiguration | undefined;
  displayName?: string | undefined;
  roleArn?: string | undefined;
}
export interface UpdateRetrieverResponse {}
export interface UpdateApplicationRequest {
  applicationId: string | undefined;
  identityCenterInstanceArn?: string | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  roleArn?: string | undefined;
  attachmentsConfiguration?: AttachmentsConfiguration | undefined;
  qAppsConfiguration?: QAppsConfiguration | undefined;
  personalizationConfiguration?: PersonalizationConfiguration | undefined;
  autoSubscriptionConfiguration?: AutoSubscriptionConfiguration | undefined;
}
export interface UpdateApplicationResponse {}
export declare const BrowserExtension: {
  readonly CHROME: "CHROME";
  readonly FIREFOX: "FIREFOX";
};
export type BrowserExtension =
  (typeof BrowserExtension)[keyof typeof BrowserExtension];
export interface BrowserExtensionConfiguration {
  enabledBrowserExtensions: BrowserExtension[] | undefined;
}
export interface CustomizationConfiguration {
  customCSSUrl?: string | undefined;
  logoUrl?: string | undefined;
  fontUrl?: string | undefined;
  faviconUrl?: string | undefined;
}
export interface OpenIDConnectProviderConfiguration {
  secretsArn: string | undefined;
  secretsRole: string | undefined;
}
export interface SamlProviderConfiguration {
  authenticationUrl: string | undefined;
}
export type IdentityProviderConfiguration =
  | IdentityProviderConfiguration.OpenIDConnectConfigurationMember
  | IdentityProviderConfiguration.SamlConfigurationMember
  | IdentityProviderConfiguration.$UnknownMember;
export declare namespace IdentityProviderConfiguration {
  interface SamlConfigurationMember {
    samlConfiguration: SamlProviderConfiguration;
    openIDConnectConfiguration?: never;
    $unknown?: never;
  }
  interface OpenIDConnectConfigurationMember {
    samlConfiguration?: never;
    openIDConnectConfiguration: OpenIDConnectProviderConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    samlConfiguration?: never;
    openIDConnectConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    samlConfiguration: (value: SamlProviderConfiguration) => T;
    openIDConnectConfiguration: (
      value: OpenIDConnectProviderConfiguration
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: IdentityProviderConfiguration,
    visitor: Visitor<T>
  ) => T;
}
export declare const WebExperienceSamplePromptsControlMode: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type WebExperienceSamplePromptsControlMode =
  (typeof WebExperienceSamplePromptsControlMode)[keyof typeof WebExperienceSamplePromptsControlMode];
export interface CreateWebExperienceRequest {
  applicationId: string | undefined;
  title?: string | undefined;
  subtitle?: string | undefined;
  welcomeMessage?: string | undefined;
  samplePromptsControlMode?: WebExperienceSamplePromptsControlMode | undefined;
  origins?: string[] | undefined;
  roleArn?: string | undefined;
  tags?: Tag[] | undefined;
  clientToken?: string | undefined;
  identityProviderConfiguration?: IdentityProviderConfiguration | undefined;
  browserExtensionConfiguration?: BrowserExtensionConfiguration | undefined;
  customizationConfiguration?: CustomizationConfiguration | undefined;
}
export interface CreateWebExperienceResponse {
  webExperienceId?: string | undefined;
  webExperienceArn?: string | undefined;
}
export interface DeleteWebExperienceRequest {
  applicationId: string | undefined;
  webExperienceId: string | undefined;
}
export interface DeleteWebExperienceResponse {}
export interface GetWebExperienceRequest {
  applicationId: string | undefined;
  webExperienceId: string | undefined;
}
export interface SamlConfiguration {
  metadataXML: string | undefined;
  roleArn: string | undefined;
  userIdAttribute: string | undefined;
  userGroupAttribute?: string | undefined;
}
export type WebExperienceAuthConfiguration =
  | WebExperienceAuthConfiguration.SamlConfigurationMember
  | WebExperienceAuthConfiguration.$UnknownMember;
export declare namespace WebExperienceAuthConfiguration {
  interface SamlConfigurationMember {
    samlConfiguration: SamlConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    samlConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    samlConfiguration: (value: SamlConfiguration) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: WebExperienceAuthConfiguration,
    visitor: Visitor<T>
  ) => T;
}
export declare const WebExperienceStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly FAILED: "FAILED";
  readonly PENDING_AUTH_CONFIG: "PENDING_AUTH_CONFIG";
};
export type WebExperienceStatus =
  (typeof WebExperienceStatus)[keyof typeof WebExperienceStatus];
export interface GetWebExperienceResponse {
  applicationId?: string | undefined;
  webExperienceId?: string | undefined;
  webExperienceArn?: string | undefined;
  defaultEndpoint?: string | undefined;
  status?: WebExperienceStatus | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  title?: string | undefined;
  subtitle?: string | undefined;
  welcomeMessage?: string | undefined;
  samplePromptsControlMode?: WebExperienceSamplePromptsControlMode | undefined;
  origins?: string[] | undefined;
  roleArn?: string | undefined;
  identityProviderConfiguration?: IdentityProviderConfiguration | undefined;
  authenticationConfiguration?: WebExperienceAuthConfiguration | undefined;
  error?: ErrorDetail | undefined;
  browserExtensionConfiguration?: BrowserExtensionConfiguration | undefined;
  customizationConfiguration?: CustomizationConfiguration | undefined;
}
export interface ListWebExperiencesRequest {
  applicationId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface WebExperience {
  webExperienceId?: string | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  defaultEndpoint?: string | undefined;
  status?: WebExperienceStatus | undefined;
}
export interface ListWebExperiencesResponse {
  webExperiences?: WebExperience[] | undefined;
  nextToken?: string | undefined;
}
export interface UpdateWebExperienceRequest {
  applicationId: string | undefined;
  webExperienceId: string | undefined;
  roleArn?: string | undefined;
  authenticationConfiguration?: WebExperienceAuthConfiguration | undefined;
  title?: string | undefined;
  subtitle?: string | undefined;
  welcomeMessage?: string | undefined;
  samplePromptsControlMode?: WebExperienceSamplePromptsControlMode | undefined;
  identityProviderConfiguration?: IdentityProviderConfiguration | undefined;
  origins?: string[] | undefined;
  browserExtensionConfiguration?: BrowserExtensionConfiguration | undefined;
  customizationConfiguration?: CustomizationConfiguration | undefined;
}
export interface UpdateWebExperienceResponse {}
export declare const CreatorModeControl: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type CreatorModeControl =
  (typeof CreatorModeControl)[keyof typeof CreatorModeControl];
export interface AppliedCreatorModeConfiguration {
  creatorModeControl: CreatorModeControl | undefined;
}
export declare const OrchestrationControl: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type OrchestrationControl =
  (typeof OrchestrationControl)[keyof typeof OrchestrationControl];
export interface AppliedOrchestrationConfiguration {
  control: OrchestrationControl | undefined;
}
export interface AssociatedGroup {
  name?: string | undefined;
  type?: MembershipType | undefined;
}
export interface AssociatedUser {
  id?: string | undefined;
  type?: MembershipType | undefined;
}
export declare const PermissionConditionOperator: {
  readonly STRING_EQUALS: "StringEquals";
};
export type PermissionConditionOperator =
  (typeof PermissionConditionOperator)[keyof typeof PermissionConditionOperator];
export interface PermissionCondition {
  conditionOperator: PermissionConditionOperator | undefined;
  conditionKey: string | undefined;
  conditionValues: string[] | undefined;
}
export interface AssociatePermissionRequest {
  applicationId: string | undefined;
  statementId: string | undefined;
  actions: string[] | undefined;
  conditions?: PermissionCondition[] | undefined;
  principal: string | undefined;
}
export interface AssociatePermissionResponse {
  statement?: string | undefined;
}
export interface ConversationSource {
  conversationId: string | undefined;
  attachmentId: string | undefined;
}
export type CopyFromSource =
  | CopyFromSource.ConversationMember
  | CopyFromSource.$UnknownMember;
export declare namespace CopyFromSource {
  interface ConversationMember {
    conversation: ConversationSource;
    $unknown?: never;
  }
  interface $UnknownMember {
    conversation?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    conversation: (value: ConversationSource) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: CopyFromSource, visitor: Visitor<T>) => T;
}
export declare const AttachmentStatus: {
  readonly FAILED: "FAILED";
  readonly SUCCESS: "SUCCESS";
};
export type AttachmentStatus =
  (typeof AttachmentStatus)[keyof typeof AttachmentStatus];
export interface Attachment {
  attachmentId?: string | undefined;
  conversationId?: string | undefined;
  name?: string | undefined;
  copyFrom?: CopyFromSource | undefined;
  fileType?: string | undefined;
  fileSize?: number | undefined;
  md5chksum?: string | undefined;
  createdAt?: Date | undefined;
  status?: AttachmentStatus | undefined;
  error?: ErrorDetail | undefined;
}
export interface AttachmentInput {
  data?: Uint8Array | undefined;
  name?: string | undefined;
  copyFrom?: CopyFromSource | undefined;
}
export interface AttachmentInputEvent {
  attachment?: AttachmentInput | undefined;
}
export interface AttachmentOutput {
  name?: string | undefined;
  status?: AttachmentStatus | undefined;
  error?: ErrorDetail | undefined;
  attachmentId?: string | undefined;
  conversationId?: string | undefined;
}
export declare const AudioExtractionType: {
  readonly SUMMARY: "SUMMARY";
  readonly TRANSCRIPT: "TRANSCRIPT";
};
export type AudioExtractionType =
  (typeof AudioExtractionType)[keyof typeof AudioExtractionType];
export interface AudioSourceDetails {
  mediaId?: string | undefined;
  mediaMimeType?: string | undefined;
  startTimeMilliseconds?: number | undefined;
  endTimeMilliseconds?: number | undefined;
  audioExtractionType?: AudioExtractionType | undefined;
}
export interface AuthChallengeRequest {
  authorizationUrl: string | undefined;
}
export interface AuthChallengeRequestEvent {
  authorizationUrl: string | undefined;
}
export interface AuthChallengeResponse {
  responseMap: Record<string, string> | undefined;
}
export interface AuthChallengeResponseEvent {
  responseMap: Record<string, string> | undefined;
}
export interface DeleteDocument {
  documentId: string | undefined;
}
export interface BatchDeleteDocumentRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  documents: DeleteDocument[] | undefined;
  dataSourceSyncId?: string | undefined;
}
export interface FailedDocument {
  id?: string | undefined;
  error?: ErrorDetail | undefined;
  dataSourceId?: string | undefined;
}
export interface BatchDeleteDocumentResponse {
  failedDocuments?: FailedDocument[] | undefined;
}
export type DocumentContent =
  | DocumentContent.BlobMember
  | DocumentContent.S3Member
  | DocumentContent.$UnknownMember;
export declare namespace DocumentContent {
  interface BlobMember {
    blob: Uint8Array;
    s3?: never;
    $unknown?: never;
  }
  interface S3Member {
    blob?: never;
    s3: S3;
    $unknown?: never;
  }
  interface $UnknownMember {
    blob?: never;
    s3?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    blob: (value: Uint8Array) => T;
    s3: (value: S3) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: DocumentContent, visitor: Visitor<T>) => T;
}
export declare const ContentType: {
  readonly CSV: "CSV";
  readonly HTML: "HTML";
  readonly JSON: "JSON";
  readonly MD: "MD";
  readonly MS_EXCEL: "MS_EXCEL";
  readonly MS_WORD: "MS_WORD";
  readonly PDF: "PDF";
  readonly PLAIN_TEXT: "PLAIN_TEXT";
  readonly PPT: "PPT";
  readonly RTF: "RTF";
  readonly XML: "XML";
  readonly XSLT: "XSLT";
};
export type ContentType = (typeof ContentType)[keyof typeof ContentType];
export interface Document {
  id: string | undefined;
  attributes?: DocumentAttribute[] | undefined;
  content?: DocumentContent | undefined;
  contentType?: ContentType | undefined;
  title?: string | undefined;
  accessConfiguration?: AccessConfiguration | undefined;
  documentEnrichmentConfiguration?: DocumentEnrichmentConfiguration | undefined;
  mediaExtractionConfiguration?: MediaExtractionConfiguration | undefined;
}
export interface BatchPutDocumentRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  documents: Document[] | undefined;
  roleArn?: string | undefined;
  dataSourceSyncId?: string | undefined;
}
export interface BatchPutDocumentResponse {
  failedDocuments?: FailedDocument[] | undefined;
}
export interface BlockedPhrasesConfiguration {
  blockedPhrases?: string[] | undefined;
  systemMessageOverride?: string | undefined;
}
export interface BlockedPhrasesConfigurationUpdate {
  blockedPhrasesToCreateOrUpdate?: string[] | undefined;
  blockedPhrasesToDelete?: string[] | undefined;
  systemMessageOverride?: string | undefined;
}
export interface CancelSubscriptionRequest {
  applicationId: string | undefined;
  subscriptionId: string | undefined;
}
export interface SubscriptionDetails {
  type?: SubscriptionType | undefined;
}
export interface CancelSubscriptionResponse {
  subscriptionArn?: string | undefined;
  currentSubscription?: SubscriptionDetails | undefined;
  nextSubscription?: SubscriptionDetails | undefined;
}
export declare const ChatMode: {
  readonly CREATOR_MODE: "CREATOR_MODE";
  readonly PLUGIN_MODE: "PLUGIN_MODE";
  readonly RETRIEVAL_MODE: "RETRIEVAL_MODE";
};
export type ChatMode = (typeof ChatMode)[keyof typeof ChatMode];
export interface PluginConfiguration {
  pluginId: string | undefined;
}
export type ChatModeConfiguration =
  | ChatModeConfiguration.PluginConfigurationMember
  | ChatModeConfiguration.$UnknownMember;
export declare namespace ChatModeConfiguration {
  interface PluginConfigurationMember {
    pluginConfiguration: PluginConfiguration;
    $unknown?: never;
  }
  interface $UnknownMember {
    pluginConfiguration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    pluginConfiguration: (value: PluginConfiguration) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ChatModeConfiguration, visitor: Visitor<T>) => T;
}
export interface EndOfInputEvent {}
export interface TextInputEvent {
  userMessage: string | undefined;
}
export interface FailedAttachmentEvent {
  conversationId?: string | undefined;
  userMessageId?: string | undefined;
  systemMessageId?: string | undefined;
  attachment?: AttachmentOutput | undefined;
}
export interface SnippetExcerpt {
  text?: string | undefined;
}
export interface ImageSourceDetails {
  mediaId?: string | undefined;
  mediaMimeType?: string | undefined;
}
export declare const VideoExtractionType: {
  readonly SUMMARY: "SUMMARY";
  readonly TRANSCRIPT: "TRANSCRIPT";
};
export type VideoExtractionType =
  (typeof VideoExtractionType)[keyof typeof VideoExtractionType];
export interface VideoSourceDetails {
  mediaId?: string | undefined;
  mediaMimeType?: string | undefined;
  startTimeMilliseconds?: number | undefined;
  endTimeMilliseconds?: number | undefined;
  videoExtractionType?: VideoExtractionType | undefined;
}
export type SourceDetails =
  | SourceDetails.AudioSourceDetailsMember
  | SourceDetails.ImageSourceDetailsMember
  | SourceDetails.VideoSourceDetailsMember
  | SourceDetails.$UnknownMember;
export declare namespace SourceDetails {
  interface ImageSourceDetailsMember {
    imageSourceDetails: ImageSourceDetails;
    audioSourceDetails?: never;
    videoSourceDetails?: never;
    $unknown?: never;
  }
  interface AudioSourceDetailsMember {
    imageSourceDetails?: never;
    audioSourceDetails: AudioSourceDetails;
    videoSourceDetails?: never;
    $unknown?: never;
  }
  interface VideoSourceDetailsMember {
    imageSourceDetails?: never;
    audioSourceDetails?: never;
    videoSourceDetails: VideoSourceDetails;
    $unknown?: never;
  }
  interface $UnknownMember {
    imageSourceDetails?: never;
    audioSourceDetails?: never;
    videoSourceDetails?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    imageSourceDetails: (value: ImageSourceDetails) => T;
    audioSourceDetails: (value: AudioSourceDetails) => T;
    videoSourceDetails: (value: VideoSourceDetails) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: SourceDetails, visitor: Visitor<T>) => T;
}
export interface TextSegment {
  beginOffset?: number | undefined;
  endOffset?: number | undefined;
  snippetExcerpt?: SnippetExcerpt | undefined;
  mediaId?: string | undefined;
  mediaMimeType?: string | undefined;
  sourceDetails?: SourceDetails | undefined;
}
export interface SourceAttribution {
  title?: string | undefined;
  snippet?: string | undefined;
  url?: string | undefined;
  citationNumber?: number | undefined;
  updatedAt?: Date | undefined;
  textMessageSegments?: TextSegment[] | undefined;
}
export interface MetadataEvent {
  conversationId?: string | undefined;
  userMessageId?: string | undefined;
  systemMessageId?: string | undefined;
  sourceAttributions?: SourceAttribution[] | undefined;
  finalTextMessage?: string | undefined;
}
export declare const SystemMessageType: {
  readonly GROUNDED_RESPONSE: "GROUNDED_RESPONSE";
  readonly RESPONSE: "RESPONSE";
};
export type SystemMessageType =
  (typeof SystemMessageType)[keyof typeof SystemMessageType];
export interface TextOutputEvent {
  systemMessageType?: SystemMessageType | undefined;
  conversationId?: string | undefined;
  userMessageId?: string | undefined;
  systemMessageId?: string | undefined;
  systemMessage?: string | undefined;
}
export type ChatOutputStream =
  | ChatOutputStream.ActionReviewEventMember
  | ChatOutputStream.AuthChallengeRequestEventMember
  | ChatOutputStream.FailedAttachmentEventMember
  | ChatOutputStream.MetadataEventMember
  | ChatOutputStream.TextEventMember
  | ChatOutputStream.$UnknownMember;
export declare namespace ChatOutputStream {
  interface TextEventMember {
    textEvent: TextOutputEvent;
    metadataEvent?: never;
    actionReviewEvent?: never;
    failedAttachmentEvent?: never;
    authChallengeRequestEvent?: never;
    $unknown?: never;
  }
  interface MetadataEventMember {
    textEvent?: never;
    metadataEvent: MetadataEvent;
    actionReviewEvent?: never;
    failedAttachmentEvent?: never;
    authChallengeRequestEvent?: never;
    $unknown?: never;
  }
  interface ActionReviewEventMember {
    textEvent?: never;
    metadataEvent?: never;
    actionReviewEvent: ActionReviewEvent;
    failedAttachmentEvent?: never;
    authChallengeRequestEvent?: never;
    $unknown?: never;
  }
  interface FailedAttachmentEventMember {
    textEvent?: never;
    metadataEvent?: never;
    actionReviewEvent?: never;
    failedAttachmentEvent: FailedAttachmentEvent;
    authChallengeRequestEvent?: never;
    $unknown?: never;
  }
  interface AuthChallengeRequestEventMember {
    textEvent?: never;
    metadataEvent?: never;
    actionReviewEvent?: never;
    failedAttachmentEvent?: never;
    authChallengeRequestEvent: AuthChallengeRequestEvent;
    $unknown?: never;
  }
  interface $UnknownMember {
    textEvent?: never;
    metadataEvent?: never;
    actionReviewEvent?: never;
    failedAttachmentEvent?: never;
    authChallengeRequestEvent?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    textEvent: (value: TextOutputEvent) => T;
    metadataEvent: (value: MetadataEvent) => T;
    actionReviewEvent: (value: ActionReviewEvent) => T;
    failedAttachmentEvent: (value: FailedAttachmentEvent) => T;
    authChallengeRequestEvent: (value: AuthChallengeRequestEvent) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ChatOutputStream, visitor: Visitor<T>) => T;
}
export interface ChatOutput {
  outputStream?: AsyncIterable<ChatOutputStream> | undefined;
}
export declare class ExternalResourceException extends __BaseException {
  readonly name: "ExternalResourceException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ExternalResourceException, __BaseException>
  );
}
export declare class LicenseNotFoundException extends __BaseException {
  readonly name: "LicenseNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LicenseNotFoundException, __BaseException>
  );
}
export declare const ChatResponseConfigurationStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
  readonly UPDATING: "UPDATING";
};
export type ChatResponseConfigurationStatus =
  (typeof ChatResponseConfigurationStatus)[keyof typeof ChatResponseConfigurationStatus];
export interface ChatResponseConfiguration {
  chatResponseConfigurationId: string | undefined;
  chatResponseConfigurationArn: string | undefined;
  displayName: string | undefined;
  responseConfigurationSummary?: string | undefined;
  status: ChatResponseConfigurationStatus | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export declare const ResponseConfigurationType: {
  readonly ALL: "ALL";
};
export type ResponseConfigurationType =
  (typeof ResponseConfigurationType)[keyof typeof ResponseConfigurationType];
export interface InstructionCollection {
  responseLength?: string | undefined;
  targetAudience?: string | undefined;
  perspective?: string | undefined;
  outputStyle?: string | undefined;
  identity?: string | undefined;
  tone?: string | undefined;
  customInstructions?: string | undefined;
  examples?: string | undefined;
}
export interface ResponseConfiguration {
  instructionCollection?: InstructionCollection | undefined;
}
export interface ChatResponseConfigurationDetail {
  responseConfigurations?:
    | Partial<Record<ResponseConfigurationType, ResponseConfiguration>>
    | undefined;
  responseConfigurationSummary?: string | undefined;
  status?: ChatResponseConfigurationStatus | undefined;
  error?: ErrorDetail | undefined;
  updatedAt?: Date | undefined;
}
export interface ChatSyncOutput {
  conversationId?: string | undefined;
  systemMessage?: string | undefined;
  systemMessageId?: string | undefined;
  userMessageId?: string | undefined;
  actionReview?: ActionReview | undefined;
  authChallengeRequest?: AuthChallengeRequest | undefined;
  sourceAttributions?: SourceAttribution[] | undefined;
  failedAttachments?: AttachmentOutput[] | undefined;
}
export interface CheckDocumentAccessRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  userId: string | undefined;
  documentId: string | undefined;
  dataSourceId?: string | undefined;
}
export interface DocumentAclGroup {
  name?: string | undefined;
  type?: MembershipType | undefined;
}
export interface DocumentAclUser {
  id?: string | undefined;
  type?: MembershipType | undefined;
}
export interface DocumentAclCondition {
  memberRelation?: MemberRelation | undefined;
  users?: DocumentAclUser[] | undefined;
  groups?: DocumentAclGroup[] | undefined;
}
export interface DocumentAclMembership {
  memberRelation?: MemberRelation | undefined;
  conditions?: DocumentAclCondition[] | undefined;
}
export interface DocumentAcl {
  allowlist?: DocumentAclMembership | undefined;
  denyList?: DocumentAclMembership | undefined;
}
export interface CheckDocumentAccessResponse {
  userGroups?: AssociatedGroup[] | undefined;
  userAliases?: AssociatedUser[] | undefined;
  hasAccess?: boolean | undefined;
  documentAcl?: DocumentAcl | undefined;
}
export interface ContentBlockerRule {
  systemMessageOverride?: string | undefined;
}
export interface EligibleDataSource {
  indexId?: string | undefined;
  dataSourceId?: string | undefined;
}
export interface ContentRetrievalRule {
  eligibleDataSources?: EligibleDataSource[] | undefined;
}
export interface RetrieverContentSource {
  retrieverId: string | undefined;
}
export type ContentSource =
  | ContentSource.RetrieverMember
  | ContentSource.$UnknownMember;
export declare namespace ContentSource {
  interface RetrieverMember {
    retriever: RetrieverContentSource;
    $unknown?: never;
  }
  interface $UnknownMember {
    retriever?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    retriever: (value: RetrieverContentSource) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ContentSource, visitor: Visitor<T>) => T;
}
export interface Conversation {
  conversationId?: string | undefined;
  title?: string | undefined;
  startTime?: Date | undefined;
}
export interface CreateAnonymousWebExperienceUrlRequest {
  applicationId: string | undefined;
  webExperienceId: string | undefined;
  sessionDurationInMinutes?: number | undefined;
}
export interface CreateAnonymousWebExperienceUrlResponse {
  anonymousUrl?: string | undefined;
}
export interface CreateChatResponseConfigurationRequest {
  applicationId: string | undefined;
  displayName: string | undefined;
  clientToken?: string | undefined;
  responseConfigurations:
    | Partial<Record<ResponseConfigurationType, ResponseConfiguration>>
    | undefined;
  tags?: Tag[] | undefined;
}
export interface CreateChatResponseConfigurationResponse {
  chatResponseConfigurationId: string | undefined;
  chatResponseConfigurationArn: string | undefined;
}
export type SubscriptionPrincipal =
  | SubscriptionPrincipal.GroupMember
  | SubscriptionPrincipal.UserMember
  | SubscriptionPrincipal.$UnknownMember;
export declare namespace SubscriptionPrincipal {
  interface UserMember {
    user: string;
    group?: never;
    $unknown?: never;
  }
  interface GroupMember {
    user?: never;
    group: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    user?: never;
    group?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    user: (value: string) => T;
    group: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: SubscriptionPrincipal, visitor: Visitor<T>) => T;
}
export interface CreateSubscriptionRequest {
  applicationId: string | undefined;
  principal: SubscriptionPrincipal | undefined;
  type: SubscriptionType | undefined;
  clientToken?: string | undefined;
}
export interface CreateSubscriptionResponse {
  subscriptionId?: string | undefined;
  subscriptionArn?: string | undefined;
  currentSubscription?: SubscriptionDetails | undefined;
  nextSubscription?: SubscriptionDetails | undefined;
}
export interface UserAlias {
  indexId?: string | undefined;
  dataSourceId?: string | undefined;
  userId: string | undefined;
}
export interface CreateUserRequest {
  applicationId: string | undefined;
  userId: string | undefined;
  userAliases?: UserAlias[] | undefined;
  clientToken?: string | undefined;
}
export interface CreateUserResponse {}
export interface CreatorModeConfiguration {
  creatorModeControl: CreatorModeControl | undefined;
}
export interface DataSourceSyncJobMetrics {
  documentsAdded?: string | undefined;
  documentsModified?: string | undefined;
  documentsDeleted?: string | undefined;
  documentsFailed?: string | undefined;
  documentsScanned?: string | undefined;
}
export declare const DataSourceSyncJobStatus: {
  readonly ABORTED: "ABORTED";
  readonly FAILED: "FAILED";
  readonly INCOMPLETE: "INCOMPLETE";
  readonly STOPPING: "STOPPING";
  readonly SUCCEEDED: "SUCCEEDED";
  readonly SYNCING: "SYNCING";
  readonly SYNCING_INDEXING: "SYNCING_INDEXING";
};
export type DataSourceSyncJobStatus =
  (typeof DataSourceSyncJobStatus)[keyof typeof DataSourceSyncJobStatus];
export interface DataSourceSyncJob {
  executionId?: string | undefined;
  startTime?: Date | undefined;
  endTime?: Date | undefined;
  status?: DataSourceSyncJobStatus | undefined;
  error?: ErrorDetail | undefined;
  dataSourceErrorCode?: string | undefined;
  metrics?: DataSourceSyncJobMetrics | undefined;
}
export interface DeleteAttachmentRequest {
  applicationId: string | undefined;
  conversationId: string | undefined;
  attachmentId: string | undefined;
  userId?: string | undefined;
}
export interface DeleteAttachmentResponse {}
export interface DeleteChatControlsConfigurationRequest {
  applicationId: string | undefined;
}
export interface DeleteChatControlsConfigurationResponse {}
export interface DeleteChatResponseConfigurationRequest {
  applicationId: string | undefined;
  chatResponseConfigurationId: string | undefined;
}
export interface DeleteChatResponseConfigurationResponse {}
export interface DeleteConversationRequest {
  conversationId: string | undefined;
  applicationId: string | undefined;
  userId?: string | undefined;
}
export interface DeleteConversationResponse {}
export interface DeleteGroupRequest {
  applicationId: string | undefined;
  indexId: string | undefined;
  groupName: string | undefined;
  dataSourceId?: string | undefined;
}
export interface DeleteGroupResponse {}
export interface DeleteUserRequest {
  applicationId: string | undefined;
  userId: string | undefined;
}
export interface DeleteUserResponse {}
export interface DisassociatePermissionRequest {
  applicationId: string | undefined;
  statementId: string | undefined;
}
export interface DisassociatePermissionResponse {}
export declare const DocumentStatus: {
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly DOCUMENT_FAILED_TO_INDEX: "DOCUMENT_FAILED_TO_INDEX";
  readonly FAILED: "FAILED";
  readonly INDEXED: "INDEXED";
  readonly PROCESSING: "PROCESSING";
  readonly RECEIVED: "RECEIVED";
  readonly UPDATED: "UPDATED";
};
export type DocumentStatus =
  (typeof DocumentStatus)[keyof typeof DocumentStatus];
export interface DocumentDetails {
  documentId?: string | undefined;
  status?: DocumentStatus | undefined;
  error?: ErrorDetail | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
}
export interface GetChatControlsConfigurationRequest {
  applicationId: string | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export declare const HallucinationReductionControl: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type HallucinationReductionControl =
  (typeof HallucinationReductionControl)[keyof typeof HallucinationReductionControl];
export interface HallucinationReductionConfiguration {
  hallucinationReductionControl?: HallucinationReductionControl | undefined;
}
export declare const ResponseScope: {
  readonly ENTERPRISE_CONTENT_ONLY: "ENTERPRISE_CONTENT_ONLY";
  readonly EXTENDED_KNOWLEDGE_ENABLED: "EXTENDED_KNOWLEDGE_ENABLED";
};
export type ResponseScope = (typeof ResponseScope)[keyof typeof ResponseScope];
export interface UsersAndGroups {
  userIds?: string[] | undefined;
  userGroups?: string[] | undefined;
}
export type RuleConfiguration =
  | RuleConfiguration.ContentBlockerRuleMember
  | RuleConfiguration.ContentRetrievalRuleMember
  | RuleConfiguration.$UnknownMember;
export declare namespace RuleConfiguration {
  interface ContentBlockerRuleMember {
    contentBlockerRule: ContentBlockerRule;
    contentRetrievalRule?: never;
    $unknown?: never;
  }
  interface ContentRetrievalRuleMember {
    contentBlockerRule?: never;
    contentRetrievalRule: ContentRetrievalRule;
    $unknown?: never;
  }
  interface $UnknownMember {
    contentBlockerRule?: never;
    contentRetrievalRule?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    contentBlockerRule: (value: ContentBlockerRule) => T;
    contentRetrievalRule: (value: ContentRetrievalRule) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: RuleConfiguration, visitor: Visitor<T>) => T;
}
export declare const RuleType: {
  readonly CONTENT_BLOCKER_RULE: "CONTENT_BLOCKER_RULE";
  readonly CONTENT_RETRIEVAL_RULE: "CONTENT_RETRIEVAL_RULE";
};
export type RuleType = (typeof RuleType)[keyof typeof RuleType];
export interface Rule {
  includedUsersAndGroups?: UsersAndGroups | undefined;
  excludedUsersAndGroups?: UsersAndGroups | undefined;
  ruleType: RuleType | undefined;
  ruleConfiguration?: RuleConfiguration | undefined;
}
export interface TopicConfiguration {
  name: string | undefined;
  description?: string | undefined;
  exampleChatMessages?: string[] | undefined;
  rules: Rule[] | undefined;
}
export interface GetChatControlsConfigurationResponse {
  responseScope?: ResponseScope | undefined;
  orchestrationConfiguration?: AppliedOrchestrationConfiguration | undefined;
  blockedPhrases?: BlockedPhrasesConfiguration | undefined;
  topicConfigurations?: TopicConfiguration[] | undefined;
  creatorModeConfiguration?: AppliedCreatorModeConfiguration | undefined;
  nextToken?: string | undefined;
  hallucinationReductionConfiguration?:
    | HallucinationReductionConfiguration
    | undefined;
}
export declare const APISchemaFilterSensitiveLog: (obj: APISchema) => any;
export declare const EncryptionConfigurationFilterSensitiveLog: (
  obj: EncryptionConfiguration
) => any;
export declare const CreateApplicationRequestFilterSensitiveLog: (
  obj: CreateApplicationRequest
) => any;
export declare const DataAccessorFilterSensitiveLog: (obj: DataAccessor) => any;
export declare const ListDataAccessorsResponseFilterSensitiveLog: (
  obj: ListDataAccessorsResponse
) => any;
export declare const GetApplicationResponseFilterSensitiveLog: (
  obj: GetApplicationResponse
) => any;
export declare const CustomPluginConfigurationFilterSensitiveLog: (
  obj: CustomPluginConfiguration
) => any;
export declare const CreatePluginRequestFilterSensitiveLog: (
  obj: CreatePluginRequest
) => any;
export declare const GetPluginResponseFilterSensitiveLog: (
  obj: GetPluginResponse
) => any;
export declare const UpdatePluginRequestFilterSensitiveLog: (
  obj: UpdatePluginRequest
) => any;
export declare const ChatOutputStreamFilterSensitiveLog: (
  obj: ChatOutputStream
) => any;
export declare const ChatOutputFilterSensitiveLog: (obj: ChatOutput) => any;
